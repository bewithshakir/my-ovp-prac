{"version":3,"sources":["ovpApp/components/player/info-panel.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,CAAC,YAAY,EAAE,SAAS,iBAAiB,QAAQ,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,aAAa,MAAM,IAAI,WAAW,aAAa,WAAW,cAAc,OAAO,WAAW,eAAe,MAAM,IAAI,WAAW,YAAY,WAAW,WAAW,MAAM,OAAO,eAAe,QAAQ,WAAW,KAAK,iBAAiB,OAAO,UAAU,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,iBAAiB,YAAY,WAAW,aAAa,IAAI,aAAa,iBAAiB,aAAa,cAAc,OAAO;;AAEjiB,SAAS,gBAAgB,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;AAJhH,CAAC,YAAY;IACT;;;;;;;;;;;;;IAaA,QAAQ,OAAO,yBACV,UAAU,aAAa;QACpB,UAAU;YACN,OAAO;;QAEX,aAAa;QACb,YAAU,CAAA,YAAA;;;;YAEK,SAFG,UAEF,UAAU,SAAS,QAAQ,IAAI,0BAA0B;gBAOrE,gBAAgB,MATF;;gBAGV,QAAQ,OAAO,MAAM,EAAC,UAAA,UAAU,SAAA,SAAS,QAAA,QAAQ,IAAA,IAAI,0BAAA;;;YAW7D,aAdkB,WAAS,CAAA;gBAevB,KAAK;gBACL,OAVO,SAAA,UAAG;oBAWN,IAAI,QAAQ;;oBAVZ,KAAK,UAAU,KAAK;oBACpB,KAAK,cAAc,KAAK;oBACxB,KAAK,eAAe,KAAK;oBACzB,KAAK,cAAc,KAAK;;oBAExB,KAAK,gBAAgB;;oBAErB,IAAM,qBAAqB,SAAS,KAAK,OAAO,iBAAiB;;oBAEjE,KAAK,YAAY,UAAU,YAAA;wBAavB,OAb6B,MAAK,UAAU;;oBAChD,KAAK,aAAa,UAAU,YAAA;wBAexB,OAf8B,MAAK,UAAU;;;oBAEjD,IAAI,kBAAkB,KAAK,QAAQ,MAAM,KAAK,aAAa,IAAI,YAAA;wBAiB3D,OAjBiE;;oBACrE,IAAI,qBAAqB,KAAK,aAAa,IAAI,YAAA;wBAmB3C,OAnBiD;;;oBAErD,KAAK,YAAY,UAAU,YAAM;wBAC7B,MAAK,gBAAgB,CAAC,MAAK;wBAC3B,IAAI,MAAK,eAAe;4BACpB,IAAI,cAAc,MAAK,GAAG,WAAW,MAAM;;;4BAG3C,mBAAmB,MAAM,iBACpB,SAAS,KACT,OAAO,UAAA,KAAG;gCAmBX,OAnBe,CAAC;+BACf,UAAU,MAAK,aACf,IAAI,aACJ,QACA,UAAU,YAAA;gCAiBX,OAjBiB,MAAK,gBAAgB;;;;;eAsBvD;gBACC,KAAK;gBACL,OAnBY,SAAA,eAAG;oBACX,OAAO,KAAK,SAAS,KAAK,MAAM,aAC5B,KAAK,MAAM,UAAU,IAAI,UAAC,UAAQ;wBAmBlC,OAnBuC,SAAS;uBAAM,KAAK;;eAsBpE;gBACC,KAAK;gBACL,OArBS,SAAA,YAAG;oBACR,OAAO,KAAK,SAAS,KAAK,MAAM,UAC5B,KAAK,MAAM,OAAO,IAAI,UAAC,OAAK;wBAqB5B,OArBiC,MAAM;uBAAM,KAAK;;eAwB3D;gBACC,KAAK;gBACL,OAvBK,SAAA,QAAG;oBACJ,IAAI,SAAS,KAAK,WAAW,KAAK,gBAAgB,gBAAgB;oBAClE,OAAU,KAAK,QAAQ,aAAU,wBAAsB;;;;YA2B/D,OA9EkB;;;KAuDzB","file":"ovpApp/components/player/info-panel.js","sourcesContent":["(function () {\n    'use strict';\n\n    /**\n     * infoPanel\n     *\n     * Displays information about the currently playing program in the player controls\n     *\n     * Example Usage:\n     * <info-panel asset=\"$ctrl.someMovieOrTvShow\"></info-panel>\n     *\n     * Bindings:\n     *    asset: ([type]) The program to display information about\n     */\n    angular.module('ovpApp.playerControls')\n        .component('infoPanel', {\n            bindings: {\n                asset: '<'\n            },\n            templateUrl: '/js/ovpApp/components/player/info-panel.html',\n            controller: class InfoPanel {\n                /* @ngInject */\n                constructor($timeout, version, config, rx, createObservableFunction) {\n                    angular.extend(this, {$timeout, version, config, rx, createObservableFunction});\n                }\n\n                $onInit() {\n                    this.onFocus = this.createObservableFunction();\n                    this.onMouseOver = this.createObservableFunction();\n                    this.onMouseLeave = this.createObservableFunction();\n                    this.togglePopup = this.createObservableFunction();\n\n                    this.showInfoPanel = false;\n\n                    const INFO_PANEL_TIMEOUT = parseInt(this.config.playerParameters.infoPopupTimeoutMs);\n\n                    this.onMouseOver.subscribe(() => this.hovered = true);\n                    this.onMouseLeave.subscribe(() => this.hovered = false);\n\n                    let userInteracting = this.onFocus.merge(this.onMouseOver).map(() => true);\n                    let userNotInteracting = this.onMouseLeave.map(() => false);\n\n                    this.togglePopup.subscribe(() => {\n                        this.showInfoPanel = !this.showInfoPanel;\n                        if (this.showInfoPanel) {\n                            let minimumTime = this.rx.Observable.timer(INFO_PANEL_TIMEOUT);\n\n                            // Wait until 500 ms elapse with the user not hovering or focussing\n                            userNotInteracting.merge(userInteracting)\n                                .debounce(500)\n                                .filter(val => !val)\n                                .takeUntil(this.togglePopup)\n                                .zip(minimumTime)\n                                .first()\n                                .subscribe(() => this.showInfoPanel = false);\n                        }\n                    });\n                }\n\n                getDirectors() {\n                    return this.asset && this.asset.directors &&\n                        this.asset.directors.map((director) => director.name).join(' ');\n                }\n\n                getActors() {\n                    return this.asset && this.asset.actors &&\n                        this.asset.actors.map((actor) => actor.name).join(', ');\n                }\n\n                image() {\n                    let suffix = this.hovered || this.showInfoPanel ? '-active.svg' : '.svg';\n                    return `${this.version.appVersion}/images/info-circle${suffix}`;\n                }\n            }\n        });\n})();\n"],"sourceRoot":"/source/"}