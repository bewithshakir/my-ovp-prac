{"version":3,"sources":["ovpApp/directives/grid-list-toggler.js"],"names":[],"mappings":"AAAA;;AAAA,CAAC,YAAY;IACT;;;IAEA,QACK,OAAO,sCAAsC,CAC1C,4BAEH,UAAU,mBAAmB;;;IAGlC,SAAS,kBAAkB;QACvB,IAAI,YAAY;YACZ,kBAAkB;YAClB,YAAY;YACZ,cAAc;YACd,aAAa;YACb,UAAU;YACV,OAAO;gBACH,IAAI;gBACJ,UAAU;;;QAGlB,OAAO;;;;IAIX,SAAS,WAAW,wBAAwB,QAAQ;QAChD,IAAI,KAAK;QACT,GAAG,SAAS;QACZ,GAAG,gBAAgB;;QAEnB;;;;QAIA,SAAS,WAAW;YAChB,IAAI,eAAe,uBAAuB,SAAS,WAAW,GAAG;YACjE,GAAG,QAAQ,aAAa;YACxB,IAAI,MAAM,aAAa,OAAO,UAAU;;YAExC,OAAO,IAAI,YAAY,YAAA;gBADnB,OACyB,IAAI;;;;QAGrC,SAAS,gBAAgB;YACrB,IAAI,oBAAoB,QAAQ,QAAQ;YACxC,OAAO,kBAAkB,SAAS,OAAO;;;QAG7C,SAAS,OAAO,UAAU;YACtB,IAAI,aAAa,GAAG,OAAO;gBACvB,GAAG,QAAQ;gBACX,uBAAuB,SAAS,UAAU,GAAG;;;;KAIxD","file":"ovpApp/directives/grid-list-toggler.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular\n        .module('ovpApp.directives.gridList.toggler', [\n            'ovpApp.directives.focus'\n        ])\n        .directive('gridListToggler', gridListToggler);\n\n    /* @ngInject */\n    function gridListToggler() {\n        var directive = {\n            bindToController: true,\n            controller: Controller,\n            controllerAs: 'vm',\n            templateUrl: '/js/ovpApp/directives/grid-list-toggler.html',\n            restrict: 'E',\n            scope: {\n                id: '=?id',\n                tabIndex: '=?tabIndex'\n            }\n        };\n        return directive;\n    }\n\n    /* @ngInject */\n    function Controller(gridListTogglerService, $scope) {\n        let vm = this;\n        vm.toggle = toggle;\n        vm.hasPagination = hasPagination;\n\n        activate();\n\n        ///////////////////\n\n        function activate() {\n            let registration = gridListTogglerService.register(undefined, vm.id);\n            vm.state = registration.state;\n            let sub = registration.source.subscribe(toggle);\n\n            $scope.$on('$destroy', () => sub.dispose());\n        }\n\n        function hasPagination() {\n            var paginationElement = angular.element('.pagination');\n            return paginationElement.length ? true : false;\n        }\n\n        function toggle(newState) {\n            if (newState !== vm.state) {\n                vm.state = newState;\n                gridListTogglerService.setState(newState, vm.id);\n            }\n        }\n    }\n})();\n"],"sourceRoot":"/source/"}