{"version":3,"sources":["ovpApp/components/header/menu-data.js"],"names":[],"mappings":"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","file":"ovpApp/components/header/menu-data.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular\n        .module('ovpApp.components.header.data', [\n            'ovpApp.services.homePage',\n            'ovpApp.messages',\n            'ovpApp.services.errorCodes',\n            'ovpApp.services.profileService',\n            'ovpApp.oauth',\n            'rx'\n        ])\n        .factory('menuData', menuData);\n\n    /* @ngInject */\n    function menuData(rxhttp, entryService, $q, config, homePage, CAPABILITIES, CAPABILITIES_ERROR_CODES,\n        profileService, $timeout, messages, $log, $rootScope, $state, OauthService, rx, $transitions,\n        errorCodesService) {\n        let service = {\n            getMainMenuItems,\n            _private: {\n                // exposed for unit testing\n                authorizeTab\n            }\n        };\n\n        let models = {};\n        let activeState = '';\n\n        activate();\n\n        return service;\n\n        ////////////////\n\n        function activate() {\n            initModels();\n            trackActiveState();\n        }\n\n        function initModels() {\n            models = {\n                watchTv: {\n                    id: 'livetv',\n                    link: 'ovp.livetv',\n                    disabledMessage: function () {\n                        return errorCodesService.getMessageForCode('WUC-1112');\n                    },\n                    disabledTitle: function () {\n                        return 'Live TV is not available';\n                    },\n                    requires: CAPABILITIES.LIVE,\n                    isSelected: () => activeState.toLowerCase().startsWith('ovp.livetv')\n                },\n                guide: {\n                    id: 'guide',\n                    link: 'ovp.guide',\n                    code: -1,\n                    disabledMessage: function () {\n                        if (this.code &&\n                            (this.code === CAPABILITIES_ERROR_CODES.STB_NONE ||\n                                this.code === CAPABILITIES_ERROR_CODES.STB_UNREACHABLE)) {\n                            return errorCodesService.getMessageForCode('WCM-1006');\n                        } else {\n                            return errorCodesService.getMessageForCode('WGE-1002');\n                        }\n                    },\n                    disabledTitle: function () {\n                        if (this.code &&\n                            (this.code === CAPABILITIES_ERROR_CODES.STB_NONE ||\n                                this.code === CAPABILITIES_ERROR_CODES.STB_UNREACHABLE)) {\n                            return 'Guide unavailable';\n                        } else {\n                            return 'Feature Not Available';\n                        }\n                    },\n                    requires: CAPABILITIES.GUIDE\n                },\n                vodPortal: {\n                    id: 'ondemand',\n                    link: 'ovp.ondemand',\n                    disabledMessage: function () {\n                        return errorCodesService.getMessageForCode('WGE-1002');\n                    },\n                    disabledTitle: function () {\n                        return 'Feature Not Available';\n                    },\n                    requires: CAPABILITIES.ONDEMAND,\n                    isSelected: () => activeState.startsWith('ovp.ondemand') &&\n                        !activeState.startsWith('ovp.ondemand.rent')\n                },\n                dvr: {\n                    id: 'dvr',\n                    link: 'ovp.dvr',\n                    code: -1,\n                    disabledMessage: function () {\n                        if (this.code && (this.code === CAPABILITIES_ERROR_CODES.RDVR_DISABLED ||\n                            this.code === CAPABILITIES_ERROR_CODES.RDVR_UNREACHABLE ||\n                            this.code === CAPABILITIES_ERROR_CODES.RDVR_NONE)) {\n                            return errorCodesService.getMessageForCode('WCM-1008');\n                        } else {\n                            return errorCodesService.getMessageForCode('WCM-1006');\n                        }\n                    },\n                    disabledTitle: function () {\n                        if (this.code && (this.code === CAPABILITIES_ERROR_CODES.RDVR_DISABLED ||\n                            this.code === CAPABILITIES_ERROR_CODES.RDVR_UNREACHABLE ||\n                            this.code === CAPABILITIES_ERROR_CODES.RDVR_NONE)) {\n                            return 'DVR Not Found';\n                        } else {\n                            return 'Feature Not Available';\n                        }\n                    },\n                    requires: CAPABILITIES.RDVR\n                },\n                cdvr: {\n                    id: 'watchAnytime',\n                    link: 'ovp.cdvr',\n                    disabledMessage: function () {\n                        return errorCodesService.getMessageForCode('WGE-1002');\n                    },\n                    disabledTitle:  function () {\n                        return 'Feature Not Available';\n                    },\n                    requires: CAPABILITIES.CDVR\n                },\n                watchLater: {\n                    id: 'watchLater',\n                    link: 'ovp.watchLater',\n                    disabledMessage: function () {\n                        return errorCodesService.getMessageForCode('WGE-1002');\n                    },\n                    disabledTitle:  function () {\n                        return 'Feature Not Available';\n                    },\n                    requires: CAPABILITIES.ONDEMAND\n                },\n                vodStore: {\n                    id: 'store',\n                    link: 'ovp.store',\n                    linkParams: {\n                        category: null,\n                        page: undefined\n                    },\n                    disabledMessage: function () {\n                        return messages.getMessageForCode('MSG-9104');\n                    },\n                    disabledTitle: function () {\n                        return messages.getHeaderForCode('MSG-9104');\n                    },\n                    requires: CAPABILITIES.TVOD,\n                    isSelected: () => activeState.startsWith('ovp.store') ||\n                        activeState.startsWith('ovp.ondemand.rent')\n                },\n                autoComplete: {\n                    id: 'search',\n                    link: 'search.recent',\n                    title: '\\xa0',\n                    requires: CAPABILITIES.SEARCH,\n                    isSelected: () => activeState.startsWith('search'),\n                    disabledMessage: function () {\n                        return errorCodesService.getMessageForCode('WGE-1002');\n                    },\n                    disabledTitle: function () {\n                        return 'Feature Not Available';\n                    }\n                },\n                settings: {\n                    id: 'settings',\n                    link: 'ovp.settings'\n                }\n            };\n\n            // Create default isSelected functions\n            for (let m in models) {\n                if (models.hasOwnProperty(m) && angular.isUndefined(models[m].isSelected)) {\n                    models[m].isSelected = () => activeState.startsWith(models[m].link);\n                }\n            }\n        }\n\n\n        function getMainMenuItems() {\n            return OauthService.isAuthenticated().then(authenticated => {\n                if (authenticated) {\n                    return $q.all([homePage(), authorizeTabs()])\n                        .then(resolved => {\n                            let modelArray = [];\n                            resolved[0].forEach(item => {\n                                let model = models[item.application];\n                                if (model) {\n                                    angular.extend(model, item);\n                                    model.label = model.title;\n                                    if (item.application === 'autoComplete') {\n                                        // We show an icon for search, so we need to override any text,\n                                        // lest it look weird\n                                        model.title = '\\xa0';\n                                        // Update label for accessibility\n                                        model.label = 'Search';\n                                    } else if (model.id === 'livetv') {\n                                        // STVWEB-1430: for accessible user\n                                        model.label = 'Live TV and Mini Guide';\n                                    }\n                                    model.index = modelArray.length + 1;\n                                    modelArray[modelArray.length] = model;\n                                } else {\n                                    $log.warn(`Unrecognized menu item: \"${item.title}\". Omitting.`);\n                                }\n                            });\n                            return modelArray;\n                        }, () => {\n                            $log.error('failed to load menu');\n                            return $q.reject('failed to load menu');\n                        });\n                } else {\n                    return $q.reject('Not logged in');\n                }\n            });\n        }\n\n\n        function trackActiveState() {\n            rx.Observable.create(function (observer) {\n                    const dispose = $transitions.onSuccess({}, function (transition) {\n                        observer.onNext(transition);\n                    });\n\n                    return dispose;\n                })\n                .map(transition => transition.to())\n                .startWith($state.current)\n                .filter(onlyHighlightableStates)\n                .subscribe(toState => activeState = toState.name);\n        }\n\n        // Strips out states which should not update the menu highlight\n        function onlyHighlightableStates(toState) {\n            return (toState.name.startsWith('ovp') || toState.name.startsWith('search')) &&\n                !toState.name.startsWith('ovp.ondemand.playEpisodeWithDetails') &&\n                !toState.name.startsWith('ovp.ondemand.playProduct') &&\n                !toState.name.startsWith('ovp.ondemand.playCdvr');\n        }\n\n        function authorizeTabs() {\n            let promises = [];\n            for (let m in models) {\n                if (models.hasOwnProperty(m)) {\n                    promises[promises.length] = authorizeTab(models[m]);\n                }\n            }\n            return $q.all(promises);\n        }\n\n        function authorizeTab(model) {\n            let capability = model.requires;\n            // If the model does not have a require capability then auto enable it.\n            if (!capability) {\n                model.enabled = true;\n                return $q.resolve(true);\n            }\n\n            return $q.all([profileService.hasCapability(capability),\n                profileService.isHidden(capability)]).then(function ([isEnabled, isHidden]) {\n                model.enabled = isEnabled;\n                model.hidden = isHidden;\n\n                if (!isEnabled) {\n                    return profileService.getCode(capability).then(function (code) {\n                        model.code = code;\n                    });\n                }\n            });\n        }\n    }\n}());\n"],"sourceRoot":"/source/"}