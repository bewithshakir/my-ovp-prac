{"version":3,"sources":["ovpApp/directives/ovp-focus.js"],"names":[],"mappings":"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","file":"ovpApp/directives/ovp-focus.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular\n        .module('ovpApp.directives.focus', [])\n        .directive('focusWhen', focusWhen)\n        .directive('focusOn', focusOn)\n        .directive('focusOnce', focusOnce)\n        .directive('focusNext', focusNext)\n        .directive('focusPrevious', focusPrevious);\n\n    /* @ngInject */\n    function findElement(type, ele, attr, maxLevel = 20) { // Private method for focus next / previous\n        let nextEle, container = ele[0].parentElement;\n        let attribute = type === 'next' ? attr.focusNext : attr.focusPrevious;\n\n        if (attribute === undefined || attribute === '') {\n            return;\n        }\n\n        while (maxLevel > 0 && container && !nextEle) {\n            nextEle = angular.element(container).find(attribute)[0];\n            container = container.parentElement;\n            maxLevel = maxLevel - 1;\n        }\n        return nextEle;\n    }\n\n    function focusNext($timeout) {\n        return {\n            restrict: 'A',\n            link: (scope, ele, attr) => {\n                var target;\n                $timeout(() => {\n                    angular.element(ele[0]).on('keydown', (event) => {\n                        target = findElement('next', ele, attr);\n                        if (event.keyCode === 9 && !event.shiftKey && target) {\n                            target.focus();\n                            event.preventDefault();\n                        }\n                    });\n                }, 0, false);\n            }\n        };\n    }\n\n    function focusPrevious($timeout) {\n        return {\n            restrict: 'A',\n            link: (scope, ele, attr) => {\n                var target;\n                $timeout(() => {\n                    angular.element(ele[0]).on('keydown', (event) => {\n                        target = findElement('prev', ele, attr);\n                        if (event.keyCode === 9 && event.shiftKey && target) {\n                            target.focus();\n                            event.preventDefault();\n                        }\n                    });\n                }, 0, false);\n            }\n        };\n    }\n\n    /* @ngInject */\n    function focusWhen($timeout) {\n        // Usage: <input focus-when=\"vm.foo\"/>\n        //\n        // Creates: Installs a $watch, that will give the element focus when the expression\n        //    evaluates to true.\n        //\n        var directive = {\n            link: link,\n            restrict: 'A'\n        };\n        return directive;\n\n        function link(scope, element, attrs) {\n            scope.$watch(attrs.focusWhen, function (value) {\n                if (value === true) {\n                    $timeout(() => element[0].focus(), 0, false);\n                }\n            });\n        }\n    }\n\n    /* @ngInject */\n    function focusOn($timeout, $rootScope, $parse) {\n        // Usage: <input focus-on=\"hello\"/>\n        // <input focus-on=\"{event: 'hello'}\"/>\n        // <input focus-on=\"{event: 'hello', predicate: vm.someFunction}\"\n        //\n        // Creates: Installs a $rootScope event listener, that will give the element focus\n        //\n        var directive = {\n            link: link,\n            restrict: 'A'\n        };\n        return directive;\n\n        function link(scope, element, attrs) {\n            attrs.$observe('focusOn', function (val) {\n                let focusOn = $parse(val)(scope);\n                let always = true;\n                let predicate;\n                let event;\n\n                if (angular.isString(focusOn)) {\n                    event = focusOn;\n                    always = true;\n                } else {\n                    event = focusOn.event;\n                    predicate = focusOn.predicate;\n                    if (focusOn.predicate) {\n                        predicate = focusOn.predicate;\n                        always = false;\n                    } else {\n                        always = true;\n                    }\n                }\n\n                let unsubscribe = $rootScope.$on(event, (e, data) => {\n                    if (always || predicate && $parse(predicate)(scope, {$event: e, $data: data})) {\n                        $timeout(() => element[0].focus(), 0, false);\n                    }\n                });\n\n                scope.$on('$destroy', unsubscribe);\n            });\n        }\n    }\n\n    /* @ngInject */\n    function focusOnce($timeout) {\n        // Usage: <input focus-once/> or <div focus-once=\"selector\"><input/></div>\n        //\n        // Focus once on create\n        // Use the attribute value to focus the first child that matches the selector\n        // Note: http://api.jquery.com/find/\n        //\n        return {\n            restrict: 'A',\n            link: function ($scope, $element, attrs) {\n                var currentValue;\n                if (!$scope.disabled) {\n                    $timeout(function () {\n                        if (attrs.focusOnce) {\n                            angular.element($element[0]).find(attrs.focusOnce)[0].focus();\n                        } else {\n                            $element[0].focus();\n                        }\n\n                        if ($element.is('input[type=text]')) {\n                            // For Firefox, we need to clear the value and then set it back.\n                            // This is needed because FF does not automatically place the cursor\n                            // on the end of the input string if the input is auto-filled\n                            currentValue = $element.val();\n                            $element.val('');\n                            $element.val(currentValue);\n                            // adding a click because otherwise the screen reader does\n                            // not read the aria-describedby\n                            $element[0].click();\n                        }\n\n                    }, 0, false);\n                }\n            }\n        };\n    }\n})();\n"],"sourceRoot":"/source/"}