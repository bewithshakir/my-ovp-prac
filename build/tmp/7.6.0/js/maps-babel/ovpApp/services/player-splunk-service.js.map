{"version":3,"sources":["ovpApp/services/player-splunk-service.js"],"names":[],"mappings":"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","file":"ovpApp/services/player-splunk-service.js","sourcesContent":["(function () {\n    'use strict';\n    angular.module('ovpApp.legacy.PlayerSplunkService', [\n            'ovpApp.services.splunk',\n            'ovpApp.config',\n            'ovpApp.video'\n        ])\n        .factory('PlayerSplunkService', PlayerSplunkServiceFactory);\n\n    /**\n     * A service for logging player events to splunk\n     * @param {object} videoPlayer an already-initialized player\n     */\n    function PlayerSplunkServiceFactory(SplunkService, $window, TWCVideoJS, $log, $timeout, config) {\n        var FlashVideoPlayer = TWCVideoJS.FlashVideoPlayer;\n\n        function PlayerSplunkService(videoPlayer) {\n            this.videoPlayer = videoPlayer;\n            this.initialValuesSet = false;\n            this.isMuted = false;\n            this.playerPosition = 0;\n            this.volumeLevel = 0.4;\n            this.isPlaying = false;\n            this.isVideoFullScreen = false;\n            this.showingInfoOverlay = false;\n            this.ccEnabled = false;\n            this.sapEnabled = false;\n            this.currentChannel = {};\n            this.isBuffering = false;\n            this.streamData = {};\n            this.bitRate = 0;\n            this.isPaused = false;\n            this.inAd = false;\n            this.flashPlayerVersion = '';\n            this.droppedFrameCount = 0;\n\n            this.attachEventListeners();\n        }\n\n        PlayerSplunkService.prototype.onPlayerInitialized = function () {\n            this.initialValuesSet = true;\n            this.updateFlashPlayerVersion();\n        };\n\n        PlayerSplunkService.prototype.updateFlashPlayerVersion = function () {\n            // Get flash player version\n            if ($window.swfobject) {\n                let version = $window.swfobject.getFlashPlayerVersion();\n                this.flashPlayerVersion = version.major + '.' + version.minor + '.' + version.release +\n                    '.' + version.build;\n            }\n        };\n\n        PlayerSplunkService.prototype.onPlayerPositionChanged = function (e) {\n            this.playerPosition = Math.floor(e.PlaybackTimestamp / 1000);\n        };\n\n        PlayerSplunkService.prototype.onInfoOverlayToggled = function (shown) {\n            this.showingInfoOverlay = shown;\n        };\n\n        PlayerSplunkService.prototype.onCCEnabledToggled = function (cc) {\n            this.ccEnabled = cc;\n        };\n\n        PlayerSplunkService.prototype.onSAPToggled = function (sap) {\n            this.sapEnabled = sap;\n        };\n\n        PlayerSplunkService.prototype.onCCSettingsChanged = function () {\n            // do something\n        };\n\n        PlayerSplunkService.prototype.onChannelChanged = function (args) {\n            this.currentChannel = {\n                channelId: args.channel.channelId,\n                localChannelNumber: args.channel.localChannelNumber,\n                userSelected: args.userSelected,\n                callSign: args.channel.callSign\n            };\n        };\n\n        PlayerSplunkService.prototype.onBufferingBegan = function () {\n            this.isBuffering = true;\n\n            this.reportPlayerStatus('bufferingStarted');\n        };\n\n        PlayerSplunkService.prototype.onMuteToggled = function (muted) {\n            this.isMuted = muted;\n        };\n\n        PlayerSplunkService.prototype.onVolumeLevelChanged = function (volume) {\n            this.volumeLevel = volume;\n        };\n\n        PlayerSplunkService.prototype.onStreamUriObtained = function (e) {\n            this.streamData = {\n                contentProtection: 'SecureMedia',\n                contentFormat: 'HLS',\n                contentMetadata: e.contentMetadata,\n                contentBookmark: e.contentBookmark || undefined,\n                playerType: e.playerType,\n                streamUrl: e.stream.stream_url,\n                dai: e.stream.dai,\n                drm: e.stream.drm\n            };\n\n            // Create a GUID that is the same for the same channel playback or vod asset playback.\n            // Use for grouping a set of events for the playback\n            this.playbackSessionGUID = config.randomGuid();\n        };\n\n        PlayerSplunkService.prototype.onAdStartTrackingUrl = function () {\n            // do something\n        };\n\n        PlayerSplunkService.prototype.onAdEndTrackingUrl = function () {\n            // do something\n        };\n\n        PlayerSplunkService.prototype.onBufferingEnded = function () {\n            this.isBuffering = false;\n\n            this.reportPlayerStatus('bufferingStopped');\n        };\n\n        PlayerSplunkService.prototype.onBitRateChanged = function (e) {\n            e = e.event;\n            this.bitRate = e.profile;\n\n            this.reportPlayerStatus('bitrateChanged', e);\n        };\n\n        PlayerSplunkService.prototype.onDroppedFrameCountChanged = function (e) {\n            this.droppedFrameCount = e.NewDroppedFramesCount;\n\n            this.reportPlayerStatus('droppedFrameCountsChanged');\n        };\n\n        PlayerSplunkService.prototype.onPlaybackStarted = function () {\n            this.isPlaying = true;\n\n            this.reportPlayerStatus('playbackStarted');\n        };\n\n        PlayerSplunkService.prototype.onPlaybackStopped = function () {\n            this.isPlaying = false;\n\n            this.reportPlayerStatus('playbackStopped');\n        };\n\n        PlayerSplunkService.prototype.assembleCommonFields = function () {\n            let playerDetails = {};\n            let streamType = this.streamData && this.streamData.playerType;\n\n            if (streamType === 'linear') {\n                playerDetails.playbackType = 'linear';\n                playerDetails.channelNumber = this.currentChannel.localChannelNumber;\n                playerDetails.networkName = this.currentChannel.callSign;\n            } else if (streamType === 'onDemand') {\n                playerDetails.playbackType = 'vod';\n                playerDetails.contentClass = this.streamData.contentMetadata.contentClass;\n                playerDetails.productProvider = this.streamData.contentMetadata.provider;\n                playerDetails.providerAssetId = this.streamData.contentMetadata.providerAssetId;\n            } else if (streamType === 'cdvr') {\n                playerDetails.playbackType = 'cdvr';\n                playerDetails.cdvrRecording = this.streamData.contentMetadata.cdvrRecording;\n            }\n\n            playerDetails.streamType = this.streamData.contentFormat;\n            playerDetails.streamUri = this.streamData.streamUrl;\n            playerDetails.tmsId = this.streamData.contentMetadata.tmsProgramId;\n            playerDetails.id = this.playbackSessionGUID;\n\n            // Optional if available - Same as reported to Event Gateway\n            playerDetails.playbackPosition = this.playerPosition;\n            playerDetails.bitrate = this.bitRate;\n            playerDetails.droppedFrameCount = this.droppedFrameCount;\n\n            playerDetails.dai = this.streamData.dai; // Does asset have DAI\n            playerDetails.inAd = this.inAd; // Playback is in an ad or not\n            playerDetails.flashPlayerVersion = this.flashPlayerVersion;\n\n            return playerDetails;\n        };\n\n        PlayerSplunkService.prototype.reportPlayerStatus = function (status, additionalData) {\n            try {\n                let playerStatusDetails = this.assembleCommonFields();\n                if (additionalData) {\n                    playerStatusDetails = Object.assign(playerStatusDetails, additionalData);\n                }\n\n                // Player status should be on of these values: playbackStarted, bitrateChanged,\n                // bufferingStarted, bufferingStopped, playbackStopped. Note playbackStarted and\n                // playbackStopped are compulsory.\n                playerStatusDetails.status = status;\n\n                SplunkService.sendPlayerStatus(playerStatusDetails);\n\n            } catch (e) {\n                $log.warn(e);\n            }\n        };\n\n        PlayerSplunkService.prototype.onError = function (err) {\n            try {\n                this.updateFlashPlayerVersion();\n                let playerErrorDetails = this.assembleCommonFields(err);\n\n                // the intent of errorCode is to be a platform-specific code, which as of May 2016 we have not\n                // defined any. For now we'll return the error code from the response\n                playerErrorDetails.errorCode = err.errorID;\n\n                if (err.stackTrace) {\n                    playerErrorDetails.stackTrace = err.stackTrace;\n                }\n\n                if (err.errorID === FlashVideoPlayer.playerErrorCodes.START_STREAM_FAILED_ERROR) {\n                    playerErrorDetails.errorType = 'tuneFailed';\n                } else if (err.errorID === FlashVideoPlayer.playerErrorCodes.REFRESH_AD_STATUS_FAILED) {\n                    playerErrorDetails.errorType = 'uncaughtError';\n                } else {\n                    playerErrorDetails.errorType = 'streamFailed';\n                }\n\n                playerErrorDetails.errorMessage = err.message || err.name;\n                playerErrorDetails.mediaPlayerErrorCode = err.mediaPlayerErrorCode || 0;\n                playerErrorDetails.mediaPlayerErrorRuntimeCode = err.mediaPlayerErrorRuntimeCode || 0;\n                playerErrorDetails.mediaPlayerErrorDescription = err.mediaPlayerErrorDescription || '';\n\n                SplunkService.sendPlayerError(playerErrorDetails);\n            } catch (e) {\n                $log.warn(e);\n            }\n        };\n\n        PlayerSplunkService.prototype.onFullScreenToggled = function (e) {\n            this.isVideoFullScreen = e;\n        };\n\n        PlayerSplunkService.prototype.onMiniGuideShown = function () {\n            // do something\n        };\n\n        PlayerSplunkService.prototype.attachEventListeners = function () {\n\n            this.videoPlayer.on('player-initialized', this.onPlayerInitialized.bind(this));\n\n            this.videoPlayer.on('player-position-changed', this.onPlayerPositionChanged.bind(this));\n\n            this.videoPlayer.on('info-overlay-toggled', this.onInfoOverlayToggled.bind(this));\n\n            this.videoPlayer.on('cc-enabled-toggled', this.onCCEnabledToggled.bind(this));\n\n            this.videoPlayer.on('sap-toggled', this.onSAPToggled.bind(this));\n\n            this.videoPlayer.on('cc-settings-changed', this.onCCSettingsChanged.bind(this));\n\n            this.videoPlayer.on('channel-changed', this.onChannelChanged.bind(this));\n\n            this.videoPlayer.on('channel-filter-changed', this.onChannelFilterChanged.bind(this));\n\n            this.videoPlayer.on('channel-sortby-changed', this.onChannelSortByChanged.bind(this));\n\n            this.videoPlayer.on('buffering-began', this.onBufferingBegan.bind(this));\n\n            this.videoPlayer.on('mute-toggled', this.onMuteToggled.bind(this));\n\n            this.videoPlayer.on('volume-level-changed', throttle(this.onVolumeLevelChanged.bind(this), 1000));\n\n            this.videoPlayer.on('stream-uri-obtained', this.onStreamUriObtained.bind(this));\n\n            this.videoPlayer.on('stream-scrubbed', this.onStreamScrubbed.bind(this));\n\n            this.videoPlayer.on('ad-break-started', this.onAdBreakStarted.bind(this));\n\n            this.videoPlayer.on('ad-break-stopped', this.onAdBreakStopped.bind(this));\n\n            this.videoPlayer.on('ad-started', this.onAdStarted.bind(this));\n\n            this.videoPlayer.on('ad-stopped', this.onAdStopped.bind(this));\n\n            this.videoPlayer.on('ad-start-tracking-url', this.onAdStartTrackingUrl.bind(this));\n\n            this.videoPlayer.on('ad-end-tracking-url', this.onAdEndTrackingUrl.bind(this));\n\n            this.videoPlayer.on('buffering-ended', this.onBufferingEnded.bind(this));\n\n            this.videoPlayer.on('playback-started', this.onPlaybackStarted.bind(this));\n\n            this.videoPlayer.on('playback-pause-toggled', this.onPlaybackPauseToggled.bind(this));\n\n            this.videoPlayer.on('playback-stopped', this.onPlaybackStopped.bind(this));\n\n            this.videoPlayer.on('full-screen-toggled', this.onFullScreenToggled.bind(this));\n\n            this.videoPlayer.on('mini-guide-shown', this.onMiniGuideShown.bind(this));\n\n            this.videoPlayer.on('error', this.onError.bind(this));\n\n            this.videoPlayer.on('dropped-frame-count-changed', this.onDroppedFrameCountChanged.bind(this));\n\n            this.videoPlayer.on('bitrate-changed', this.onBitRateChanged.bind(this));\n        };\n\n        PlayerSplunkService.prototype.onPlaybackPauseToggled = function (isPaused) {\n            this.isPaused = isPaused;\n        };\n\n        PlayerSplunkService.prototype.onAdStarted = function () {\n            // do something\n        };\n\n        PlayerSplunkService.prototype.onAdStopped = function () {\n            // do something\n        };\n\n        PlayerSplunkService.prototype.onAdBreakStarted = function () {\n            this.inAd = true;\n        };\n\n        PlayerSplunkService.prototype.onAdBreakStopped = function () {\n            this.inAd = false;\n        };\n\n        PlayerSplunkService.prototype.onStreamScrubbed = function () {\n            // do something\n        };\n\n        PlayerSplunkService.prototype.onChannelFilterChanged = function () {\n            // do something\n        };\n\n        PlayerSplunkService.prototype.onChannelSortByChanged = function () {\n            // do something\n        };\n\n        return PlayerSplunkService;\n\n        //Simple throttle implimentation, calls on the leading edge and trailing edge\n        function throttle(callback, limit) {\n            var wait = false,\n                queued = false;\n\n            return function () {\n                if (!wait) {\n                    callback.call();\n                    wait = true;\n\n                } else {\n                    queued = true;\n                }\n            };\n            function setupTimeout() {\n                $timeout(endTimeout, limit);\n            }\n            function endTimeout() {\n                if (queued) {\n                    callback.call();\n                    queued = false;\n                    //Leave wait and set the timeout\n                    setupTimeout();\n                } else {\n                    wait = false;\n                }\n            }\n        }\n    }\n}());\n"],"sourceRoot":"/source/"}