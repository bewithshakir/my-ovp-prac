{"version":3,"sources":["ovpApp/analytics/analytics.js"],"names":[],"mappings":"AAAA;AACA;;AAAA,CAAC,YAAY;IACT;;;;IAEA,QAAQ,OAAO,oBAAoB,CAC/B,iBACA,0BACA,4BACA,0BACA,0BACA,oCACA,iCACA,iCACA,mCACA,sCACA,2CACA,kCACA,4CACA,kDACA,2CACA,+BACA,qCACA,mCACA,yCACA,OAEH,QAAQ,aAAa,WACrB,IAAI;;;IAGL,SAAS,UACL,QACA,UACA,SACA,UACA,SACA,kBACA,UACA,OACA,OACA,SACA,cACA,sBACA,YACA,iBACA,gBACA,QACA,kBACA,wBACA,iBACA,MACA,YACA,IACF;QACE,IAAI,aAAa,SAAS;QAC1B,IAAI,kBAAkB;;QAEtB;;QAEA,OAAO;;;QAGP,SAAS,aAAa;;YAElB,IAAI;;gBAEA,IAAI,QAAQ,UAAU,WAAW,gBAAgB;oBAC7C,OAAO,UAAU,OAAO,UAAU,WAAW;;;gBAGjD,IAAI,OAAO,UAAU,OAAO,SAAS;oBACjC,IAAI,SAAS;oBACb,IAAI,UAAU,EAAE,WAAW,KAAK;;oBAEhC,iBAAiB,WAAW,QAAQ;;;oBAGpC,iBAAiB,SAAS,iBAAiB;wBACvC,eAAe;;;;oBAInB,IAAI,OAAO,WAAW;wBAClB,iBAAiB,SAAS,4BAA4B;4BAClD,iBAAiB,qBAAqB,WAAW,OAAO,UAAU;4BAClE,cAAc,qBAAqB,WAAW,OAAO,UAAU;;;;cAK/E,OAAO,IAAI;gBACP,KAAK,MAAM,kCAAkC;;;;QAIrD,SAAS,mBAAmB;;YAExB,iBAAiB,MAAM,YAAY,SAAS;;YAE5C,IAAI,SAAS;;gBAET,QAAQ,OAAO,UAAU;gBACzB,UAAU,OAAO,UAAU;gBAC3B,YAAY,WAAW,oBAAoB,QAAQ;gBACnD,iBAAiB,OAAO,UAAU;gBAClC,iBAAiB,OAAO,UAAU;gBAClC,SAAS;gBACT,UAAU,EAAC,UAAU,QAAQ,UAAU;gBACvC,YAAY;gBACZ,aAAa,QAAQ,UAAU;gBAC/B,iBAAiB,QAAQ,UAAU;gBACnC,YAAY,iBAAiB,MAAM;gBACnC,YAAY;gBACZ,gBAAgB;gBAChB,aAAa,EAAC,iBAAiB,OAAO;gBACtC,iBAAiB,mBAAmB;gBACpC,kBAAkB,QAAQ,aAAa,MAAM,QAAQ;gBACrD,WAAW,QAAQ,UAAU;gBAC7B,cAAc,QAAQ,SAAS;;gBAE/B,YAAa,OAAO,sBAAsB,OAAO,iBAAiB,OAAO;;;YAG7E,OAAO;;;QAGX,SAAS,kBAAkB;YACvB,IAAI,UAAU,WAAW,oBAAoB,WAAW;YACxD,IAAI,aAAa;;YAEjB,IAAI;gBACA,aAAa,QAAQ,aAAa,QAAQ;cAC5C,OAAO,IAAI;;gBAET,KAAK,MAAM,kCAAkC;;;YAGjD,IAAI,YAAY;gBACZ,kBAAkB;;;YAGtB,IAAI;gBACA,aAAa,QAAQ,aAAa,QAAQ,4BAA4B;cACxE,OAAO,IAAI;;gBAET,KAAK,MAAM,kCAAkC;;;YAGjD,OAAO;;;QAGX,SAAS,gBAAgB;;YAErB,IAAI,kBAAkB,QAAQ,UAAU,aAAa,QAAQ,UAAU,UAAU,QAAQ;;YAGzF,IAAI,WAAY,mTAAoT,KAAK,oBAAoB,0kDAA4kD,KAAK,gBAAgB,OAAO,GAAG;;YAEx8D,IAAI,WAAW,6BAA6B,KAAK;;YAEjD,IAAI,UAAU;gBACV,OAAO;;YAEX,IAAI,UAAU;gBACV,OAAO;;YAEX,OAAO;;;;;IAKf,SAAS,cAAc,WAAW;QAC9B,OAAO;;KAIV","file":"ovpApp/analytics/analytics.js","sourcesContent":["/* jshint unused: vars */\n(function () {\n    'use strict';\n\n    angular.module('ovpApp.analytics', [\n        'ovpApp.config',\n        'ovpApp.legacy.httpUtil',\n        'ovpApp.legacy.stringUtil',\n        'ovpApp.service.version',\n        'ovpApp.legacy.deviceid',\n        'ovpApp.analytics.events.playback',\n        'ovpApp.analytics.events.login',\n        'ovpApp.analytics.events.error',\n        'ovpApp.analytics.events.apiCall',\n        'ovpApp.analytics.events.navigation',\n        'ovpApp.analytics.events.navigationTimer',\n        'ovpApp.analytics.events.search',\n        'ovpApp.analytics.events.sessionAnalytics',\n        'ovpApp.analytics.events.productActionAnalytics',\n        'ovpApp.analytics.events.windowAnalytics',\n        'ovpApp.analytics.events.dvr',\n        'ovpApp.analytics.analyticsService',\n        'ovpApp.analytics.analyticsEnums',\n        'ovpApp.analytics.analyticsAssetHelper',\n        'rx'\n    ])\n    .factory('Analytics', Analytics)\n    .run(loadAnalytics);\n\n    /* @ngInject */\n    function Analytics(\n        config,\n        httpUtil,\n        version,\n        deviceid,\n        $window,\n        analyticsService,\n        playback,\n        login,\n        error,\n        apiCall,\n        analyticsDvr,\n        analyticsAssetHelper,\n        navigation,\n        navigationTimer,\n        analyticsEnums,\n        search,\n        sessionAnalytics,\n        productActionAnalytics,\n        windowAnalytics,\n        $log,\n        stringUtil,\n        rx\n    ) {\n        let queryPairs = httpUtil.getPairsFromQueryString();\n        let previousVisitId = null;\n\n        initialize();\n\n        return {};\n\n        /////////////////////\n        function initialize() {\n            // try-catch so initialization errors don't affect rest of app.\n            try {\n                // Let query string override app default for venona collection.\n                if (angular.isDefined(queryPairs.venonaEnabled)) {\n                    config.analytics.venona.enabled = queryPairs.venonaEnabled;\n                }\n\n                if (config.analytics.venona.enabled) {\n                    let fields = setSessionFields();\n                    let options = { timestamp: Date.now() };\n\n                    analyticsService.initialize(fields, options);\n\n                    // Set our initial network status to 'unknown'\n                    analyticsService.getSDK().setNetworkStatus({\n                        networkStatus: 'unknown'\n                    });\n\n                    // Set experiment configurations, if any.\n                    if (config.dePayload) {\n                        analyticsService.getSDK().setExperimentConfigurations({\n                            experimentUuids: analyticsAssetHelper.objToArray(config.dePayload.experimentUuids),\n                            variantUuids: analyticsAssetHelper.objToArray(config.dePayload.variantUuids)\n                        });\n                    }\n                }\n            }\n            catch (ex) {\n                $log.error('Analytics initialization error', ex);\n            }\n        }\n\n        function setSessionFields() {\n\n            analyticsService.state.setDeviceId(deviceid.get());\n\n            var fields = {\n                // Required Fields\n                domain: config.analytics.domain,\n                customer: config.analytics.customer,\n                appVersion: queryPairs.analyticsVersion || version.appVersion,\n                applicationName: config.analytics.applicationName,\n                applicationType: config.analytics.applicationType,\n                visitId: generateVisitId(), // This needs to be saved in storage and pulled to populate previousVisitId.\n                vendorId: {vendorId: $window.navigator.vendor},\n                deviceType: 'webBrowser',\n                deviceModel: $window.navigator.platform,\n                operatingSystem: $window.navigator.userAgent,\n                deviceUUID: analyticsService.state.getDeviceId(),\n                formFactor: getFormFactor(),\n                connectionType: 'unknown', // Cannot reliably determine for OVP.\n                environment: {environmentName: config.environmentKey},\n                previousVisitId: previousVisitId || '', //[previous visit id you read from disk],\n                screenResolution: $window.innerWidth + 'x' + $window.innerHeight,\n                userAgent: $window.navigator.userAgent,\n                referrerLink: $window.document.referrer,\n                // drmEnabled must always be true in production.\n                drmEnabled: (config.playDrmOnlyStreams || config.vodDrmEnabled || config.liveTvDrmEnabled)\n            };\n\n            return fields;\n        }\n\n        function generateVisitId() {\n            let visitId = queryPairs.analyticsVisitId || stringUtil.guid();\n            let previousId = null;\n\n            try {\n                previousId = $window.localStorage.getItem('analyticsPreviousVisitId');\n            } catch (ex) {\n                // Ignorable error if local storage is not supported.\n                $log.debug('Failed to access local storage', ex);\n            }\n\n            if (previousId) {\n                previousVisitId = previousId;\n            }\n\n            try {\n                previousId = $window.localStorage.setItem('analyticsPreviousVisitId', visitId);\n            } catch (ex) {\n                // Ignorable error if local storage is not supported.\n                $log.debug('Failed to access local storage', ex);\n            }\n\n            return visitId;\n        }\n\n        function getFormFactor() {\n            /* jshint ignore:start */\n            var combinedSysInfo = $window.navigator.userAgent || $window.navigator.vendor || $window.opera;\n\n\n            var isMobile = (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i).test(combinedSysInfo) || (/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i).test(combinedSysInfo.substr(0, 4));\n\n            var isTablet = /android|ipad|playbook|silk/.test(combinedSysInfo);\n\n            if (isTablet) {\n                return 'tablet';\n            }\n            if (isMobile) {\n                return 'phone';\n            }\n            return 'pc';\n            /* jshint ignore:end */\n        }\n    }\n\n    function loadAnalytics(Analytics) {\n        return Analytics;\n    }\n\n\n})();\n"],"sourceRoot":"/source/"}