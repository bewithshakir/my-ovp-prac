{"version":3,"sources":["ovpApp/components/environment-dropdown/environment-dropdown.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,CAAC,YAAY,EAAE,SAAS,iBAAiB,QAAQ,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,aAAa,MAAM,IAAI,WAAW,aAAa,WAAW,cAAc,OAAO,WAAW,eAAe,MAAM,IAAI,WAAW,YAAY,WAAW,WAAW,MAAM,OAAO,eAAe,QAAQ,WAAW,KAAK,iBAAiB,OAAO,UAAU,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,iBAAiB,YAAY,WAAW,aAAa,IAAI,aAAa,iBAAiB,aAAa,cAAc,OAAO;;AAEjiB,SAAS,gBAAgB,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;AAJhH,CAAC,YAAM;IACH;;IAEA,SAAS,wBAAwB,WAAW,SAAS;QACjD,IAAM,aAAa,UAAU,UAAU;QACvC,IAAI,CAAC,YAAY;;YAEb;;QAEJ,IAAM,SAAS,UAAU,aAAa;QACtC,QAAQ,QAAQ,WAAW,mBAAmB,QAAQ;QACtD,QAAQ,QAAQ,WAAW,wBAAwB,QAAQ;;;IAG/D,QAAQ,OAAO,yCAAyC,CACpD,kCACA,kBACA,uBACA,aACA,iBACA,8BACA,2BAEC,SAAS,iBAAiB,CACvB;QACI,OAAO;QACP,QAAQ;YACJ,OAAO;gBACH,SAAS;;;OAIrB;QACI,OAAO;QACP,QAAQ;YACJ,SAAS;gBACL,SAAS;;;OAIrB;QACI,OAAO;QACP,QAAQ;YACJ,SAAS;gBACL,SAAS;;YAEb,KAAK;gBACD,iBAAiB;;;OAI7B;QACI,OAAO;QACP,QAAQ;YACJ,oBAAoB;gBAChB,SAAS;;;OAIrB;QACI,OAAO;QACP,QAAQ;YACJ,mBAAmB;;OAG3B;QACI,OAAO;QACP,QAAQ;YACJ,YAAY;gBACR,SAAS;gBACT,gBAAgB;;;OAI5B;QACI,OAAO;QACP,QAAQ;YACJ,YAAY;;OAGpB;QACI,OAAO;QACP,QAAQ;YACJ,oBAAoB;;QAI/B,SAAS,kBAAkB,CACxB;QACI,OAAO;QACP,QAAQ;YACJ,SAAS;YACT,aAAa;YACb,OAAO;gBACH,YAAY;gBACZ,YAAY;gBACZ,YAAY;gBACZ,UAAU;gBACV,QAAQ;gBACR,aAAa;gBACb,eAAe;gBACf,sBAAsB;gBACtB,oBAAoB;;YAExB,cAAc;gBACV,kBAAkB;gBAClB,aAAa;gBACb,iBAAiB;gBACjB,aAAa;gBACb,iBAAiB;gBACjB,QAAQ;gBACR,QAAQ;gBACR,iBAAiB;gBACjB,iBAAiB;gBACjB,eAAe;gBACf,oBAAoB;gBACpB,UAAU;gBACV,aAAa;;;OAIzB;QACI,OAAO;QACP,QAAQ;YACJ,SAAS;YACT,aAAa;YACb,OAAO;gBACH,YAAY;gBACZ,YAAY;gBACZ,YAAY;gBACZ,UAAU;gBACV,QAAQ;gBACR,aAAa;gBACb,eAAe;gBACf,sBAAsB;gBACtB,oBAAoB;;;YAGxB,cAAc;gBACV,kBAAkB;gBAClB,aAAa;gBACb,iBAAiB;gBACjB,aAAa;gBACb,iBAAiB;gBACjB,QAAQ;gBACR,QAAQ;gBACR,iBAAiB;gBACjB,iBAAiB;gBACjB,eAAe;gBACf,oBAAoB;gBACpB,UAAU;gBACV,aAAa;;;OAIzB;QACI,OAAO;QACP,QAAQ;YACJ,SAAS;YACT,aAAa;YACb,OAAO;gBACH,YAAY;gBACZ,YAAY;gBACZ,YAAY;gBACZ,UAAU;gBACV,QAAQ;gBACR,aAAa;gBACb,eAAe;gBACf,sBAAsB;gBACtB,oBAAoB;;;YAGxB,cAAc;gBACV,kBAAkB;gBAClB,aAAa;gBACb,iBAAiB;gBACjB,aAAa;gBACb,iBAAiB;gBACjB,QAAQ;gBACR,QAAQ;gBACR,iBAAiB;gBACjB,iBAAiB;gBACjB,eAAe;gBACf,oBAAoB;gBACpB,UAAU;gBACV,aAAa;;;OAIzB;QACI,OAAO;QACP,QAAQ;YACJ,SAAS;YACT,aAAa;YACb,OAAO;gBACH,YAAY;gBACZ,YAAY;gBACZ,YAAY;gBACZ,UAAU;gBACV,QAAQ;gBACR,aAAa;gBACb,eAAe;gBACf,sBAAsB;gBACtB,oBAAoB;;YAExB,cAAc;gBACV,kBAAkB;gBAClB,aAAa;gBACb,iBAAiB;gBACjB,aAAa;gBACb,iBAAiB;gBACjB,QAAQ;gBACR,QAAQ;gBACR,iBAAiB;gBACjB,iBAAiB;gBACjB,eAAe;gBACf,oBAAoB;gBACpB,UAAU;gBACV,aAAa;;;QAK5B,+CAAI,UAAU,WAAW,YAAY,aAAa;;QAE/C,IAAM,UAAU,WAAW,QAAQ,YAAY;QAC/C,wBAAwB,WAAW;QAEtC,UAAU,uBAAuB;QAC9B,UAAU;YACN,eAAe;;QAEnB,aAAa;;8MACb,YAAU,CAAA,YAAA;YACK,SADG,oBACF,SAAS,QAAQ,YAAY,WAAW,SAAS,QACzD,eAAe,gBAAgB,YAAY,aAAa,UAAU,OAAO;gBApB7E,gBAAgB,MAkBF;;gBAGV,QAAQ,OAAO,MAAM,EAAC,SAAA,SAAS,QAAA,QAAQ,YAAA,YAAY,WAAA,WAAW,SAAA,SAAS,QAAA;oBACnE,eAAA,eAAe,gBAAA,gBAAgB,YAAA,YAAY,aAAA,aAAa,UAAA,UAAU,OAAA;;;YAhB9E,aAYkB,qBAAmB,CAAA;gBAXjC,KAAK;gBACL,OAgBO,SAAA,UAAG;oBAfN,IAAI,QAAQ;;oBAgBZ,KAAK,cAAc,KAAK,WAAW,QAAQ,KAAK,YAAY,mBAAmB;oBAC/E,KAAK,oBAAoB,KAAK,UAAU,KAAK,aAAa,MAAM;oBAChE,KAAK,oBAAoB,KAAK,WAAW,QAAQ,KAAK,YAAY,iBAC9D,CAAC,EAAC,KAAK,IAAI,UAAU,EAAC,QAAQ,KAAK,YAAY,IAAI,MAAM;oBAC7D,KAAK,yBAAyB,KAAK,WAAW,QAAQ,KAAK,YAAY,2BACnE;oBACJ,KAAK,0BAA0B,KAAK,UAAU,KAAK,mBAAmB,MAAM;oBAC5E,KAAK,oBAAoB,KAAK,WAAW,QAAQ,KAAK,YAAY,mBAAmB;oBACrF,KAAK,0BAA0B,KAAK,UAAU,KAAK,mBAAmB,MAAM;oBAC5E,KAAK,WAAW,KAAK;oBACrB,KAAK,gBAAgB,KAAK;oBAC1B,KAAK,eAAe,KAAK,OAAO;oBAChC,KAAK,wBAAwB,KAAK,OAAO;oBACzC,KAAK,oBAAoB,KAAK,WAAW,QAAQ,KAAK,YAAY;oBAClE,KAAK;oBACL,KAAK,WAAQ,0CAA2C,KAAK,OAAO,SAAS;oBAC7E,KAAK,YAAS,MAAO,KAAK,OAAO,UAAO;;;oBAGxC,IAAI,KAAK,OAAO,QAAQ,KAAK,WAAW,UAAU;wBAC9C,KAAK,aAAa;2BACf;wBACH,KAAK,WAAW,aAAa,KAAK,UAAA,YAAc;4BAC5C,MAAK,aAAa;;;;eAZ/B;gBACC,KAAK;gBACL,OAeY,SAAA,eAAG;oBACX,IAAI,KAAK,iBAAiB;wBACtB,KAAK,cAAc,QAAQ,OAAO,KAAK,aAAa,KAAK,gBAAgB;wBACzE,KAAK,oBAAoB,KAAK,UAAU,KAAK,aAAa,MAAM;wBAChE,KAAK,kBAAkB;;;eAZhC;gBACC,KAAK;gBACL,OAcY,SAAA,eAAG;oBAbX,IAAI,SAAS;;oBAcb,IAAI,OAAO,OAAO,KAAK,KAAK,QACvB,OAAO,UAAA,KAAG;wBAZX,OAYe,IAAI,MAAM,IAAI,OAAO,OAAK,kBAAkB;;oBAC/D,IAAI,KAAK,SAAS,GAAG;wBAVjB,CAAC,YAAY;4BAWb,IAAI,MAAM;4BACV,KAAK,QAAQ,UAAA,KAAG;gCATR,OASY,IAAI,OAAO,OAAK,OAAO;;4BAC3C,OAAK,oBAAoB,KAAK,UAAU,KAAK,MAAM;;;;eAJ5D;gBACC,KAAK;gBACL,OAMiB,SAAA,oBAAG;;oBAEhB,KAAK,SAAS;;oBAEd,KAAK,OAAO,oBAAoB,KAAK;oBACrC,KAAK,QAAQ,SAAS;;;;eAF3B;gBACC,KAAK;gBACL,OAI2B,SAAA,8BAAG;oBAH1B,IAAI,SAAS;;;oBAKb,KAAK,wBAAwB,KAAK,kBAAkB;;oBAEpD,KAAK,cAAc;oBACnB,KAAK,kBACD,KAAK,SAAS,KAAK,UAAA,SAAO;wBAF1B,OAE8B,QAAQ,UAAU,OAAK,kBAAkB;;oBAC3E,KAAK;;eACV;gBACC,KAAK;gBACL,OAAiB,SAAA,oBAAG;oBAChB,IAAI,KAAK,sBAAsB;wBAC3B,KAAK,oBACD,QAAQ,OAAO,KAAK,mBAAmB,KAAK,qBAAqB;;wBAErE,KAAK,kBAAkB,MAAM,WAAW,KAAK,QAAQ,aAAa,UAAU,QAAQ,OAAO;wBAC3F,KAAK,0BAA0B,KAAK,UAAU,KAAK,mBAAmB,MAAM;wBAC5E,KAAK,uBAAuB;;wBAE5B,KAAK;;;eAEd;gBACC,KAAK;gBACL,OAAkB,SAAA,qBAAG;oBACjB,IAAI;wBACA,IAAI,SAAS,KAAK,wBACb,QAAQ,QAAQ,KAAK,QAAQ,SAAS;wBAC3C,KAAK,oBAAoB,KAAK,MAAM;wBACpC,KAAK,0BAA0B,KAAK,UAAU,KAAK,mBAAmB,MAAM;wBAC5E,KAAK,oBAAoB;sBAC3B,OAAO,GAAG;wBACR,KAAK,oBAAoB,EAAE;;;eAEpC;gBACC,KAAK;gBACL,OAAiB,SAAA,oBAAG;oBAChB,KAAK,oBAAoB;oBACzB,KAAK,oBAAoB,CAAC,EAAC,KAAK,IAAI,UAAU,EAAC,QAAQ,KAAK,YAAY,IAAI,MAAM;oBAClF,KAAK,0BAA0B,KAAK,UAAU,KAAK,mBAAmB,MAAM;oBAC5E,KAAK;;eAEV;gBACC,KAAK;gBACL,OADiB,SAAA,oBAAG;oBAChB,KAAK,WAAW,QAAQ,KAAK,YAAY,cAAc,KAAK;;eAGjE;gBACC,KAAK;gBACL,OAFqB,SAAA,wBAAG;oBACpB,KAAK,WAAW,QAAQ,KAAK,YAAY,wBAAwB,KAAK;;oBAEtE,KAAK,SAAS;oBACd,KAAK,QAAQ,aAAa,WAAW;;eAI1C;gBACC,KAAK;gBACL,OAHkB,SAAA,qBAAG;oBACjB,IAAI;wBACA,KAAK,oBAAoB,KAAK,MAAM,KAAK;wBACzC,KAAK,oBAAoB;;wBAEzB,KAAK;sBACP,OAAO,GAAG;wBACR,KAAK,oBAAoB,EAAE;;;eAMpC;gBACC,KAAK;gBACL,OAJkC,SAAA,qCAAG;oBAKjC,IAAI,SAAS;;;oBAHb,KAAK,SAAS;oBACd,KAAK,QAAQ,aAAa,WAAW;;oBAErC,KAAK,WAAW,WAAW,KAAK,YAAY;oBAC5C,KAAK,WAAW,QAAQ,KAAK,YAAY,gBAAgB,KAAK;;oBAE9D,KAAK,OAAO,oBAAoB,KAAK;;oBAErC,KAAK,WAAW,QAAQ,KAAK,YAAY,gBAAgB,KAAK;;oBAE9D,KAAK,MAAM;wBACP,QAAQ;wBACR,KAAK;wBACL,MAAM,KAAK,kBAAkB;wBAC7B,eAAe;uBAChB,KAAK,YAAM;wBACV,OAAO,OAAK,MAAM;4BACd,QAAQ;4BACR,KAAK,sEACD,OAAK,QAAQ,aAAa,UAAU,QAAQ,OAAO;4BACvD,QAAQ,OAAK,kBAAkB;4BAC/B,eAAe;2BAChB,KAAK,YAAM;4BACV,OAAK;;uBAEX,SAAO,UAAA,KAAO;wBACZ,OAAK,QAAQ,MAAM;;;eAQ5B;gBACC,KAAK;gBACL,OANqB,SAAA,wBAAG;oBACpB,KAAK,QAAQ,aAAa;oBAC1B,KAAK,QAAQ,eAAe;oBAC5B,KAAK,QAAQ,SAAS;;eAQ3B;gBACC,KAAK;gBACL,OAPkB,SAAA,qBAAG;oBACjB,KAAK,SAAS;oBACd,KAAK,QAAQ,aAAa,WAAW;oBACrC,KAAK,QAAQ,SAAS;;eAS3B;gBACC,KAAK;gBACL,OARiB,SAAA,oBAAG;oBAChB,KAAK,WAAW,WAAW,KAAK,YAAY;oBAC5C,KAAK,cAAc;oBACnB,KAAK,oBAAoB;oBACzB,KAAK,QAAQ,SAAS;;eAU3B;gBACC,KAAK;gBACL,OATY,SAAA,eAAG;oBACX,IAAI;wBACA,KAAK,cAAc,KAAK,MAAM,KAAK;wBACnC,KAAK,cAAc;sBACrB,OAAO,GAAG;wBACR,KAAK,cAAc,EAAE;;;eAY9B;gBACC,KAAK;gBACL,OAViB,SAAA,oBAAG;oBAChB,IAAI,KAAK,aAAa;wBAClB,KAAK,WAAW,QAAQ,KAAK,YAAY,gBAAgB,KAAK;wBAC9D,KAAK,QAAQ,SAAS;;;eAa/B;gBACC,KAAK;gBACL,OAXgB,SAAA,mBAAG;oBACf,KAAK,WAAW,QAAQ,KAAK,YAAY,mBAAmB,KAAK;oBACjE,wBAAwB,KAAK,WAAW,KAAK;;;;YAerD,OAlNkB;;OAuMrB,yBAAO,UAAU,eAAe;QAC7B,cAAc,aAAa,QAAQ,CAAC,MAAM,WAAW,UAAU,IAAI,SAAS;YACxE,OAAO;gBACH,SAAS,SAAA,QAAU,UAAS;oBACxB,IAAI,gBAAgB,KAAK,MAAM,QAAQ,eAAe,QAAQ,mBAAmB;oBACjF,KAAK,IAAI,IAAI,GAAG,IAAI,cAAc,QAAQ,IAAI,IAAI,GAAG;wBACjD,IAAI,cAAc,GAAG,OACjB,SAAQ,IAAI,QAAQ,cAAc,GAAG,OAAO,CAAC,GAAG;4BAChD,OAAO,GAAG,OAAO,QAAQ,OAAO;gCAC5B,SAAS,SAAA,QAAC,KAAQ;oCACd,OAAO,QAAS,eAAgB,8BAA8B;;+BAEnE,cAAc,GAAG;;;oBAG5B,OAAO;;;;QAInB,cAAc,aAAa,KAAK,CAAC,MAAM,WAAW,UAAU,IAAI,SAAS;YACrE,IAAI,aAAa,QAAQ;YACzB,OAAO;gBACH,UAAU,SAAA,SAAU,WAAU;oBAC1B,IAAI,yBAAyB,KAAK,MAAM,WAAW,QAAQ,6BAA6B;oBACxF,IAAI,wBAAwB;wBACxB,IAAI,MAAM,UAAS,OAAO;wBAC1B,IAAI,IAAI,QAAQ,sBAAsB,KAClC,UAAS,KAAK,wBAAwB,SAAS;4BAC/C,UAAS,OAAO,QAAQ,OAAO,UAAS,MAAM;gCAC1C,uBAAuB;gCACvB,yBAAyB;;;;oBAIrC,OAAO;;;;;KAK1B","file":"ovpApp/components/environment-dropdown/environment-dropdown.js","sourcesContent":["(() => {\n    'use strict';\n\n    function setVisualizerVisibility($uiRouter, visible) {\n        const visualizer = $uiRouter.getPlugin('visualizer');\n        if (!visualizer) {\n            // Visualizer doesn't exist in production builds, so this is expected\n            return;\n        }\n        const method = visible ? 'addClass' : 'removeClass';\n        angular.element(visualizer.stateVisualizerEl)[method]('show');\n        angular.element(visualizer.transitionVisualizerEl)[method]('show');\n    }\n\n    angular.module('ovpApp.components.environmentDropdown', [\n        'ovpApp.directives.dropdownList',\n        'ovpApp.version',\n        'ovpApp.services.nns',\n        'ui.router',\n        'ovpApp.config',\n        'ovpApp.services.ovpStorage',\n        'ovpApp.legacy.httpUtil'\n        ])\n        .constant('FEATURE_FLAGS', [\n            {\n                label: 'SpecU',\n                config: {\n                    specU: {\n                        enabled: true //Spec U auto access enabled\n                    }\n                }\n            },\n            {\n                label: 'Bulk MDU',\n                config: {\n                    bulkMDU: {\n                        enabled: true\n                    }\n                }\n            },\n            {\n                label: 'Bulk MDU (SpecU NNS config)',\n                config: {\n                    bulkMDU: {\n                        enabled: true\n                    },\n                    nns: {\n                        'bulkMDUConfig': 'ovp_specu_v1'\n                    }\n                }\n            },\n            {\n                label: 'Enable AdBlocker Check',\n                config: {\n                    adBlockerDetection: { // Check to see if user has an ad blocker installed\n                        enabled: true\n                    }\n                }\n            },\n            {\n                label: 'Masquerade Integration',\n                config: {\n                    masqueradeEnabled: true\n                }\n            },\n            {\n                label: 'Stream Plus',\n                config: {\n                    streamPlus: {\n                        enabled: true,\n                        buyFlowEnabled: true\n                    }\n                }\n            },\n            {\n                label: 'SSO from Spectrum.net',\n                config: {\n                    ssoEnabled: true\n                }\n            },\n            {\n                label: 'STB Settings',\n                config: {\n                    stbSettingsEnabled: true\n                }\n            }\n        ])\n        .constant('FIGARO_CONFIGS', [\n            {\n                label: 'SpecU',\n                config: {\n                    feature: 'SpecU',\n                    environment: 'figaro-prod',\n                    oauth: {\n                        'username': '2dvrtest',\n                        'password': 'password1',\n                        'uniqueId': '328947294723947238472834723',\n                        'action': '',\n                        'role': 'hoh',\n                        'ipaddress': '',\n                        'accountType': 'specu',\n                        'streamPlusEligible': false,\n                        'streamPlusDenied': false\n                    },\n                    capabilities: {\n                        'enableoverride': true,\n                        'watchlive': true,\n                        'watchondemand': true,\n                        'viewguide': true,\n                        'dvroperations': true,\n                        'tvod': true,\n                        'cdvr': true,\n                        'accessibility': true,\n                        'sppmembership': true,\n                        'iptvpackage': false,\n                        'parentalcontrols': false,\n                        'search': true,\n                        'outofhome': false\n                    }\n                }\n            },\n            {\n                label: 'Bulk MDU',\n                config: {\n                    feature: 'Bulk MDU',\n                    environment: 'figaro-prod',\n                    oauth: {\n                        'username': '2dvrtest',\n                        'password': 'password1',\n                        'uniqueId': '328947294723947238472834723',\n                        'action': '',\n                        'role': 'hoh',\n                        'ipaddress': '',\n                        'accountType': 'bulk',\n                        'streamPlusEligible': false,\n                        'streamPlusDenied': false\n                    },\n                    //TODO: check whether these are the right capabiliites. I just copy/pasted from specU\n                    capabilities: {\n                        'enableoverride': true,\n                        'watchlive': true,\n                        'watchondemand': true,\n                        'viewguide': true,\n                        'dvroperations': false,\n                        'tvod': false,\n                        'cdvr': false,\n                        'accessibility': false,\n                        'sppmembership': true,\n                        'iptvpackage': false,\n                        'parentalcontrols': false,\n                        'search': true,\n                        'outofhome': false\n                    }\n                }\n            },\n            {\n                label: 'Bulk MDU (SpecU NNS config)',\n                config: {\n                    feature: 'Bulk MDU (SpecU NNS config)',\n                    environment: 'figaro-prod',\n                    oauth: {\n                        'username': 'mystro_smn',\n                        'password': 'Th@nky0u',\n                        'uniqueId': '328947294723947238472834723',\n                        'action': '',\n                        'role': 'hoh',\n                        'ipaddress': '',\n                        'accountType': 'bulk',\n                        'streamPlusEligible': false,\n                        'streamPlusDenied': false\n                    },\n                    //TODO: check whether these are the right capabiliites. I just copy/pasted from specU\n                    capabilities: {\n                        'enableoverride': true,\n                        'watchlive': true,\n                        'watchondemand': true,\n                        'viewguide': true,\n                        'dvroperations': false,\n                        'tvod': false,\n                        'cdvr': false,\n                        'accessibility': false,\n                        'sppmembership': true,\n                        'iptvpackage': false,\n                        'parentalcontrols': false,\n                        'search': true,\n                        'outofhome': false\n                    }\n                }\n            },\n            {\n                label: 'Stream Plus',\n                config: {\n                    feature: 'Stream Plus',\n                    environment: 'figaro-prod',\n                    oauth: {\n                        'username': 'citruscounty1',\n                        'password': 'password1',\n                        'uniqueId': '328947294723947238472834723',\n                        'action': '',\n                        'role': 'hoh',\n                        'ipaddress': '',\n                        'accountType': '',\n                        'streamPlusEligible': true,\n                        'streamPlusDenied': false\n                    },\n                    capabilities: {\n                        'enableoverride': true,\n                        'watchlive': false,\n                        'watchondemand': false,\n                        'viewguide': false,\n                        'dvroperations': false,\n                        'tvod': false,\n                        'cdvr': false,\n                        'accessibility': false,\n                        'sppmembership': false,\n                        'iptvpackage': false,\n                        'parentalcontrols': false,\n                        'search': false,\n                        'outofhome': false\n                    }\n                }\n            }\n        ])\n        .run(function ($uiRouter, ovpStorage, storageKeys) {\n            //Setup the visualizer, so that it can be on screen before the dropdown is even launched\n            const visible = ovpStorage.getItem(storageKeys.visualizerEnabled);\n            setVisualizerVisibility($uiRouter, visible);\n        })\n        .component('environmentDropdown', {\n            bindings: {\n                modalInstance: '<'\n            },\n            templateUrl: '/js/ovpApp/components/environment-dropdown/environment-dropdown.html',\n            controller: class EnvironmentDropdown {\n                constructor(version, $state, NNSService, $uiRouter, $window, config,\n                    FEATURE_FLAGS, FIGARO_CONFIGS, ovpStorage, storageKeys, httpUtil, $http) {\n                    angular.extend(this, {version, $state, NNSService, $uiRouter, $window, config,\n                        FEATURE_FLAGS, FIGARO_CONFIGS, ovpStorage, storageKeys, httpUtil, $http});\n                }\n                $onInit() {\n                    this.configValue = this.ovpStorage.getItem(this.storageKeys.configOverride) || {};\n                    this.configValueString = JSON.stringify(this.configValue, null, 2);\n                    this.httpOverrideValue = this.ovpStorage.getItem(this.storageKeys.httpOverride) ||\n                        [{url: '', response: {status: 200, statusText: '', data: ''}}];\n                    this.bulkMDUOverrideEnabled = this.ovpStorage.getItem(this.storageKeys.bulkMDUOverrideEnabled) ||\n                        false;\n                    this.httpOverrideValueString = JSON.stringify(this.httpOverrideValue, null, 2);\n                    this.figaroConfigValue = this.ovpStorage.getItem(this.storageKeys.figaroOverride) || {};\n                    this.figaroConfigValueString = JSON.stringify(this.figaroConfigValue, null, 2);\n                    this.features = this.FEATURE_FLAGS;\n                    this.figaroConfigs = this.FIGARO_CONFIGS;\n                    this.environments = this.config.environmentMap;\n                    this.currentEnvironmentKey = this.config.environmentKey;\n                    this.visualizerEnabled = this.ovpStorage.getItem(this.storageKeys.visualizerEnabled);\n                    this.updateVisualizer();\n                    this.tdcsLink = `http://54.203.63.82:9090/#/ip/client/${this.config.deviceId.toUpperCase()}`;\n                    this.buildInfo = `/${this.config.version}/build-stats.html`;\n\n                    // Update NNS version\n                    if (this.$state.current.name.startsWith('login')) {\n                        this.nnsVersion = '(login to find out!)';\n                    } else {\n                        this.NNSService.getVersion().then(nnsVersion => {\n                            this.nnsVersion = nnsVersion;\n                        });\n                    }\n                }\n\n                applyFeature() {\n                    if (this.selectedFeature) {\n                        this.configValue = angular.extend(this.configValue, this.selectedFeature.config);\n                        this.configValueString = JSON.stringify(this.configValue, null, 2);\n                        this.selectedFeature = null;\n                    }\n                }\n\n                searchConfig() {\n                    let keys = Object.keys(this.config)\n                        .filter(ele => ele.match(new RegExp(this.configSearchText, 'gi')));\n                    if (keys.length > 0) {\n                        let val = {};\n                        keys.forEach(key => val[key] = this.config[key]);\n                        this.configValueString = JSON.stringify(val, null, 2);\n                    }\n                }\n\n                updateEnvironment() {\n                    // Clear Oauth\n                    this.httpUtil.cleanUp();\n                    // Change environment\n                    this.config.storeEnvironmentKey(this.currentEnvironmentKey);\n                    this.$window.location.reload();\n                }\n\n                // Private method\n                updateEnvironmentAndFeature() {\n                    // Update environment\n                    this.currentEnvironmentKey = this.figaroConfigValue.environment;\n                    // Update feature\n                    this.configValue = {};\n                    this.selectedFeature =\n                        this.features.find(feature => feature.label === this.figaroConfigValue.feature);\n                    this.applyFeature();\n                }\n\n                applyFigaroConfig() {\n                    if (this.selectedFigaroConfig) {\n                        this.figaroConfigValue =\n                            angular.extend(this.figaroConfigValue, this.selectedFigaroConfig.config);\n                        // Attach deviceid\n                        this.figaroConfigValue.oauth.deviceId = this.$window.localStorage.device_id.replace(/\\\"/g, '');\n                        this.figaroConfigValueString = JSON.stringify(this.figaroConfigValue, null, 2);\n                        this.selectedFigaroConfig = null;\n                        // Update Env & Feature\n                        this.updateEnvironmentAndFeature();\n                    }\n                }\n\n                updateHttpOverride() {\n                    try {\n                        let tmpStr = this.httpOverrideValueString\n                            .replace(/\\s+/g, ' ').replace(/[“”]/g, '\"');\n                        this.httpOverrideValue = JSON.parse(tmpStr);\n                        this.httpOverrideValueString = JSON.stringify(this.httpOverrideValue, null, 2);\n                        this.httpOverrideError = null;\n                    } catch (e) {\n                        this.httpOverrideError = e.message;\n                    }\n                }\n\n                resetHttpOverride() {\n                    this.httpOverrideError = null;\n                    this.httpOverrideValue = [{url: '', response: {status: 200, statusText: '', data: ''}}];\n                    this.httpOverrideValueString = JSON.stringify(this.httpOverrideValue, null, 2);\n                    this.applyHttpOverride();\n                }\n\n                applyHttpOverride() {\n                    this.ovpStorage.setItem(this.storageKeys.httpOverride, this.httpOverrideValue);\n                }\n\n                updateBulkMDUOverride() {\n                    this.ovpStorage.setItem(this.storageKeys.bulkMDUOverrideEnabled, this.bulkMDUOverrideEnabled);\n                    // Clear Oauth\n                    this.httpUtil.cleanUp();\n                    this.$window.localStorage.removeItem('autoAuthSignOutTime');\n                }\n\n                updateFigaroConfig() {\n                    try {\n                        this.figaroConfigValue = JSON.parse(this.figaroConfigValueString);\n                        this.figaroConfigError = null;\n                        // Update Env & Feature\n                        this.updateEnvironmentAndFeature();\n                    } catch (e) {\n                        this.figaroConfigError = e.message;\n                    }\n                }\n\n                registerDeviceWithFigaroAndRestart() {\n                    // Clear Oauth\n                    this.httpUtil.cleanUp();\n                    this.$window.localStorage.removeItem('autoAuthSignOutTime');\n                    // Feature config\n                    this.ovpStorage.removeItem(this.storageKeys.configOverride);\n                    this.ovpStorage.setItem(this.storageKeys.configOverride, this.configValue);\n                    // Environment\n                    this.config.storeEnvironmentKey(this.currentEnvironmentKey);\n                    // Store figaro config\n                    this.ovpStorage.setItem(this.storageKeys.figaroOverride, this.figaroConfigValue);\n\n                    this.$http({\n                        method: 'PUT',\n                        url: 'https://stva.figaro.spectrumtoolbox.com/auth/oauth/auto/authorize/authorization',\n                        data: this.figaroConfigValue.oauth,\n                        bypassRefresh: true\n                    }).then(() => {\n                        return this.$http({\n                            method: 'PUT',\n                            url: 'https://stva.figaro.spectrumtoolbox.com/ipvs/capabilities/device/' +\n                                this.$window.localStorage.device_id.replace(/\\\"/g, ''),\n                            'data': this.figaroConfigValue.capabilities,\n                            bypassRefresh: true\n                        }).then(() => {\n                            this.clearAuthAndReload();\n                        });\n                    }).catch(err => {\n                        this.$window.alert(err);\n                    });\n                }\n\n                clearStorageAndReload() {\n                    this.$window.localStorage.clear();\n                    this.$window.sessionStorage.clear();\n                    this.$window.location.reload();\n                }\n\n                clearAuthAndReload() {\n                    this.httpUtil.cleanUp();\n                    this.$window.localStorage.removeItem('autoAuthSignOutTime');\n                    this.$window.location.reload();\n                }\n\n                clearConfigValues() {\n                    this.ovpStorage.removeItem(this.storageKeys.configOverride);\n                    this.configValue = null;\n                    this.configValueString = '';\n                    this.$window.location.reload();\n                }\n\n                updateConfig() {\n                    try {\n                        this.configValue = JSON.parse(this.configValueString);\n                        this.configError = null;\n                    } catch (e) {\n                        this.configError = e.message;\n                    }\n                }\n\n                updateConfigValue() {\n                    if (this.configValue) {\n                        this.ovpStorage.setItem(this.storageKeys.configOverride, this.configValue);\n                        this.$window.location.reload();\n                    }\n                }\n\n                updateVisualizer() {\n                    this.ovpStorage.setItem(this.storageKeys.visualizerEnabled, this.visualizerEnabled);\n                    setVisualizerVisibility(this.$uiRouter, this.visualizerEnabled);\n                }\n            }\n        })\n        .config(function ($httpProvider) {\n            $httpProvider.interceptors.unshift(['$q', '$window', function ($q, $window) {\n                return {\n                    request: function (request) {\n                        let responseArray = JSON.parse($window.sessionStorage.getItem('httpOverride') || '{}');\n                        for (let i = 0; i < responseArray.length; i = i + 1) {\n                            if (responseArray[i].url &&\n                                request.url.indexOf(responseArray[i].url) > -1) {\n                                return $q.reject(angular.extend({\n                                    headers: (arg) => {\n                                        return (arg === 'x-trace-id') ? 'fake-x-trace-id-ignore-it' : '';\n                                    }\n                                }, responseArray[i].response));\n                            }\n                        }\n                        return request;\n                    }\n                };\n            }]);\n            $httpProvider.interceptors.push(['$q', '$window', function ($q, $window) {\n                let ovpStorage = $window.sessionStorage;\n                return {\n                    response: function (response) {\n                        let bulkMDUOverrideEnabled = JSON.parse(ovpStorage.getItem('bulkMDUOverrideEnabled') || false);\n                        if (bulkMDUOverrideEnabled) {\n                            let url = response.config.url;\n                            if (url.indexOf('/auto/authorize') >= 0 &&\n                                response.data.xoauth_account_type === 'SPECU') {\n                                response.data = angular.extend(response.data, {\n                                    'xoauth_account_type': 'BULK',\n                                    'xoauth_classification': 'MDU_BULK_MASTER'\n                                });\n                            }\n                        }\n                        return response;\n                    }\n                };\n            }]);\n        });\n})();\n"],"sourceRoot":"/source/"}