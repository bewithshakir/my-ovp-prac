{"version":3,"sources":["ovpApp/rdvr/rdvr-mock-dataService.js"],"names":[],"mappings":"AAAA;;AACA,QAAQ,OAAO,+BAA+B,CAAC,cAAc,cAE5D,IAAI,CAAC,aAAa,gBAAgB,QAAQ,UAAU,WAAW,cAAc,MAAM;IAChF;;IAEA,KAAK,KAAK;IACV,KAAK,KAAK;IACV,KAAK,KAAK;;;IAGV,aAAa,QAAQ,qBAAqB;;IAE1C,aAAa,QAAQ,aAChB,QAAQ,UAAU,yCAAyC;;IAEhE,aAAa,QAAQ,YAChB,QAAQ,UAAU,2CAA2C;;IAElE,aAAa,QAAQ,oEAChB,QAAQ,UAAU,wCAAwC;;IAE/D,aAAa,QAAQ,qEAChB,QAAQ,UAAU,2CAA2C;;IAElE,aAAa,QAAQ,iBAChB,QAAQ,UAAU,0CAA0C;;IAEjE,aAAa,QAAQ,iDAChB,QAAQ;;IAEb,aAAa,QAAQ,wBAChB,QAAQ,UAAU,+CAA+C;;IAEtE,aAAa,QAAQ,oCAChB,QAAQ,UAAU,wCAAwC;;IAE/D,aAAa,QAAQ,kBAChB,QAAQ,KAAK,UAAU,yCAAyC;;IAErE,aAAa,QAAQ,wDAChB,QAAQ,KAAK,UAAU,oDAAoD;;IAEhF,aAAa,QAAQ,wDAChB,QAAQ,KAAK,UAAU,oDAAoD;;IAEhF,aAAa,WAAW,8CACnB,QAAQ,KAAK;;IAElB,CAAC,SAAS,sBAAsB;QAC5B,IAAI,YAAY,UAAU,yCAAyC;QACnE,UAAU,SAAS,KAAK,YAAY;;;;;YAKhC,IAAI,kBAAkB,UAAU,WAAW;YAC3C,aAAa,QAAQ,IAAI,OAAO,CAC5B,MACA,YACA,gBAAgB,iBAChB,gBAAgB,cAChB,gBAAgB,2BAA2B,KAAK,OAAO,MACtD,QAAQ,KAAK,UAAU,yCAAyC;;YAErE,aAAa,QAAQ,6CAChB,QAAQ,KAAK;;;;IAI1B,aAAa,QAAQ,+DAChB,QAAQ,KAAK,UAAU,yCAAyC;IAErE","file":"ovpApp/rdvr/rdvr-mock-dataService.js","sourcesContent":["\nangular.module('ovpApp.rdvr.mockDataService', ['ngResource', 'ngMockE2E'])\n\n.run(['$resource', '$httpBackend', '$log', function ($resource, $httpBackend, $log) {\n    'use strict';\n\n    $log.info('############################################################');\n    $log.info('############ This will instantiate mock services ###########');\n    $log.info('############################################################');\n\n    // passThought for all non backend service calls\n    $httpBackend.whenGET(/^\\/*js\\/ovpApp\\/*/).passThrough();\n\n    $httpBackend.whenGET(/.*\\/usage/)\n        .respond($resource('/js/test/fixtures/rdvr/diskUsage.json').get());\n\n    $httpBackend.whenGET(/.*\\/stbs/)\n        .respond($resource('/js/test/fixtures/rdvr/setTopBoxes.json').get());\n\n    $httpBackend.whenGET(/.*\\/recorded(([\\?\\&]maxEventCount=[0-9]+)|([\\?\\&]startIndex=0))+/)\n        .respond($resource('/js/test/fixtures/rdvr/recorded.json').get());\n\n    $httpBackend.whenGET(/.*\\/recorded(([\\?\\&]maxEventCount=[0-9]+)|([\\?\\&]startIndex=50))+/)\n        .respond($resource('/js/test/fixtures/rdvr/recorded.50.json').get());\n\n    $httpBackend.whenGET(/.*\\/recording/)\n        .respond($resource('/js/test/fixtures/rdvr/recordings.json').get());\n\n    $httpBackend.whenGET(/.*\\/recorded\\/play\\/[0-9]+\\/[A-Z0-9]+\\/[0-9]+/)\n        .respond(200);\n\n    $httpBackend.whenPUT(/.*\\/recorded\\/delete/)\n        .respond($resource('/js/test/fixtures/rdvr/recorded.delete.json').get());\n\n    $httpBackend.whenGET(/.*\\/nmdepgs\\/v1\\/guide\\/channels/)\n        .respond($resource('/js/test/fixtures/rdvr/channels.json').get());\n\n    $httpBackend.whenGET(/.*\\/scheduled$/)\n        .respond(206, $resource('/js/test/fixtures/rdvr/scheduled.json').get());\n\n    $httpBackend.whenGET(/.*\\/scheduled\\?startUnixTimestampSeconds=1410237000$/)\n        .respond(206, $resource('/js/test/fixtures/rdvr/scheduled.1410237000.json').get());\n\n    $httpBackend.whenGET(/.*\\/scheduled\\?startUnixTimestampSeconds=1410426000$/)\n        .respond(200, $resource('/js/test/fixtures/rdvr/scheduled.1410426000.json').get());\n\n    $httpBackend.whenDELETE(/.*\\/scheduled\\/[0-9]+\\/[A-Z0-9]+\\/[0-9]+\\//)\n        .respond(200, '');\n\n    (function setupUpdateSchedule() {\n        var scheduled = $resource('/js/test/fixtures/rdvr/scheduled.json').get();\n        scheduled.$promise.then(function () {\n\n            // If the 2nd list item on the scheduled tab\n            // is updated, lead the user to the conflicts\n            // modal.\n            var scheduled2ndRow = scheduled.recordings[1];\n            $httpBackend.whenPUT(new RegExp([\n                '.*',\n                'schedule',\n                scheduled2ndRow.mystroServiceId,\n                scheduled2ndRow.tmsProgramId,\n                scheduled2ndRow.startUnixTimestampSeconds].join('/') + '/'))\n                .respond(409, $resource('/js/test/fixtures/rdvr/conflicts.json').get());\n\n            $httpBackend.whenPUT(/.*\\/schedule\\/[0-9]+\\/[A-Z0-9]+\\/[0-9]+\\//)\n                .respond(200, '');\n        });\n    })();\n\n    $httpBackend.whenGET(/.*\\/scheduled\\/conflicts\\/[0-9]+\\/[A-Z0-9]+\\/[0-9]+\\/series/)\n        .respond(200, $resource('/js/test/fixtures/rdvr/conflicts.json').get());\n\n}]);\n"],"sourceRoot":"/source/"}