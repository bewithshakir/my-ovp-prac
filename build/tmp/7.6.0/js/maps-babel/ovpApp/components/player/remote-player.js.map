{"version":3,"sources":["ovpApp/components/player/remote-player.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,CAAC,YAAY,EAAE,SAAS,iBAAiB,QAAQ,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,aAAa,MAAM,IAAI,WAAW,aAAa,WAAW,cAAc,OAAO,WAAW,eAAe,MAAM,IAAI,WAAW,YAAY,WAAW,WAAW,MAAM,OAAO,eAAe,QAAQ,WAAW,KAAK,iBAAiB,OAAO,UAAU,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,iBAAiB,YAAY,WAAW,aAAa,IAAI,aAAa,iBAAiB,aAAa,cAAc,OAAO;;AAEjiB,SAAS,gBAAgB,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;AAJhH,CAAC,YAAM;IACH;;;IAEA,QAAQ,OAAO,uBAAuB,CAClC,gCACA,uCACA,MACA,4BACD,QAAQ,qBAAqB,mBAC/B,UAAU,gBAAgB;QACvB,aAAa;QACb,YAAU,CAAA,YAAA;;;;YAEK,SAFG,OAEF,QAAQ,mBAAmB,sBAAsB,cAAc,UAAU;gBAEjF,gBAAgB,MAJN;;gBAGV,QAAQ,OAAO,MAAM,EAAC,QAAA,QAAQ,mBAAA,mBAAmB,sBAAA,sBAAsB,cAAA,cAAc,UAAA;;;YAMzF,aATc,QAAM,CAAA;gBAUhB,KAAK;gBACL,OANG,SAAA,UAAG;oBAOF,IAAI,QAAQ;;oBANhB,KAAK,UAAU;oBACf,KAAK,cAAc;oBACnB,KAAK,QAAQ;oBACb,KAAK,kBAAkB;oBACvB,KAAK,aAAa;oBAClB,KAAK,yBAAyB,KAAK,kBAAkB,YAChD,UAAU,UAAA,SAAW;wBAClB,IAAI,QAAQ,OAAO;4BACf,MAAK,cAAc,QAAQ;4BAC3B,MAAK,QAAQ,QAAQ;4BACrB,MAAK,WAAW,QAAQ;4BACxB,MAAK,WAAW,QAAQ;;;oBAGpC,KAAK,aAAa,QAAQ,IAAI,UAAC,YAAe;wBAC1C,MAAK,UAAU,WAAW,KAAK,KAAK,WAAW;wBAC/C,IAAI,MAAK,SAAS;;4BAEd,MAAK,SAAS,YAAM;gCAChB,MAAK,kBAAe,oFACd,MAAK,YAAY,QAAQ,MAAK,YAAY,cAAU;+BAE3D;;;;eASZ;gBACC,KAAK;gBACL,OAPM,SAAA,aAAG;oBACT,IAAI,KAAK,wBAAwB;wBAC7B,KAAK,uBAAuB;;;eAUjC;gBACC,KAAK;gBACL,OATU,SAAA,iBAAG;oBACb,KAAK,kBAAkB;;oBAEvB,IAAI,KAAK,UAAU;wBACf,KAAK,qBAAqB,cAAc,KAAK,UAAU,KAAK;2BACzD;wBACH,KAAK,OAAO,GAAG;;;;;YAcvB,OAzDc;;;;IAiDtB,SAAS,kBAAkB,IAAI;QAC3B,IAAM,QAAQ,IAAI,GAAG,gBAAgB;QACrC,OAAO;YACH,YAAA;YACA,gBAAA;YACA,WAAA;;;;;QAKJ,SAAS,aAAyB;YAa9B,IAbgB,UAAO,UAAA,UAAA,KAAA,UAAA,OAAA,YAAG,KAAE,UAAA;;YAC5B,MAAM,OAAO;;;QAGjB,SAAS,iBAAiB;YACtB,MAAM,OAAO;;;QAGjB,SAAS,YAAY;YACjB,OAAO,MACF,eACA;;;KAGZ","file":"ovpApp/components/player/remote-player.js","sourcesContent":["(() => {\n    'use strict';\n\n    angular.module('ovpApp.remotePlayer', [\n        'ovpApp.remotePlayer.controls',\n        'ovpApp.product.productActionService',\n        'rx',\n        'ovpApp.directives.focus'\n    ]).factory('remotePlayService', remotePlayService)\n    .component('remotePlayer', {\n        templateUrl: '/js/ovpApp/components/player/remote-player.html',\n        controller: class Player {\n            /* @ngInject */\n            constructor($state, remotePlayService, productActionService, $transitions, $timeout) {\n                angular.extend(this, {$state, remotePlayService, productActionService, $transitions, $timeout});\n            }\n            $onInit() {\n                this.visible = false;\n                this.selectedStb = null;\n                this.asset = null;\n                this.ariaLiveMessage = '';\n                this.buttonText = 'Switch Playback to This Device';\n                this.remotePlaySubscription = this.remotePlayService.getSource()\n                    .subscribe(options => {\n                        if (options.asset) {\n                            this.selectedStb = options.stb;\n                            this.asset = options.asset;\n                            this.tvAction = options.tvAction;\n                            this.ipAction = options.ipAction;\n                        }\n                    });\n                this.$transitions.onEnter({}, (transition) => {\n                    this.visible = transition.to().name.startsWith('ovp.playRemote');\n                    if (this.visible) {\n                        // for screen reader\n                        this.$timeout(() => {\n                            this.ariaLiveMessage = `This title has been sent to play on TV named\n                                ${this.selectedStb.name || this.selectedStb.macAddress},\n                                Use your TV remote or device for player controls.`;\n                        }, 100);\n                    }\n                });\n            }\n            $onDestroy() {\n                if (this.remotePlaySubscription) {\n                    this.remotePlaySubscription.dispose();\n                }\n            }\n            switchPlayBack() {\n                this.remotePlayService.stopRemotePlay();\n\n                if (this.ipAction) {\n                    this.productActionService.executeAction(this.ipAction, this.asset);\n                } else {\n                    this.$state.go('ovp.livetv');\n                }\n            }\n        }\n    });\n\n    function remotePlayService(rx) {\n        const state = new rx.BehaviorSubject({});\n        return {\n            remotePlay,\n            stopRemotePlay,\n            getSource\n        };\n\n        /////////////\n\n        function remotePlay(options = {}) {\n            state.onNext(options);\n        }\n\n        function stopRemotePlay() {\n            state.onNext({});\n        }\n\n        function getSource() {\n            return state\n                .asObservable()\n                .distinctUntilChanged();\n        }\n    }\n})();\n"],"sourceRoot":"/source/"}