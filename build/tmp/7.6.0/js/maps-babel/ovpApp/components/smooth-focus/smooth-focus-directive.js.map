{"version":3,"sources":["ovpApp/components/smooth-focus/smooth-focus-directive.js"],"names":[],"mappings":"AAAA;;AAAC,CAAA,YAAY;;iDACT;IACA,QAAQ,OAAO,kCAAkC,CAAC,OACjD,UAAU,eAAe;;;IAG1B,SAAS,YAAY,SAAS,IAAI;QAC9B,IAAI,mBAAmB;QACvB,OAAO;YACH,MAAM,SAAA,KAAU,QAAQ,UAAU;gBAC9B,IAAI,SAAS,GAAG,WAAW,UAAU,UAAU;gBAC/C,OAAO,SAAS,IAAI,UAAU;;;;QAItC,SAAS,YAAY,OAAO;YACxB,IAAI,iBAAiB,QAAQ,QAAQ,MAAM;YAC3C,IAAI,wBAAwB,QAAQ,QAAQ,SAAS;YACrD,IAAI,gBAAgB,eAAe,SAAS,MAAM;YAClD,IAAI,wBAAwB,eAAe,SAAS,MAAM,eAAe,YAAY;;YAErF,IAAI,gBAAgB,oBAAoB,wBAAwB,GAAG;gBAC/D,IAAI,YAAY,mBAAmB;gBACnC,IAAI,YAAW,wBAAwB;gBACvC,IAAI,YAAW,GAAG;oBACd,YAAW;;gBAEf,QAAQ,QAAQ,cAAc,QAAQ;oBAClC,WAAW;mBACZ,KAAK;;;;YAIZ,IAAI,wBAAyB,wBAAwB,QAAQ,eACzD,eAAe,YAAY,SAAS,QAAQ,cAAc,kBAAkB;;;gBAG5E,IAAI,aAAW,wBAAwB,QAAQ;gBAC/C,QAAQ,QAAQ,cAAc,QAAQ;oBAClC,WAAW;mBACZ,KAAK;;;;KAInB","file":"ovpApp/components/smooth-focus/smooth-focus-directive.js","sourcesContent":["(function () {\n    'use strict';\n    angular.module('ovpApp.directives.smooth-focus', ['rx'])\n    .directive('smoothFocus', smoothFocus);\n\n    /* @ngInject */\n    function smoothFocus($window, rx) {\n        var minimumTopMargin = 187;\n        return {\n            link: function ($scope, $element) {\n                let source = rx.Observable.fromEvent($element, 'focusin');\n                source.debounce(50).subscribe(fixPosition);\n            }\n        };\n\n        function fixPosition(event) {\n            let focusedElement = angular.element(event.target);\n            let currentScrollPosition = angular.element($window).scrollTop();\n            let focusPosition = focusedElement.offset().top - currentScrollPosition;\n            let focussedElementBottom = focusedElement.offset().top + focusedElement.outerHeight(true);\n\n            if (focusPosition < minimumTopMargin && currentScrollPosition > 0) {\n                let scrollAdd = minimumTopMargin - focusPosition;\n                let scrollTo = currentScrollPosition - scrollAdd;\n                if (scrollTo < 0) {\n                    scrollTo = 0;\n                }\n                angular.element('html, body').animate({\n                    scrollTop: scrollTo\n                }, 100, 'swing');\n            }\n\n            // Check if the focussed element extends outside the viewport\n            if (focussedElementBottom > (currentScrollPosition + $window.innerHeight) &&\n                focusedElement.outerHeight(true) <= $window.innerHeight - minimumTopMargin) {\n                // calculate the value by which element\n                // should scroll such that it shows up on the viewport completely.\n                let scrollTo = focussedElementBottom - $window.innerHeight;\n                angular.element('html, body').animate({\n                    scrollTop: scrollTo\n                }, 100, 'swing');\n            }\n        }\n    }\n}());\n"],"sourceRoot":"/source/"}