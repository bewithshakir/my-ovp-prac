{"version":3,"sources":["ovpApp/product/other-ways/other-ways.js"],"names":[],"mappings":"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","file":"ovpApp/product/other-ways/other-ways.js","sourcesContent":["(function () {\n    'use strict';\n    angular.module('ovpApp.product.otherWays', [\n        'ovpApp.services.profileService',\n        'ovpApp.product.productActionService',\n        'ovpApp.product.button',\n        'ovpApp.services.dateFormat',\n        'ovpApp.dataDelegate',\n        'ovpApp.directives.focus'])\n    .constant('languageLabelMap', {\n        'en': '',\n        'sp': 'ESP',\n        'es': 'ESP'\n    })\n    .component('otherWaysPopup', {\n        bindings: {\n            resolve: '<'\n        },\n        template: `\n        <p id=\"ariaLabelledByText\" class=\"sr-only\">Other ways to watch {{$ctrl.resolve.asset.title}}, </p>\n        <other-ways asset=\"$ctrl.resolve.asset\" in-popup=\"true\"/>`\n    })\n    .component('otherWays', {\n        bindings: {\n            asset: '<',\n            inPopup: '<'\n        },\n        templateUrl: '/js/ovpApp/product/other-ways/other-ways.html',\n        controller: class OtherWays {\n            constructor(actionTypeMap, languageLabelMap, $filter,\n                $rootScope, dateFormat, delegateUtils, profileService) {\n                angular.extend(this, {actionTypeMap, languageLabelMap, $filter,\n                    $rootScope, dateFormat, delegateUtils, profileService});\n            }\n\n            $onInit() {\n                this.profileService.isCdvrEnabled().then(isEnabled => {\n                    this.isCdvrEnabled = isEnabled;\n                });\n            }\n\n            $onChanges(changes) {\n                if (changes.asset) {\n                    this.onAssetChanged();\n                }\n            }\n\n            onAssetChanged() {\n                this.activeTab = 'watchHere';\n\n                if (this.asset && (!this.asset.watchHereActions || this.asset.watchHereActions.length === 0)) {\n                    this.activeTab = 'watchOnTv';\n                }\n\n                const isOoh = !!(this.$rootScope.location && this.$rootScope.location.behindOwnModem === false);\n\n                //Create a new item that contains some calculated data as well as all the\n                //same existing fields as the 'item'\n                const itemMapper = item => {\n                    let out = {\n                        label: this.getLabel(item.actionType),\n                        timeAvailability: this.getTimeAvailability(item),\n                        lang: this.getLanguageLabel(item),\n                        network: this.getNetwork(item),\n                        statusIcon: this.getStatusIcon(item),\n                        ooh: isOoh,\n                        streamProps: this.getStreamProperties(item),\n                        chNumber: this.getChannelNumber(item),\n                        callSign: this.getCallSign(item),\n                        cdvrNotCompleted: this.cdvrNotCompleted(item),\n                        isSeriesRecording: this.asset ? this.asset.isSeriesRecording : null\n                    };\n                    return Object.assign(out, item);\n                };\n\n                this.watchOnTvActions = this.asset ? this.asset.watchOnTvActions.map(itemMapper) : [];\n                this.watchHereActions = this.asset ? this.asset.watchHereActions.map(itemMapper) : [];\n            }\n\n            setActiveTab(tab) {\n                if (tab === 'watchHere' && this.watchHereActions && this.watchHereActions.length > 0) {\n                    this.activeTab = tab;\n                } else if (tab === 'watchOnTv' && this.watchOnTvActions && this.watchOnTvActions.length > 0) {\n                    this.activeTab = tab;\n                }\n            }\n\n            getLabel(actionType) {\n                return this.actionTypeMap[actionType].otherWaysWatchOnTVLabel;\n            }\n\n            getTimeAvailability(item) {\n                if (['futureAiring', 'scheduleRecording', 'watchLiveOnTv', 'watchLiveIP', 'cdvrScheduleRecording',\n                     'cdvrCancelRecording', 'cdvrDeleteRecording', 'cdvrResumeRecording', 'cdvrPlayRecording']\n                    .indexOf(this.actionTypeMap[item.actionType].id) > -1) {\n                    let stream = this.asset.streamList[item.streamIndex];\n                    let startDate = new Date(parseInt(stream.streamProperties.startTime));\n\n                    return this.dateFormat.relative.expanded.atTime(startDate);\n                } else if (['watchOnDemandOnTv', 'resumeOnDemandOnTv', 'watchOnDemandIP', 'resumeOnDemandIP']\n                    .indexOf(this.actionTypeMap[item.actionType].id) > -1) {\n                    let stream = this.asset.streamList[item.streamIndex];\n                    let endTime = stream.streamProperties.tvodEntitlement ?\n                        stream.streamProperties.tvodEntitlement.rentalEndTimeUtcSeconds * 1000 :\n                        stream.streamProperties.endTime;\n                    let endDate = new Date(parseInt(endTime));\n                    return 'Available until ' + this.dateFormat.relative.short.atTime(endDate);\n                }\n                return '';\n            }\n\n            getNetwork(item) {\n                let stream = this.asset.streamList[item.streamIndex];\n                let callsign = '';\n                let channel = '';\n                if (stream.network && stream.network.callsign) {\n                    callsign = stream.network.callsign;\n                }\n                if (stream.streamProperties.allChannelNumbers) {\n                    channel = stream.streamProperties.allChannelNumbers[0];\n                }\n                return callsign + ((callsign && channel) ? ' | ' : '') + channel;\n            }\n\n            getChannelNumber(item) {\n                let stream = this.asset.streamList[item.streamIndex];\n                let channel = '';\n                if (stream.streamProperties.allChannelNumbers) {\n                    channel = stream.streamProperties.allChannelNumbers[0];\n                }\n                return channel;\n            }\n\n            getCallSign(item) {\n                let stream = this.asset.streamList[item.streamIndex];\n                let callsign = '';\n                if (stream.network && stream.network.callsign) {\n                    callsign = stream.network.callsign;\n                }\n                return callsign;\n            }\n\n            getLanguageLabel(item) {\n                let language = this.asset.streamList[item.streamIndex].streamProperties.primaryAudioLanguage;\n                return this.languageLabelMap[language];\n            }\n\n            getStatusIcon(item) {\n                let stream = this.asset.streamList[item.streamIndex];\n\n                if (!stream.isEntitled) {\n                    return 'unentitled';\n                } else {\n                    return false;\n                }\n            }\n\n            getStreamProperties(item) {\n                let stream = this.asset.streamList[item.streamIndex];\n                let properties = this.delegateUtils.getStreamProps(stream);\n                properties.rating = stream.streamProperties.rating || '';\n                return properties;\n            }\n\n            cdvrNotCompleted(item) {\n                let stream = this.asset.streamList[item.streamIndex];\n                return stream.cdvrNotCompleted;\n            }\n\n        }\n    });\n})();\n"],"sourceRoot":"/source/"}