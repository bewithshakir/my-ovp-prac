{"version":3,"sources":["ovpApp/search/result-pages/search-results.js"],"names":[],"mappings":"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","file":"ovpApp/search/result-pages/search-results.js","sourcesContent":["(() => {\n    'use strict';\n\n    angular\n        .module('ovpApp.search.results', [\n            'ovpApp.directives.gridList',\n            'ovpApp.search.resultListItem',\n            'ovpApp.config'\n        ])\n        .component('searchResults', {\n            templateUrl: '/js/ovpApp/search/result-pages/search-results.html',\n            bindings: {\n                results: '<',\n                query: '<'\n            },\n            controller: class SearchResultsController {\n                /* @ngInject */\n                constructor($scope, $stateParams, searchFocusIndex, config, $rootScope, $state) {\n                    angular.extend(this, {\n                        $scope,\n                        $stateParams,\n                        searchFocusIndex,\n                        config,\n                        $rootScope,\n                        $state\n                    });\n                }\n\n                $onInit() {\n                    this.limit = this.config.search.fullResultsPerCategory;\n                    this.layout = {};\n                    this.resultCount = 0;\n                    this.filters = [];\n                    this.filterIndex = undefined;\n                    this.focusFilter = false;\n                    this.searchResultsTitle = '';\n\n                    this.initFilters();\n                    this.updateResultsTitle();\n\n                    this.focusOnLoad = this.$stateParams.focusOnLoad ?\n                        JSON.parse(this.$stateParams.focusOnLoad) : false;\n                    this.focusIndex = this.searchFocusIndex.get();\n\n                    this.$rootScope.$broadcast('pageChangeComplete', this.$state.current);\n                }\n\n                updateResultsTitle() {\n                    if (this.resultCount > 0) {\n                        this.searchResultsTitle = `Search for: \"${this.query}\" (${this.resultCount} results)`;\n                    } else {\n                        this.searchResultsTitle = `No results matching \"${this.query}\". Please try another search.`;\n                    }\n                    this.$scope.$emit('search-results-title', this.searchResultsTitle);\n                }\n\n                initFilters() {\n                    let desiredFilters = [{\n                            resultDisplay: 'Movie',\n                            text: 'Movies'\n                        }, {\n                            resultDisplay: 'Series',\n                            text: 'Tv Shows'\n                        }\n                    ];\n\n                    this.filters = [];\n\n                    desiredFilters.forEach(desired => {\n                        let existsInResults = this.results.categories.some(cat =>\n                            cat.results.some(asset => asset.resultDisplay === desired.resultDisplay));\n\n                        if (existsInResults) {\n                            desired.filterFxn = element => element.resultDisplay === desired.resultDisplay;\n                            desired.clickCallback = () => {\n                                this.setFilter(desired.filterFxn);\n                                // Focus filter on reload\n                                this.focusFilter = true;\n                            };\n                            this.filters.push(desired);\n                        }\n                    });\n\n                    let filterAll = () => true;\n                    if (this.filters.length > 0) {\n                        this.filters.unshift({\n                            text: 'All',\n                            filterFxn: filterAll,\n                            clickCallback: () => this.setFilter(filterAll)\n                        });\n                    }\n\n                    this.setFilter(filterAll);\n                }\n\n                getCategoryTitle(category) {\n                    return category.title + ' (' + Math.min(this.limit, category.numResults) + ' results)';\n                }\n\n                setFilter(filterFxn) {\n                    let index = this.filters.findIndex(f => f.filterFxn === filterFxn);\n                    if (this.filterIndex !== index) {\n                        this.filterIndex = index;\n                        this.layout = {\n                            categories: []\n                        };\n\n                        if (this.results && this.results.categories) {\n                            this.results.categories.forEach(category => {\n                                let programs = category.results.filter(filterFxn);\n                                if (programs.length > 0) {\n                                    this.layout.categories.push({\n                                        title: category.title,\n                                        results: programs,\n                                        numResults: programs.length\n                                    });\n                                }\n                            });\n                        }\n\n                        this.resultCount = this.countResults();\n                    }\n                }\n\n                countResults() {\n                    if (!this.layout || !this.layout.categories) {\n                        return 0;\n                    }\n\n                    return this.layout.categories.reduce((a, b) => {\n                        return b.numResults ? a + Math.min(this.limit, b.numResults) : a;\n                    }, 0);\n                }\n            }\n        });\n})();\n"],"sourceRoot":"/source/"}