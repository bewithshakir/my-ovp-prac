{"version":3,"sources":["ovpApp/ondemand/subheader/ondemand-subheader-service.js"],"names":[],"mappings":"AAAA;;AAAA,CAAC,YAAY;IACT;;;;;;;IAOA,QAAQ,OAAO,oCAAoC,CAC3C,OAEH,QAAQ,mCAA4B,UAAU,IAAI;QAC/C,IAAM,UAAU,IAAI,GAAG,gBAAgB;YACnC,eAAe;;QAEnB,IAAM,UAAU;YACZ,WAAA;YACA,UAAA;;;QAGJ,OAAO;;;;QAIP,SAAS,YAAY;YACjB,OAAO,QAAQ;;;QAGnB,SAAS,WAAqB;YAA9B,IAAkB,QAAK,UAAA,UAAA,KAAA,UAAA,OAAA,YAAG,KAAE,UAAA;;YACxB,QAAQ,OAAO;;;KAG1B","file":"ovpApp/ondemand/subheader/ondemand-subheader-service.js","sourcesContent":["(function () {\n    'use strict';\n\n    /**\n     * The ondemand subheader needs to be changed depending on what part\n     * of ondemand is currently loaded. This service is used for getting\n     * and setting the state of the subheader\n     */\n    angular.module('ovpApp.ondemand.subheaderService', [\n            'rx'\n        ])\n        .factory('ondemandSubheaderService', function (rx) {\n            const subject = new rx.BehaviorSubject({\n                showFrontDoor: true\n            });\n            const service = {\n                getSource,\n                setState\n            };\n\n            return service;\n\n            ////////////////\n\n            function getSource() {\n                return subject.asObservable();\n            }\n\n            function setState(state = {}) {\n                subject.onNext(state);\n            }\n        });\n})();\n"],"sourceRoot":"/source/"}