{"version":3,"sources":["ovpApp/components/alert/alert.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,CAAC,YAAY,EAAE,SAAS,iBAAiB,QAAQ,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,aAAa,MAAM,IAAI,WAAW,aAAa,WAAW,cAAc,OAAO,WAAW,eAAe,MAAM,IAAI,WAAW,YAAY,WAAW,WAAW,MAAM,OAAO,eAAe,QAAQ,WAAW,KAAK,iBAAiB,OAAO,UAAU,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,iBAAiB,YAAY,WAAW,aAAa,IAAI,aAAa,iBAAiB,aAAa,cAAc,OAAO;;AAEjiB,SAAS,gBAAgB,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;AAJ/G,CAAA,YAAY;IACT;;;IAEA,QAAQ,OAAO,2BAA2B,CACtC,gBACA,2BACA,4BAEH,QAAQ,SAAS,OACjB,UAAU,kBAAkB;QACzB,UAAU;YACN,SAAS;YACT,eAAe;;QAEnB,aAAa;QACb,YAAU,CAAA,YAAA;;;;YAEK,SAFG,MAEF,YAAY;gBAEpB,gBAAgB,MAJN;;gBAGV,QAAQ,OAAO,MAAM,EAAC,YAAA;;;YAM1B,aATc,OAAK,CAAA;gBAUf,KAAK;gBACL,OALM,SAAA,WAAC,SAAS;oBAChB,IAAI,QAAQ,SAAS;wBACjB,KAAK,QAAQ,KAAK,QAAQ;wBAC1B,KAAK,UAAU,KAAK,QAAQ;wBAC5B,KAAK,aAAa,KAAK,QAAQ;wBAC/B,KAAK,WAAW,KAAK,QAAQ;wBAC7B,KAAK,qBAAqB,KAAK,QAAQ;;;;oBAI3C,KAAK,WAAW,MAAM,yBAAyB,EAAC,WAAW,KAAK;oBAChE,KAAK,WAAW,MAAM,wBAAwB;wBAC1C,aAAa;wBACb,WAAW,KAAK,qBAAqB,KAAK,qBAAqB;wBAC/D,WAAW,KAAK,UAAW,QAAQ,UAAU,QAAQ,QAAQ,eAAe;;;eAQjF;gBACC,KAAK;gBACL,OANC,SAAA,QAAG;oBACJ,KAAK,cAAc,MAAM;oBACzB,KAAK,WAAW,WAAW,oBAAoB;wBAC3C,yBAAyB;;;;;YAWjC,OAtCc;;;;;;IAmCtB,SAAS,MAAM,OAAO;QAClB,IAAM,UAAU;YACZ,MAAA;;QAEJ,OAAO;;;;QAIP,SAAS,OAAmB;YAUxB,IAVU,UAAO,UAAA,UAAA,KAAA,UAAA,OAAA,YAAG,KAAE,UAAA;;YACtB,OAAO,MAAM,KAAK;gBACd,MAAM;gBACN,eAAe,QAAQ,iBAAiB;gBACxC,aAAa,QAAQ,eAAe;gBACpC,WAAW;gBACX,gBAAgB;gBAChB,iBAAiB;gBACjB,SAAS;oBACL,OAAO,SAAA,QAAA;wBAYH,OAZS,QAAQ;;oBACrB,SAAS,SAAA,UAAA;wBAcL,OAdW,QAAQ;;oBACvB,YAAY,SAAA,aAAA;wBAgBR,OAhBc,QAAQ;;oBAC1B,UAAU,SAAA,WAAA;wBAkBN,OAlBY,KAAK;;oBACrB,oBAAoB,SAAA,qBAAA;wBAoBhB,OApBsB,QAAQ;;;;;;KAKjD","file":"ovpApp/components/alert/alert.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular.module('ovpApp.components.alert', [\n        'ui.bootstrap',\n        'ovpApp.components.modal',\n        'ovpApp.directives.focus'\n    ])\n    .factory('alert', alert)\n    .component('alertComponent', {\n        bindings: {\n            resolve: '<',\n            modalInstance: '<'\n        },\n        templateUrl: '/js/ovpApp/components/alert/alert.html',\n        controller: class Alert {\n            /* @ngInject */\n            constructor($rootScope) {\n                angular.extend(this, {$rootScope});\n            }\n\n            $onChanges(changes) {\n                if (changes.resolve) {\n                    this.title = this.resolve.title;\n                    this.message = this.resolve.message;\n                    this.buttonText = this.resolve.buttonText;\n                    this.openTime = this.resolve.openTime;\n                    this.analyticsModalName = this.resolve.analyticsModalName;\n                }\n\n                // Analytics\n                this.$rootScope.$emit('Analytics:modal-start', {timestamp: this.openTime});\n                this.$rootScope.$emit('Analytics:modal-view', {\n                    triggeredBy: 'application',\n                    modalName: this.analyticsModalName ? this.analyticsModalName : null,\n                    modalText: JSON.stringify((changes.resolve ? changes.resolve.currentValue : ''))\n                });\n            }\n\n            close() {\n                this.modalInstance.close('closed by user');\n                this.$rootScope.$broadcast('Analytics:select', {\n                    elementStandardizedName: 'ok'\n                });\n            }\n        }\n    });\n\n    // A specific type of modal, used for displaying a title, a message, and a single button\n    /* @ngInject */\n    function alert(modal) {\n        const service = {\n            open\n        };\n        return service;\n\n        ////////////\n\n        function open(options = {}) {\n            return modal.open({\n                size: 'md',\n                showCloseIcon: options.showCloseIcon || false,\n                windowClass: options.windowClass || 'generic-alert',\n                component: 'alertComponent',\n                ariaLabelledBy: 'alert-title',\n                ariaDescribedBy: 'alert-error-message',\n                resolve: {\n                    title: () => options.title,\n                    message: () => options.message,\n                    buttonText: () => options.buttonText,\n                    openTime: () => Date.now(),\n                    analyticsModalName: () => options.analyticsModalName\n                }\n            });\n        }\n    }\n}());\n"],"sourceRoot":"/source/"}