{"version":3,"sources":["ovpApp/components/stb-picker/stb-picker.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,CAAC,YAAY,EAAE,SAAS,iBAAiB,QAAQ,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,aAAa,MAAM,IAAI,WAAW,aAAa,WAAW,cAAc,OAAO,WAAW,eAAe,MAAM,IAAI,WAAW,YAAY,WAAW,WAAW,MAAM,OAAO,eAAe,QAAQ,WAAW,KAAK,iBAAiB,OAAO,UAAU,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,iBAAiB,YAAY,WAAW,aAAa,IAAI,aAAa,iBAAiB,aAAa,cAAc,OAAO;;AAEjiB,SAAS,gBAAgB,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;AAJhH,CAAC,YAAM;IACH;;;;;;;;;;;;;;IAcA,QAAQ,OAAO,oBAAoB,IAC9B,UAAU,aAAa;QACpB,aAAa;QACb,UAAU;YACN,SAAS;YACT,eAAe;;QAEnB,YAAU,CAAA,YAAA;;;;YAEK,SAFG,UAEF,YAAY,SAAS,gBAAgB;gBAOjD,gBAAgB,MATF;;gBAGV,QAAQ,OAAO,MAAM;oBACjB,YAAA;oBACA,SAAA;oBACA,gBAAA;;;;YAYZ,aAlBkB,WAAS,CAAA;gBAmBvB,KAAK;gBACL,OAVO,SAAA,UAAG;oBACN,KAAK,iBAAiB,KAAK;;eAYhC;gBACC,KAAK;gBACL,OAXU,SAAA,WAAC,SAAS;oBAChB,IAAI,QAAQ,SAAS;wBACjB,KAAK,QAAQ,KAAK,QAAQ;wBAC1B,KAAK,OAAO,KAAK,QAAQ;wBACzB,KAAK,WAAW,KAAK,QAAQ;wBAC7B,KAAK,kBAAkB,KAAK,QAAQ;;;eAc7C;gBACC,KAAK;gBACL,OAZS,SAAA,YAAG;oBACR,OAAO,KAAK,QAAQ,aAAa,qBAC5B,KAAK,kBAAkB,YAAY,MAAM;;eAanD;gBACC,KAAK;gBACL,OAZQ,SAAA,SAAC,KAAK;oBAaV,IAAI,QAAQ;;oBAZZ,IAAI,QAAQ,WAAW,KAAK,WAAW;wBACnC,IAAM,UAAU,KAAK,GAAG,KAAK,KAAK,SAAS,MACtC,KACG,YAAA;4BAaJ,OAbU,MAAK,cAAc,MAAM;2BAC/B,UAAC,OAAK;4BAcV,OAde,MAAK,cAAc,QAAQ,EAAC,OAAA,OAAO,KAAA;;;wBAGtD,KAAK,eAAe,WAAW;2BAC5B;wBACH,KAAK,cAAc,MAAM;;;;;YAmBrC,OAzDkB;;;KA2CzB","file":"ovpApp/components/stb-picker/stb-picker.js","sourcesContent":["(() => {\n    'use strict';\n\n    /**\n     * Dialog for selecting a set top box\n     *\n     * bindings:\n     *   resolve: {\n     *     title: title of the dialog\n     *     stbs: list of set top boxes\n     *     onSelect: callback to execute when the stb is selected.\n     *               If this takes time, a loading spinner will display\n     *   }\n     *\n     */\n    angular.module('ovpApp.stbPicker', [])\n        .component('stbPicker', {\n            templateUrl: '/js/ovpApp/components/stb-picker/stb-picker.html',\n            bindings: {\n                resolve: '<',\n                modalInstance: '<'\n            },\n            controller: class StbPicker {\n                /* @ngInject */\n                constructor(stbService, version, promiseTracker) {\n                    angular.extend(this, {\n                        stbService,\n                        version,\n                        promiseTracker\n                    });\n                }\n\n                $onInit() {\n                    this.loadingTracker = this.promiseTracker();\n                }\n\n                $onChanges(changes) {\n                    if (changes.resolve) {\n                        this.title = this.resolve.title;\n                        this.stbs = this.resolve.stbs;\n                        this.callback = this.resolve.callback;\n                        this.ariaDescription = this.resolve.ariaDescription;\n                    }\n                }\n\n                closeIcon() {\n                    return this.version.appVersion + '/images/close-x' +\n                        (this.activeCloseIcon ? '-active' : '') + '.svg';\n                }\n\n                onSelect(stb) {\n                    if (angular.isFunction(this.callback)) {\n                        const promise = this.$q.when(this.callback(stb))\n                            .then(\n                                () => this.modalInstance.close(stb),\n                                (error) => this.modalInstance.dismiss({error, stb})\n                            );\n\n                        this.loadingTracker.addPromise(promise);\n                    } else {\n                        this.modalInstance.close(stb);\n                    }\n                }\n            }\n        });\n})();\n"],"sourceRoot":"/source/"}