{"version":3,"sources":["ovpApp/services/drmSession-service.js"],"names":[],"mappings":"AAAA;;AAAA,CAAC,YAAY;IACT;;;IAEA,QAAQ,OAAO,qCAAqC,CAChD,iBACA,+BAEH,QAAQ,qBAAqB;;;IAG9B,SAAS,kBAAkB,OAAO,IAAI,QAAQ,YAAY,aAAa;QACnE,OAAO;YACH,eAAe,SAAA,gBAAY;gBACvB,IAAI,aAAa,WAAW,QAAQ,YAAY;gBAChD,IAAI,iBAAiB,GAAG;gBACxB,IAAI,QAAQ,KAAK,KAAK;gBACtB,IAAI,CAAC,cAAe,cAAc,WAAW,yBACnC,WAAW,wBAAwB,OAAQ,QAAU,IAAI,OAAO,WAAa;oBACnF,MAAM;wBACF,QAAQ;wBACR,KAAK,OAAO,SAAS,OAAO,aAAa,OAAO,QAAQ;wBACxD,iBAAiB;uBAEpB,KAAK,UAAU,cAAc;wBAC1B,IAAI,WAAW,aAAa;wBAC5B,WAAW,QAAQ,YAAY,eAAe;wBAC9C,eAAe,QAAQ;uBACxB,UAAU,OAAO;wBAChB,eAAe,OAAO;;uBAEvB;oBACH,eAAe,QAAQ;;gBAE3B,OAAO,eAAe;;YAE1B,OAAO,SAAA,QAAY;gBACf,WAAW,WAAW,YAAY;;;;KAI7C","file":"ovpApp/services/drmSession-service.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular.module('ovpApp.services.drmSessionService', [\n        'ovpApp.config',\n        'ovpApp.services.ovpStorage'\n    ])\n    .factory('drmSessionService', drmSessionService);\n\n    /* @ngInject */\n    function drmSessionService($http, $q, config, ovpStorage, storageKeys) {\n        return {\n            getDRMSession: function () {\n                var drmSession = ovpStorage.getItem(storageKeys.drmSessionKey);\n                var getDRMDeferred = $q.defer();\n                var delta = 60 * 60 * 1000; // Retry 1 hour before the expiration time\n                if (!drmSession || (drmSession && drmSession.expirationTimeSeconds &&\n                        ((drmSession.expirationTimeSeconds * 1000) - delta) < (new Date().getTime()))) {\n                    $http({\n                        method: 'GET',\n                        url: config.piHost + config.smartTvApi + config.smartTv.adobeSession,\n                        withCredentials: true\n                    })\n                    .then(function (httpResponse) {\n                        let response = httpResponse.data;\n                        ovpStorage.setItem(storageKeys.drmSessionKey, response);\n                        getDRMDeferred.resolve(response);\n                    }, function (error) {\n                        getDRMDeferred.reject(error);\n                    });\n                } else {\n                    getDRMDeferred.resolve(drmSession);\n                }\n                return getDRMDeferred.promise;\n            },\n            reset: function () {\n                ovpStorage.removeItem(storageKeys.drmSessionKey);\n            }\n        };\n    }\n}());\n"],"sourceRoot":"/source/"}