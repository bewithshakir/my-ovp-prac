{"version":3,"sources":["ovpApp/ondemand/subheader/ondemand-subheader.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,CAAC,YAAY,EAAE,SAAS,iBAAiB,QAAQ,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,aAAa,MAAM,IAAI,WAAW,aAAa,WAAW,cAAc,OAAO,WAAW,eAAe,MAAM,IAAI,WAAW,YAAY,WAAW,WAAW,MAAM,OAAO,eAAe,QAAQ,WAAW,KAAK,iBAAiB,OAAO,UAAU,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,iBAAiB,YAAY,WAAW,aAAa,IAAI,aAAa,iBAAiB,aAAa,cAAc,OAAO;;AAEjiB,SAAS,gBAAgB,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;AAJhH,CAAC,YAAM;IACH;IACA,QACK,OAAO,6BAA6B,CACjC,4BAEH,UAAU,qBAAqB;QAC5B,UAAU;YACN,WAAW;;QAEf,aAAa;QACb,YAAU,CAAA,YAAA;;;;YAEK,SAFG,4BAEF,cAAc,YAAY,QAAQ,QAAQ,cAClD,0BAA0B;gBAG9B,gBAAgB,MANF;;gBAIV,QAAQ,OAAO,MAAM,EAAC,cAAA,cAAc,YAAA,YAAY,QAAA,QAAQ,QAAA,QAAQ,cAAA;oBAC5D,0BAAA;;;YAOZ,aAZkB,6BAA2B,CAAA;gBAazC,KAAK;gBACL,OANO,SAAA,UAAG;oBAON,IAAI,QAAQ;;oBANZ,KAAK,sBAAsB;;oBAE3B,KAAK,eAAe,KAAK,yBAAyB,YAC7C,UAAU,UAAA,SAAO;wBAQlB,OARsB,MAAK,iBAAiB;;;eAWrD;gBACC,KAAK;gBACL,OATU,SAAA,aAAG;oBACT,KAAK,aAAa;;eAWvB;gBACC,KAAK;gBACL,OAVgB,SAAA,iBAAC,MAAM;;oBAEnB,KAAK,WAAW,WAAW,oBAAoB;wBAC3C,eAAe;wBACf,6BAA6B,KAAK;wBAClC,eAAe;wBACf,iBAAiB;;;eAa1B;gBACC,KAAK;gBACL,OAXgB,SAAA,iBAAC,SAAS;oBACtB,KAAK,UAAU;oBACf,KAAK,QAAQ,QAAQ,qBAAqB;oBAC1C,IAAI,QAAQ,WAAW;wBACnB,KAAK,WAAW,MAAM,oBAAoB,QAAQ;;;eAc3D;gBACC,KAAK;gBACL,OAZQ,SAAA,SAAC,UAAU;oBACf,IAAM,UAAU,KAAK,aAAa,2BAA2B,SAAS;oBACtE,OAAA,kBAAuB;;eAc5B;gBACC,KAAK;gBACL,OAbU,SAAA,WAAC,UAAU;oBACjB,IAAI,UAAU,KAAK,aAAa,2BAA2B,SAAS;oBACpE,OAAO,KAAK,OAAO,QAAQ,SAAI,kBAAqB;;eAezD;gBACC,KAAK;gBACL,OAde,SAAA,gBAAC,SAAS;oBACrB,KAAK,QAAQ,KAAK,QAAQ,gBAAgB,QAAQ;;oBAElD,IAAI,eAAe,KAAK,OAAO;oBAC/B,IAAI,gBAAgB,KAAK,OAAO;oBAChC,cAAc,QAAQ,KAAK;oBAC3B,cAAc,OAAO;oBACrB,KAAK,OAAO,GAAG,aAAa,MAAM;;eAgBvC;gBACC,KAAK;gBACL,OAfM,SAAA,SAAG;oBACL,IAAI,KAAK,WAAW,KAAK,QAAQ,aAAa;wBAC1C,KAAK,QAAQ;;;;;YAoBzB,OAhFkB;;;KAiEzB","file":"ovpApp/ondemand/subheader/ondemand-subheader.js","sourcesContent":["(() => {\n    'use strict';\n    angular\n        .module('ovpApp.ondemand.subheader', [\n            'ovpApp.directives.focus'\n        ])\n        .component('onDemandSubheader', {\n            bindings: {\n                menuItems: '<'\n            },\n            templateUrl: '/js/ovpApp/ondemand/subheader/ondemand-subheader.html',\n            controller: class OnDemandSubheaderController {\n                /* @ngInject */\n                constructor(onDemandData, $rootScope, $scope, $state, $transitions,\n                    ondemandSubheaderService) {\n                    angular.extend(this, {onDemandData, $rootScope, $scope, $state, $transitions,\n                        ondemandSubheaderService});\n                }\n\n                $onInit() {\n                    this.returnedFromViewAll = false;\n\n                    this.subscription = this.ondemandSubheaderService.getSource()\n                        .subscribe(options => this.onOptionsChanged(options));\n\n                }\n\n                $onDestroy() {\n                    this.subscription.dispose();\n                }\n\n                selectSubheading(item) {\n                    // Analytics\n                    this.$rootScope.$broadcast('Analytics:select', {\n                        elementUiName: 'Continue',\n                        nonNormalizedElementStdName: item.name,\n                        operationType: 'navigationClick',\n                        pageSectionName: 'navPageSecondary'\n                    });\n                }\n\n                onOptionsChanged(options) {\n                    this.options = options;\n                    this.index = options.network3TierIndex || 0;\n                    if (options.pageTitle) {\n                        this.$rootScope.$emit('ovp:setPageTitle', options.pageTitle);\n                    }\n                }\n\n                getState(menuItem) {\n                    const catName = this.onDemandData.formatCategoryNameForRoute(menuItem.name);\n                    return `ovp.ondemand.${catName}`;\n                }\n\n                isSelected(menuItem) {\n                    let catName = this.onDemandData.formatCategoryNameForRoute(menuItem.name);\n                    return this.$state.current.name === `ovp.ondemand.${catName}`;\n                }\n\n                networkSelected(network) {\n                    this.index = this.options.childNetworks().indexOf(network);\n\n                    let currentState = this.$state.current;\n                    let currentParams = this.$state.params;\n                    currentParams.index = this.index;\n                    currentParams.page = 1;\n                    this.$state.go(currentState.name, currentParams);\n                }\n\n                goBack() {\n                    if (this.options && this.options.onBackClick) {\n                        this.options.onBackClick();\n                    }\n                }\n            }\n        });\n})();\n"],"sourceRoot":"/source/"}