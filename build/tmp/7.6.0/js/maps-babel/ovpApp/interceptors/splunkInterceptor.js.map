{"version":3,"sources":["ovpApp/interceptors/splunkInterceptor.js"],"names":[],"mappings":"AAAA;;AAAC,CAAA,YAAY;;uDACT;IACA,QAAQ,OAAO,8BAA8B,CAAC,kBACzC,OAAO;;;;;;;;IAQZ,SAAS,kBAAkB,eAAe;QACtC,cAAc,aAAa,KAAK,CAAC,MAAM,aAAa,QAAQ,UAAU,IAAI,WAAW,MAAM;YACvF,OAAO;gBACH,eAAe,SAAA,cAAU,UAAU;oBAC/B,IAAI,eAAe,WAAW;;;oBAG9B,IAAI,YAAY,SAAS,WAAW,CAAC,GAAG;wBACpC,OAAO,GAAG,OAAO;;;oBAGrB,IAAI,YAAY,SAAS,QAAQ;wBAC7B,aAAa,SAAS,OAAO;;wBAE7B,IAAI;4BACA,gBAAgB,UAAU,IAAI;4BAC9B,YAAY,UAAU,IAAI;;4BAE1B,IAAI,cAAc,WAAW,QAAQ,UAAU,OAAO,YAAY,CAAC,GAAG;gCAClE,IAAI,aAAc,WAAW,QAAQ,gBAAgB,CAAC;gCACtD,IAAI,YAAY,SAAS,QAAQ,SAAS,KAAK,WAC3C,SAAS,KAAK,QAAQ;gCAC1B,IAAI,SAAS;oCACT,SAAS;oCACT,YAAY;oCACZ,gBAAgB,SAAS;oCACzB,cAAe,cAAc,YACzB,SAAS,KAAK,QAAQ,8BACtB,SAAS;;;;;gCAKjB,IAAI,UAAU,SAAS,WAAW,SAAS,QAAQ;gCACnD,IAAI,SAAS;oCACT,OAAO,gBAAgB;;;gCAG3B,IAAI,MAAM,QAAQ,SAAS,OAAO,iBAC9B,SAAS,OAAO,aAAa,QAAQ,SAAS,YAAY,CAAC,GAAG;oCAC9D,cAAc,kBAAkB,QAAQ;uCACrC;oCACH,cAAc,iBAAiB;;;0BAGzC,OAAO,OAAO;4BACZ,KAAK,MAAM;;;;oBAInB,OAAO,GAAG,OAAO;;;;;KAKhC","file":"ovpApp/interceptors/splunkInterceptor.js","sourcesContent":["(function () {\n    'use strict';\n    angular.module('ovpApp.interceptors.splunk', ['ovpApp.config'])\n        .config(splunkInterceptor);\n\n    /**\n     * Send service error messages to splunkl\n     * @param $httpProvider\n     */\n\n    /* @ngInject */\n    function splunkInterceptor($httpProvider) {\n        $httpProvider.interceptors.push(['$q', '$injector', '$log', function ($q, $injector, $log) {\n            return {\n                responseError: function (response) {\n                    var SplunkService, appConfig, requestUrl;\n\n                    // if the client aborted this request then don't report it to Splunk\n                    if (response && response.status === -1) {\n                        return $q.reject(response);\n                    }\n\n                    if (response && response.config) {\n                        requestUrl = response.config.url;\n\n                        try {\n                            SplunkService = $injector.get('SplunkService');\n                            appConfig = $injector.get('config');\n\n                            if (requestUrl && requestUrl.indexOf(appConfig.splunk.domain) === -1) {\n                                let isTVODRent = (requestUrl.indexOf('tvod\\/rent') > -1);\n                                let hasDetail = response.data && response.data.context &&\n                                    response.data.context.detailedResponseDescription;\n                                let errObj = {\n                                    httpUrl: requestUrl,\n                                    isTVODRent: isTVODRent,\n                                    httpStatusCode: response.status,\n                                    errorMessage: (isTVODRent && hasDetail) ?\n                                        response.data.context.detailedResponseDescription :\n                                        response.data\n                                    //errorCode: '' optional,\n                                    //populate after implementing the Standardized Error Code story.\n                                };\n\n                                let traceId = response.headers && response.headers('x-trace-id');\n                                if (traceId) {\n                                    errObj['x-trace-id'] = traceId;\n                                }\n\n                                if (Array.isArray(response.config.ignoreStatus) &&\n                                    response.config.ignoreStatus.indexOf(response.status) !== -1) {\n                                    SplunkService.sendCustomMessage(errObj, 'INFO');\n                                } else {\n                                    SplunkService.sendServiceError(errObj);\n                                }\n                            }\n                        } catch (error) {\n                            $log.error(error);\n                        }\n                    }\n\n                    return $q.reject(response);\n                }\n            };\n        }]);\n    }\n}());\n"],"sourceRoot":"/source/"}