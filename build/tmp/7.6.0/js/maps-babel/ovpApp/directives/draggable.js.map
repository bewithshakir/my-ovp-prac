{"version":3,"sources":["ovpApp/directives/draggable.js"],"names":[],"mappings":"AAAA;;AAAA,CAAC,YAAY;IACT;;;;;IAEA,QACK,OAAO,+BAA+B,CAAC,kBACvC,OAAO,UAAU,QACjB,OAAO,QAAQ,MACf,UAAU,aAAa;;;IAG5B,SAAS,UAAU,WAAW;QAC1B,OAAO,UAAU,OAAO,SAAS,OAAO;YACpC,IAAI,SAAS;gBACT,OAAO;gBACP,WAAW;gBACX,IAAI;gBACJ,WAAW;;YAEf,MAAM,SAAS,YAAY,UAAA,UAAY;gBACnC,IAAI,aAAa,QAAQ;;oBACrB,QAAQ,IAAI;uBACT;oBACH;;;;YAIR,SAAS,OAAO;gBACZ,QAAQ,GAAG,aAAa,UAAU,OAAO;;oBAErC,MAAM;oBACN,SAAS,MAAM;oBACf,OAAO,QAAQ,GAAG;oBAClB,WAAW,QAAQ,GAAG;oBACtB,IAAI,OAAQ,WAAW,IAAK,MAAM,UAAU;oBAC5C,MAAM,MAAM,4BAA4B,EAAC,UAAU;oBACnD,UAAU,GAAG,aAAa;oBAC1B,UAAU,GAAG,WAAW;oBACxB,WAAW;;;;YAInB,SAAS,UAAU,OAAO;gBACtB,IAAI,CAAC,UAAU;oBACX;;gBAEJ,IAAI,OAAQ,WAAW,IAAK,MAAM,UAAU;gBAC5C,MAAM,MAAM,kCAAkC;oBAC1C,UAAU;;;;YAIlB,SAAS,UAAU;gBACf,IAAI,CAAC,UAAU;oBACX;;gBAEJ,WAAW;gBACX,MAAM,MAAM,0BAA0B;oBAClC,UAAU;;gBAEd,UAAU,IAAI,aAAa;gBAC3B,UAAU,IAAI,WAAW;;;YAG7B;;;;;IAKR,SAAS,OAAO,YAAY;QACxB,OAAO,WAAW;;;;IAItB,SAAS,KAAK,YAAY;QACtB,OAAO,WAAW;;KAErB","file":"ovpApp/directives/draggable.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular\n        .module('ovpApp.directives.draggable', ['ovpApp.config'])\n        .filter('hhmmss', hhmmss)\n        .filter('hhmm', hhmm)\n        .directive('draggable', draggable);\n\n    /* @ngInject */\n    function draggable($document) {\n        return function (scope, element, attrs) {\n            var startX = 0,\n                eleX = 0,\n                eleWidth = 0,\n                x = 0,\n                dragging = false; // Discard unexpected events\n\n            attrs.$observe('disabled', disabled => {\n                if (disabled === 'true') {  //ick\n                    element.off('mousedown');\n                } else {\n                    init();\n                }\n            });\n\n            function init() {\n                element.on('mousedown', function (event) {\n                    // Prevent default dragging of selected content\n                    event.preventDefault();\n                    startX = event.screenX;\n                    eleX = element[0].offsetLeft;\n                    eleWidth = element[0].offsetWidth;\n                    x = eleX + (eleWidth / 2) + event.screenX - startX;\n                    scope.$emit('slider-handle-drag-start', {position: x});\n                    $document.on('mousemove', mousemove);\n                    $document.on('mouseup', mouseup);\n                    dragging = true;\n                });\n            }\n\n            function mousemove(event) {\n                if (!dragging) {\n                    return;\n                }\n                x = eleX + (eleWidth / 2) + event.screenX - startX;\n                scope.$emit('slider-handle-position-changed', {\n                    position: x\n                });\n            }\n\n            function mouseup() {\n                if (!dragging) {\n                    return;\n                }\n                dragging = false;\n                scope.$emit('slider-handle-drag-end', {\n                    position: x\n                });\n                $document.off('mousemove', mousemove);\n                $document.off('mouseup', mouseup);\n            }\n\n            init();\n        };\n    }\n\n    /* @ngInject */\n    function hhmmss(dateFormat) {\n        return dateFormat.hhmmss;\n    }\n\n    /* @ngInject */\n    function hhmm(dateFormat) {\n        return dateFormat.hhmm;\n    }\n})();\n"],"sourceRoot":"/source/"}