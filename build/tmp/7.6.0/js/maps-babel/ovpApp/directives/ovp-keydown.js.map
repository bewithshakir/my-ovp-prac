{"version":3,"sources":["ovpApp/directives/ovp-keydown.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA;;AAAA,CAAC,YAAM;IACH;;;;;IAEA,QACK,OAAO,6BAA6B,CAAC,OACrC,QAAQ,iBAAiB,eACzB,UAAU,cAAc,YACxB,UAAU,YAAY,UACtB,SAAS,UAAU;QAChtB,OAAO;YACH,MAAM,SAAA,KAAU,QAAQ,UAAU,QAAQ;gBACtC,IAAI,QAAQ,YAAY,OAAO,WAAW;oBACtC,SAAS,KAAK,YAAY;;gBAE9B,IAAI,aAAa,OAAO,OAAO;oBAC3B,QAAQ,SAAR,MAAkB,QAAQ;oBACtB,OAAO,OAAO,YAAY;wBACtB,WAAW,QAAQ,EAAC,QAAQ;;;oBAGpC,QAAQ,SAAR,MAAkB,QAAQ;;oBAEtB,IAAM,OAAO,EAAC,OAAO,IAAI,OAAO;oBAChC,IAAM,UAAU,OAAO,SAAS,OAAO;oBACvC,IAAI,YAAY,KAAK,SAAS,YAAY,KAAK,OAAO;;wBAElD,OAAO;wBACP,OAAO;;wBAEP,OAAO,OAAO,YAAY;4BACtB,WAAW,QAAQ,EAAC,QAAQ;;;;gBAI5C,SAAS,GAAG,SAAS;gBACrB,SAAS,GAAG,SAAS;gBACrB,OAAO,IAAI,YAAY,YAAM;oBACzB,SAAS,IAAI,SAAS;oBACtB,SAAS,IAAI,SAAS;;;;;;;IAOtC,SAAS,WAAW,UAAU,QAAQ;QAClC,IAAI,YAAY;YACZ,MAAM;YACN,UAAU;YACV,OAAO;gBACH,cAAc;;;QAGtB,OAAO;;QAEP,SAAS,KAAK,OAAO,SAAS,OAAO;YACjC,IAAI,SAAS;YACb,SAAS,YAAM;gBACX,QAAQ,QAAQ,MAAM,YAAY,UAAC,KAAK,KAAQ;oBAC5C,IAAI,OAAO,IAAI,MAAM,KAAK,IAAI,UAAC,GAAC;wBAF5B,OAEiC,EAAE,OAAO;;oBAC9C,IAAI,KAAK,WAAW,GAAG;wBACnB,OAAO,KAAK,MAAM;2BACf,IAAI,KAAK,WAAW,GAAG;wBAC1B,OAAO,KAAK,MAAM;4BACd,KAAK,KAAK;4BACV,UAAU;;;;;YAK1B,QAAQ,QAAQ,SAAS,GAAG,WAAW,UAAC,OAAU;gBAC9C,IAAI,UAAU;gBACd,IAAI,MAAM,MAAM;gBAChB,IAAI,MAAM,QAAQ,OAAO;;oBAErB,MAAM;;;;gBAIV,UAAU,MAAM,OAAO,IAAI,iBAAiB,OAAO,OAAO,MAAM,SAAS;;gBAEzE,IAAI,QAAQ,WAAW,YACnB,CAAC,MAAM,WAAW,CAAC,MAAM,YAAY,CAAC,MAAM,WAAW,CAAC,MAAM,QAAQ;oBACtE,QAAQ;oBACR,QAAQ,OAAO;uBACZ,IAAI,QAAQ,SAAS,YACxB,QAAQ,WAAW,QAAQ,aAC3B,MAAM,QAAQ,MAAM,WAAW,MAAM;oBACrC,QAAQ,SAAS;oBACjB,QAAQ,OAAO;;;YAGvB,MAAM,IAAI,YAAY,YAAM;gBACxB,QAAQ,QAAQ,SAAS,IAAI,WAAW;;;YAG5C,SAAS,QAAQ,OAAO;gBACpB,IAAI,QAAQ,UAAU,MAAM,oBAAoB;oBAC5C,MAAM;;gBAEV,IAAI,QAAQ,UAAU,MAAM,qBAAqB;oBAC7C,MAAM;;;;;;IAMtB,SAAS,cAAc,WAAW,IAAI;QAClC,IAAI,aAAa,GAAG,WAAW,UAAU,UAAU,GAAG,MAAM;QAC5D,OAAO,EAAC,YAAA;;KAEX","file":"ovpApp/directives/ovp-keydown.js","sourcesContent":["/**\n * OVP keydown\n *\n * Usage:\n *   <div class=\"player\">\n *     <div ovp-keydown=\"{space: playPause, enter: playPause}\" ovp-prevent-default ovp-stop-propagation></div>\n *     <div ovp-keydown=\"{'ctrl+down': mute}\" ovp-prevent-default ovp-stop-propagation></div>\n *   </div>\n *\n * Key is jQuery event key - https://api.jquery.com/keydown/\n * Value is handler method\n * `ovp-prevent-default` and `ovp-stop-propagation` attributes are to prevent the default and stop propagating event\n *\n * Special keys: ctrl, shift, meta, alt\n * Other keys: escape, arrowright, arrowleft, arrowup, arrowdown, backspace, capslock, tab, a, b, ?, /, 1, 2, 3, etc...\n */\n(() => {\n    'use strict';\n\n    angular\n        .module('ovpApp.directives.keydown', ['rx'])\n        .factory('globalKeydown', globalKeydown)\n        .directive('ovpKeydown', ovpKeydown)\n        .directive('ovpClick', ovpClick)\n        .constant('keyMap', {\n            3: 'break',\n            8: 'delete',\n            9: 'tab',\n            12: 'clear',\n            13: 'enter',\n            16: 'shift',\n            17: 'ctrl',\n            18: 'alt',\n            19: 'pause',\n            27: 'escape',\n            32: 'spacebar',\n            33: 'pageup',\n            34: 'pagedown',\n            35: 'end',\n            36: 'home ',\n            37: 'arrowleft',\n            38: 'arrowup',\n            39: 'arrowright',\n            40: 'arrowdown',\n            41: 'select',\n            42: 'print',\n            43: 'execute',\n            45: 'insert',\n            46: 'delete',\n            48: '0',\n            49: '1',\n            50: '2',\n            51: '3',\n            52: '4',\n            53: '5',\n            54: '6',\n            55: '7',\n            56: '8',\n            57: '9',\n            58: ':',\n            60: '<',\n            65: 'a',\n            66: 'b',\n            67: 'c',\n            68: 'd',\n            69: 'e',\n            70: 'f',\n            71: 'g',\n            72: 'h',\n            73: 'i',\n            74: 'j',\n            75: 'k',\n            76: 'l',\n            77: 'm',\n            78: 'n',\n            79: 'o',\n            80: 'p',\n            81: 'q',\n            82: 'r',\n            83: 's',\n            84: 't',\n            85: 'u',\n            86: 'v',\n            87: 'w',\n            88: 'x',\n            89: 'y',\n            90: 'z'\n        });\n\n    /* @ngInject */\n    function ovpClick($parse) {\n        return {\n            link: function ($scope, $element, $attrs) {\n                if (angular.isUndefined($attrs.tabindex)) {\n                    $element.attr('tabindex', '0');\n                }\n                var callbackFn = $parse($attrs.ovpClick),\n                    click = function ($event) {\n                        $scope.$apply(function () {\n                            callbackFn($scope, {$event: $event});\n                        });\n                    },\n                    keyup = function ($event) {\n                        // Some browsers use keyCode and others use which.\n                        const keys = {enter: 13, space: 32};\n                        const keyCode = $event.which || $event.keyCode;\n                        if (keyCode === keys.enter || keyCode === keys.space) {\n                            // We want keyup to perform the click functionality and it should not be propagated further\n                            $event.preventDefault();\n                            $event.stopPropagation();\n\n                            $scope.$apply(function () {\n                                callbackFn($scope, {$event: $event});\n                            });\n                        }\n                    };\n                $element.on('click', click);\n                $element.on('keyup', keyup);\n                $scope.$on('$destroy', () => {\n                    $element.off('click', click);\n                    $element.off('keyup', keyup);\n                });\n            }\n        };\n    }\n\n    /* @ngInject */\n    function ovpKeydown($timeout, keyMap) {\n        let directive = {\n            link: link,\n            restrict: 'A',\n            scope: {\n                'ovpKeydown': '='\n            }\n        };\n        return directive;\n\n        function link(scope, element, attrs) {\n            let params = {};\n            $timeout(() => {\n                angular.forEach(scope.ovpKeydown, (val, key) => {\n                    let keys = key.split('+').map((a) => a.trim().toLowerCase());\n                    if (keys.length === 1) {\n                        params[keys[0]] = val;\n                    } else if (keys.length === 2) {\n                        params[keys[1]] = {\n                            key: keys[0],\n                            callback: val\n                        };\n                    }\n                });\n            });\n            angular.element(element).on('keydown', (event) => {\n                let handler = null;\n                let key = event.key;\n                if (event.key === 'Esc') {\n                    //key comes as 'Esc' on Internet Explorer so we need to map it with 'escape'\n                    key = 'escape';\n                }\n                //On Safari we do not get the key but only the keyCode so need to fallback\n                //on the keycode to get the handler.\n                handler = key ? params[key.toLowerCase()] : params[keyMap[event.keyCode].toLowerCase()];\n\n                if (angular.isFunction(handler) &&\n                    !event.metaKey && !event.shiftKey && !event.ctrlKey && !event.altKey) {\n                    handler(event);\n                    prevent(event, attrs);\n                } else if (angular.isObject(handler) &&\n                    angular.isFunction(handler.callback) &&\n                    event[handler.key + 'Key'] === true) {\n                    handler.callback(event);\n                    prevent(event, attrs);\n                }\n            });\n            scope.$on('$destroy', () => {\n                angular.element(element).off('keydown', '**');\n            });\n\n            function prevent(event) {\n                if (angular.isDefined(attrs.ovpPreventDefault)) {\n                    event.preventDefault();\n                }\n                if (angular.isDefined(attrs.ovpStopPropagation)) {\n                    event.stopPropagation();\n                }\n            }\n        }\n    }\n\n    function globalKeydown($document, rx) {\n        let observable = rx.Observable.fromEvent($document[0].body, 'keydown');\n        return {observable};\n    }\n})();\n"],"sourceRoot":"/source/"}