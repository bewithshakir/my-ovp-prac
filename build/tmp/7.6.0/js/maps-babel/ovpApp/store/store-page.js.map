{"version":3,"sources":["ovpApp/store/store-page.js"],"names":[],"mappings":"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","file":"ovpApp/store/store-page.js","sourcesContent":["(function () {\n    'use strict';\n    angular.module('ovpApp.store', [\n                'ovpApp.config',\n                'ui.router',\n                'ovpApp.services.store',\n                'ovpApp.services.homePage',\n                'ovpApp.services.bookmark',\n                'ovpApp.legacy.stringUtil'\n    ])\n    .component('storePage', {\n        templateUrl: '/js/ovpApp/store/store-page.html',\n        bindings: {\n            page: '<',\n            category: '<'\n        },\n        controller: class Store {\n            /* @ngInject */\n            constructor($rootScope, StoreService, $state, homePage, BookmarkService,\n                        config, stringUtil) {\n                this.$rootScope = $rootScope;\n                this.StoreService = StoreService;\n                this.$state = $state;\n                this.homePage = homePage;\n                this.BookmarkService = BookmarkService;\n                this.config = config;\n                this.stringUtil = stringUtil;\n            }\n\n            $onInit() {\n                this.page = this.page || 1;\n                this.carouselLimit = 8;\n                this.itemOptions = {\n                    enableRemove: false,\n                    showRentalInfo: true,\n                    hideNWLogo: true\n                };\n                this.storeCarouselConfig = {\n                    emptyMessage: 'Store is empty!'\n                };\n                this.gridConfig = {\n                    defaultState: 'grid',\n                    title: '',\n                    showToggle: false,\n                    id: 'vodMinorCategoryViewMode',\n                    useLocalStorage: true\n                };\n\n                this.errorMessage = false;\n\n                this.homePage().then(this.storeTitleCallback.bind(this), this.storeTitleCallback.bind(this));\n                var promise,\n                    limit = this.config.vodAssetsPerPage,\n                    startIndex = (this.page - 1) * limit;\n                if (this.category) {\n                    this.categories = null;\n                    promise = this.StoreService.getCategory(this.category, startIndex, limit).then(cat => {\n                        let category = cat;\n\n                        if (category.total_results < startIndex) {\n                            this.onPageChanged(1);\n                            return;\n                        }\n\n                        this.results = category.results;\n\n                        // Angular watches the object reference for changes,\n                        // not the object's properties. So create a new copy to\n                        // force angular to register a change on the config.\n                        this.gridConfig = angular.copy(this.gridConfig);\n                        this.gridConfig.title = category.name;\n                        this.gridConfig.showTotal = true;\n                        this.gridConfig.totalItems = category.total_results;\n\n                        this.gridLimit = limit;\n                        this.totalItems = category.total_results;\n                        this.$rootScope.$broadcast('pageChangeComplete', this.$state.current);\n                    }, () => {\n                        this.$state.go('ovp.store', {category: null, page: undefined});\n                    });\n                } else {\n                    promise = this.StoreService.getFrontdoor().then((categories) => {\n                        categories.forEach(category => {\n                            category.carouselConfig = Object.assign({\n                                title: category.name,\n                                viewAllUri: category.uri && 'ovp.store.viewall({category:\"' +\n                                    this.stringUtil.addParameterToUri(category.uri, 'catName', category.name) +\n                                    '\", page: 1})'\n                            }, this.storeCarouselConfig);\n                        });\n                        this.categories = categories;\n                        this.$rootScope.$broadcast('pageChangeComplete', this.$state.current);\n                    }, () => {\n                        this.errorMessage = 'Unable to retrieve store data. Reload the page to try again.';\n                    });\n                }\n\n                this.$rootScope.$broadcast(\n                    'message:loading',\n                    promise,\n                    undefined,\n                    'Video Store'\n                );\n\n                // Update bookmarks\n                this.BookmarkService.getBookmarks();\n            }\n\n            onCarouselLimitChanged(limit) {\n                this.carouselLimit = Math.max(this.carouselLimit, limit);\n            }\n\n            onPageChanged(page) {\n                this.$state.go(this.$state.current, {category: this.category, page: page});\n            }\n\n            storeTitleCallback(pages) {\n                let page = pages.find(p => p.application === 'vodStore');\n                if (page) {\n                    this.storeTitle = page.title;\n                } else {\n                    this.storeTitle = null;\n                }\n            }\n        }\n    });\n}());\n"],"sourceRoot":"/source/"}