{"version":3,"sources":["ovpApp/services/store-service.js"],"names":[],"mappings":"AAAA;;AAAC,CAAA,YAAY;IACT;;;;;;;;IAOA,QAAQ,OAAO,yBAAyB,CACpC,iBACA,uBACA,yBACA,uBACA,4CAEH,QAAQ,gBAAgB;;;IAIzB,SAAS,aAAa,OAAO,MAAM,cAAc,QAAQ,YAAY,iBAAiB;QAClF,IAAI,KAAK;QACT,GAAG,eAAe;QAClB,GAAG,cAAc;;;;QAIjB,SAAS,eAAe;YACpB,OAAO,aAAa,oBAAoB,KAAK,UAAC,SAAY;gBACtD,IAAI,UAAU,OAAO,SAAS,QAAQ;gBACtC,OAAO,MAAM;oBACT,KAAK;oBACL,iBAAiB;mBAClB,KAAK,UAAC,cAAiB;oBACtB,IAAI,aAAa,aAAa,KAAK;oBACnC,OAAO,WAAW,IAAI,gBAAgB;mBACvC,YAAM;oBACL,MAAM,mBAAmB;;;;;QAKrC,SAAS,YAAY,KAAK,YAAY,OAAO;YACzC,IAAI,QAAQ,UAAU,eAAe,QAAQ,UAAU,QAAQ;gBAC3D,OAAO,IAAI,QAAQ,SAAS,CAAC,IAAI,MAAM;gBACvC,MAAS,MAAG,iBAAe,aAAU,YAAU;;YAEnD,OAAO,MAAM;gBACT,KAAK,OAAO,SAAS;gBACrB,iBAAiB;eAClB,KAAK,UAAC,QAAW;gBAChB,IAAI,OAAO,OAAO;gBAClB,KAAK,UAAU,KAAK,QAAQ,IAAI,UAAA,SAAW;oBACvC,OAAO,gBAAgB,eAAe;;gBAE1C,OAAO;eACR,UAAC,KAAQ;gBACR,MAAM,gCAAgC;;;;KAKjD","file":"ovpApp/services/store-service.js","sourcesContent":["(function () {\n    'use strict';\n\n    /**\n     * RecentlyWatched service\n     * Fetch recently watched assets from the bookmark service and then pull in the\n     * reset of the required data to display the assets.\n     */\n    angular.module('ovpApp.services.store', [\n        'ovpApp.config',\n        'ovpApp.services.nns',\n        'ovpApp.services.entry',\n        'ovpApp.dataDelegate',\n        'ovpApp.services.parentalControlsService'\n    ])\n    .service('StoreService', StoreService);\n\n\n    /* @ngInject */\n    function StoreService($http, $log, entryService, config, NNSService, delegateFactory) {\n        let vm = this;\n        vm.getFrontdoor = getFrontdoor;\n        vm.getCategory = getCategory;\n\n        ///////////\n\n        function getFrontdoor() {\n            return entryService.forDefaultProfile().then((service) => {\n                let tvodUrl = config.piHost + service.vodStore();\n                return $http({\n                    url: tvodUrl,\n                    withCredentials: true\n                }).then((storeResults) => {\n                    let categories = storeResults.data.results;\n                    return categories.map(delegateFactory.createInstance);\n                }, () => {\n                    throw 'Request Failed' + tvodUrl;\n                });\n            });\n        }\n\n        function getCategory(uri, startIndex, limit) {\n            if (angular.isDefined(startIndex) && angular.isDefined(limit)) {\n                uri += uri.indexOf('?') === -1 ? '?' : '&';\n                uri = `${uri}start-index=${startIndex}&limit=${limit}`;\n            }\n            return $http({\n                url: config.piHost + uri,\n                withCredentials: true\n            }).then((result) => {\n                let data = result.data;\n                data.results = data.results.map(partial => {\n                    return delegateFactory.createInstance(partial);\n                });\n                return data;\n            }, (err) => {\n                throw 'Failed subcategory request ' + err ;\n            });\n        }\n    }\n\n}());\n"],"sourceRoot":"/source/"}