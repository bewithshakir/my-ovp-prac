{"version":3,"sources":["ovpApp/components/ovp/ovp-person/ovp-person.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;AAEA,IAAI,eAAe,CAAC,YAAY,EAAE,SAAS,iBAAiB,QAAQ,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,aAAa,MAAM,IAAI,WAAW,aAAa,WAAW,cAAc,OAAO,WAAW,eAAe,MAAM,IAAI,WAAW,YAAY,WAAW,WAAW,MAAM,OAAO,eAAe,QAAQ,WAAW,KAAK,iBAAiB,OAAO,UAAU,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,iBAAiB,YAAY,WAAW,aAAa,IAAI,aAAa,iBAAiB,aAAa,cAAc,OAAO;;AAEjiB,SAAS,mBAAmB,KAAK,EAAE,IAAI,MAAM,QAAQ,MAAM,EAAE,KAAK,IAAI,IAAI,GAAG,OAAO,MAAM,IAAI,SAAS,IAAI,IAAI,QAAQ,KAAK,KAAK,KAAK,IAAI,IAAI,OAAO,aAAa,EAAE,OAAO,MAAM,KAAK;;AAEtL,SAAS,gBAAgB,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;AANhH,CAAC,YAAY;IACT;IACA,QAAQ,OAAO,4BAA4B,CACvC,kCACA,gCAEH,UAAU,aAAa;QACpB,UAAU;YACN,QAAQ;YACR,SAAS;YACT,UAAU;;QAEd,aAAa;QACb,YAAU,CAAA,YAAA;;;;YAEK,SAFG,UAEF,QAAQ,eAAe,kBAAkB,YAAY;gBAM7D,gBAAgB,MARN;;gBAGV,KAAK,SAAS;gBACd,KAAK,gBAAgB;gBACrB,KAAK,mBAAmB;gBACxB,KAAK,aAAa;;;YAUtB,aAhBc,WAAS,CAAA;gBAiBnB,KAAK;gBACL,OATG,SAAA,UAAG;oBACN,KAAK,cAAe,KAAK,WAAW,KAAK,QAAQ,eAAgB;;eAWlE;gBACC,KAAK;gBACL,OAVM,SAAA,WAAC,SAAS;oBAChB,IAAI,QAAQ,SAAS;wBACjB,KAAK,oBAAoB,QAAQ,QAAQ;;;eAa9C;gBACC,KAAK;gBACL,OAXC,SAAA,QAAG;oBAYA,IAAI,QAAQ;;oBAXhB,IAAI,QAAQ,KAAK,UAAU,KAAK,OAAO;oBACvC,IAAI,OAAO;wBACP,MAAM,KAAK,MAAM,MAAM;wBACvB,MAAM,KAAK,MAAM,MAAM;;wBAEvB,IAAI,KAAK,OAAO,SAAS,WAAW;4BAc5B,IAAI;;;4BAZR,KAAK,WAAW,MAAM,gCAAgC;gCAClD,OAAO,KAAK;;;4BAGhB,KAAK,iBAAiB,IAAI,KAAK,QAAQ,OAAO,KAAK,QAAQ;4BAC3D,CAAA,UAAA,KAAK,QAAO,GAAE,MAAA,SAAA,mBAAI;+BACf;4BACH,MAAM,GAAG,WAAW;;;4BAGpB,KAAK,cAAc,gBAAgB;;;4BAGnC,KAAK,OAAO,GAAG,gBACV,KAAK,YAAM;gCAeR,IAAI;;gCAdJ,CAAA,WAAA,MAAK,QAAO,GAAE,MAAA,UAAA,mBAAI;;;;;;;;eAwBnC;gBACC,KAAK;gBACL,OAlBe,SAAA,oBAAC,YAAY;oBAC5B,IAAM,WAAW;wBACb,YAAY;;;oBAGhB,KAAK,UAAU,QAAQ,OAAO,IAAI,UAAU;;;;YAsBhD,OA7Ec;;;KA2DrB","file":"ovpApp/components/ovp/ovp-person/ovp-person.js","sourcesContent":["/**\n * ovpPerson\n *\n * Displays the image and other simple information about a person (actor/director/etc).\n *\n * example usage:\n * <ovp-person person=\"vm.somePersonObject\"></ovp-person>\n *\n * OR, with options:\n *\n * <ovp-person person=\"vm.somePersonObject\" options=\"vm.someOptionsObject\"></ovp-person>\n *\n * OR, in a carousel:\n *\n * <ovp-carousel items=\"vm.people\">\n *    <ovp-person ng-repeat=\"person in vm.people\" person=\"person\"></ovp-person>\n * </ovp-carousel>\n *\n * Bindings:\n *    person: (object) a person data delegate object, or similar\n *    options: (object) options to modify behavior. See below.\n *\n * Options:\n *    imageWidth: (number) width of the image file to download. The actual size it appears to\n *       the user will depend on the css, so this value should be chosen to match the size\n *       defined in the css. Defaults to 147\n */\n\n(function () {\n    'use strict';\n    angular.module('ovpApp.directives.person', [\n        'ovpApp.directives.fadeinOnload',\n        'ovpApp.search.searchService'\n        ])\n    .component('ovpPerson', {\n        bindings: {\n            person: '<',\n            options: '<',\n            category: '<'\n        },\n        templateUrl: '/js/ovpApp/components/ovp/ovp-person/ovp-person.html',\n        controller: class OvpPerson {\n            /* @ngInject */\n            constructor($state, searchService, searchFocusIndex, $rootScope) {\n                this.$state = $state;\n                this.searchService = searchService;\n                this.searchFocusIndex = searchFocusIndex;\n                this.$rootScope = $rootScope;\n            }\n\n            $onInit() {\n                this.focusOnLoad = (this.options && this.options.focusOnLoad) || false;\n            }\n\n            $onChanges(changes) {\n                if (changes.options) {\n                    this.applyDefaultOptions(changes.options.currentValue);\n                }\n            }\n\n            click() {\n                let route = this.person && this.person.clickRoute;\n                if (route) {\n                    route[1] = route[1] || {};\n                    route[2] = route[2] || {};\n\n                    if (this.$state.includes('search')) {\n                        // Analytics: Indicate a person search result was clicked.\n                        this.$rootScope.$emit('Analytics:search-select-item', {\n                            asset: this.person\n                        });\n\n                        this.searchFocusIndex.set(this.options.index, this.options.parentIndex);\n                        this.$state.go(...route);\n                    } else {\n                        route[2].location = 'replace';\n\n                        // Flag it to not redirect on the next search page\n                        this.searchService.doNotRedirect = true;\n\n                        // go to search.blank first so that it pops quickly\n                        this.$state.go('search.blank')\n                            .then(() => {\n                                this.$state.go(...route);\n                            });\n                    }\n                }\n            }\n\n            //////////\n\n            applyDefaultOptions(newOptions) {\n                const defaults = {\n                    imageWidth: 147\n                };\n\n                this.options = angular.extend({}, defaults, newOptions);\n            }\n        }\n    });\n})();\n"],"sourceRoot":"/source/"}