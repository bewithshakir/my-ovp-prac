{"version":3,"sources":["ovpApp/analytics/analytics-state.js"],"names":[],"mappings":"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","file":"ovpApp/analytics/analytics-state.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular.module('ovpApp.analytics.state', [])\n    .factory('AnalyticsState', AnalyticsState);\n\n    /* @ngInject */\n    function AnalyticsState(/*$log*/) {\n\n        const State = class {\n            constructor() {\n                this.playerState = '';\n                this.previousEventName = null;\n                this.contentElapsedMs = 0;\n                this.playbackBufferingStart = 0;\n                this.previousBitrate = 0;\n                this.previousContentElapsedMs = 0;\n                this.adBreakNumber = 0;\n                this.adBreakDurationMs = 0;\n                this.adPlaying = false;\n                this.adData = {};\n                this.adTimer = null;\n                this.adElapsedMs = 0;\n                this.bufferingEventsOmitted = false;\n                this.bufferingEventsOmittedBy = null;\n                this.playbackBufferingTimer = null;\n                this.playbackBufferingElapsedMs = 0;\n                this.searchTimer = null;\n                this.searchResultMs = 0;\n                this.searchData = {};\n                this.serviceCallStart = 0;\n                this.currentBitrate = 0;\n                this.currentLocation = null;\n                this.previousLocation = null;\n                this.purchaseId = null;\n                this.purchaseDetails = null;\n                this.deferredQueue = [];\n                this.isLoggedIn = false;\n\n                // Array for tracking which controllers are active or not, to\n                // assist with generating correct pageView events.\n                this.activeControllerStates = [];\n\n                // The last incoming select event that came in.\n                this.lastSelectEvent = null;\n\n                // The last incoming streamUriObtained event that came in.\n                this.lastStreamUriEvent = null;\n\n                // The last incoming playbackStarted event that came in.\n                this.lastPlaybackStartedEvent = null;\n\n                // The last type of playback associated to the 'lastSelectEvent' attribute.\n                this.lastPlaybackType = null;\n\n                // Aggregate info about the most recently selected content being played.\n                this.selectedContent = null;\n\n                // Last known actual run time of currently playing asset.\n                this.actualRuntimeMs = 0;\n\n                // Track the reason why a PIN is being entered.\n                this.pinEntryContext = null;\n\n                // Track when the application is being loaded in the background.\n                // We should ignore navigation events when this is true, since\n                // they don't really translate to user navigation.\n                this.navigationPaused = false;\n\n\n                /* Begin: Attributes used for search */\n\n                // Records the time the search request was issued in order to calculate\n                // the duration of the search call.\n                this.searchStartedTimestamp = null;\n\n                // Holds the last searchStarted event, in case we need to replay it.\n                this.lastSearchStartedEvent = null;\n\n                // Holds the last searched event, in case we need to replay it.\n                this.lastSearchedEvent = null;\n\n                /* End: Attributes used for search */\n\n                /* Begin: Attributes used for navigation */\n\n                this.currentPageName = null;\n\n                this.currentAppSection = null;\n\n                /* End: Attributes used for navigation */\n\n                /* Begin: Attributes used for TVOD */\n                this.latestPurchase = null;\n\n                this.tvodFlowState = null;\n\n                /* End: Attributes used for TVOD */\n\n                // Login-related fields\n                this.currentAuthType = null;\n                this.authAttemptId = null;\n\n                /* Stream2: Which step was user previously on? */\n                this.stream2BuyFlowPreviousStep = null;\n\n                /* The media player. */\n                this.player = null;\n\n                /* True if flash is unavailab.e. */\n                this.flashUnavailable = false;\n\n                /* The stream requested for playback. */\n                this.expectedStream = null;\n\n                this.currentGuideFilter = null;\n\n                this.currentMiniGuideFilter = null;\n\n                this.deviceId = null;\n            }\n\n            getSearchStartedTimestamp() {\n                return this.searchStartedTimestamp;\n            }\n\n            setSearchStartedTimestamp(searchStartedTimestamp) {\n                this.searchStartedTimestamp = searchStartedTimestamp;\n            }\n\n            getLastSearchStartedEvent() {\n                return this.lastSearchStartedEvent;\n            }\n\n            setLastSearchStartedEvent(lastSearchStartedEvent) {\n                this.lastSearchStartedEvent = angular.copy(lastSearchStartedEvent);\n            }\n\n            getLastSearchedEvent() {\n                return this.lastSearchedEvent;\n            }\n\n            setLastSearchedEvent(lastSearchedEvent) {\n                this.lastSearchedEvent = angular.copy(lastSearchedEvent);\n            }\n\n            isNavigationPaused() {\n                return this.navigationPaused;\n            }\n\n            pauseNavigation() {\n                this.navigationPaused = true;\n            }\n\n            unpauseNavigation() {\n                this.navigationPaused = false;\n            }\n\n            getActualRuntimeMs() {\n                return this.actualRuntimeMs;\n            }\n\n            setActualRuntimeMs(actualRuntimeMs) {\n                this.actualRuntimeMs = actualRuntimeMs;\n            }\n\n            getLastSelectEvent() {\n                return this.lastSelectEvent;\n            }\n\n            getLastPlaybackType() {\n                return this.lastPlaybackType;\n            }\n\n            resetContent() {\n                this.lastSelectEvent = null;\n                this.setLastStreamUriEvent(null);\n                this.setLastPlaybackStartedEvent(null);\n                this.actualRuntimeMs = 0;\n                this.setSelectedContent(null);\n            }\n\n            setLastSelectEvent(selectEvent) {\n                this.lastSelectEvent = selectEvent;\n            }\n\n            setLastPlaybackType(playbackType) {\n                this.lastPlaybackType = playbackType;\n            }\n\n            setSelectedContent(selectedContent) {\n                this.selectedContent = selectedContent;\n            }\n\n            getSelectedContent() {\n                return this.selectedContent;\n            }\n\n            getLastStreamUriEvent() {\n                return this.lastStreamUriEvent;\n            }\n\n            setLastStreamUriEvent(streamUriEvent) {\n                this.lastStreamUriEvent = streamUriEvent;\n            }\n\n            getLastPlaybackStartedEvent() {\n                return this.lastPlaybackStartedEvent;\n            }\n\n            setLastPlaybackStartedEvent(playbackStartedEvent) {\n                this.lastPlaybackStartedEvent = playbackStartedEvent;\n            }\n\n            getElapsedMs() {\n                return this.contentElapsedMs;\n            }\n\n            setElapsedMs(position) {\n                // Try-catch needed here to prevent propagation to non-analytics\n                // code.\n                try {\n                    this.previousContentElapsedMs = this.contentElapsedMs;\n                    this.contentElapsedMs = Math.round(position);\n                } catch (ex) {\n                }\n            }\n\n            setBitrate(currentBitrate) {\n                this.previousBitrate = this.currentBitrate || 0;\n                this.currentBitrate = Number(currentBitrate);\n            }\n\n            getBitrate() {\n                return this.currentBitrate;\n            }\n\n            startAdBreak() {\n                this.adBreakStarted = Date.now();\n            }\n\n            startAd(data) {\n                this.adPlaying = true;\n                this.adTimer = Date.now();\n                this.adData = data;\n            }\n\n            stopAd() {\n                try {\n                    this.adPlaying = false;\n                    this.adElapsedMs = Date.now() - this.adTimer;\n                } catch (ex) {\n                }\n            }\n\n            startBufferingTimer() {\n                this.playbackBufferingTimer = Date.now();\n            }\n\n            stopBufferingTimer() {\n                this.playbackBufferingElapsedMs = Date.now() - this.playbackBufferingTimer;\n            }\n\n            startSearchTimer() {\n                this.searchTimer = Date.now();\n            }\n\n            stopSearchTimer(data) {\n                try {\n                    this.searchData = data;\n                    this.searchResultMs = Date.now() - this.searchTimer;\n                    this.indexResults(data.searchResult);\n                } catch (ex) {\n                }\n            }\n\n            indexResults(data) {\n                try {\n                    let title;\n                    let resultIndex = 0;\n                    this.searchData.searchResults = {};\n                    data.forEach(category => {\n                        title = category.title.toLowerCase();\n                        this.searchData.searchResults[title] = [];\n                        resultIndex = 0;\n                        category.results.forEach(item => {\n                            item.index = resultIndex;\n                            this.searchData.searchResults[title].push(item);\n                            resultIndex++;\n                        });\n                    });\n                } catch (ex) {\n                }\n            }\n\n            getSearchIndex(data) {\n                try {\n                    let facet, result;\n\n                    if (data && typeof data.facet === 'string') {\n                        facet = data.facet.toLowerCase();\n                    }\n\n                    if (['other', 'series', 'product', 'movie'].indexOf(facet) > -1) {\n                        result = this.searchData.searchResults.title.filter(item =>\n                            item.tmsProgramId === data.tmsProgramId\n                        );\n                    } else if (facet === 'person') {\n                        result = this.searchData.searchResults.person.filter(item => {\n                            return item.searchStringMatch === data.searchStringMatch;\n                        });\n                    } else if (facet === 'sports') {\n                        result = this.searchData.searchResults.sports.filter(item =>\n                            item.tmsProgramId === data.tmsProgramId\n                        );\n                    } else if (facet === 'team') {\n                        result = this.searchData.searchResults.team.filter(item =>\n                            item.title === data.searchStringMatch\n                        );\n                    }\n\n                    return result.length > 0 ? result[0].index : result;\n                } catch (ex) {\n                    return null;\n                }\n            }\n\n            omitBufferingEvents(bool, name) {\n                this.bufferingEventsOmitted = bool;\n                if (bool) {\n                    this.bufferingEventsOmittedBy = name;\n                }\n            }\n\n            setServiceCallStartTime() {\n                this.serviceCallStart = Date.now();\n            }\n\n            getContentElapsedMs() {\n                return this.contentElapsedMs;\n            }\n\n            setPlayerState(newState) {\n                this.playerState = newState;\n            }\n\n            setLocation(location) {\n                this.previousLocation = this.currentLocation;\n                this.currentLocation = location;\n            }\n\n            setPurchaseId(newId) {\n                this.purchaseId = newId;\n            }\n\n            setPurchaseDetails(data) {\n                this.purchaseDetails = data;\n            }\n\n            stopPlayback() {\n                this.playbackStartDeferred = false;\n            }\n\n            setPreviousEventName(name) {\n                this.previousEventName = name;\n            }\n\n            setDeferredEvent(name, data) {\n                this.deferredQueue.push({\n                    name: name,\n                    data: data,\n                    timestamp: Date.now()\n                });\n\n            }\n\n            hasDeferredEvent(name) {\n                try {\n                    var events = this.deferredQueue.filter((v) => {\n                        return v.name === name;\n                    });\n\n                    return events.length > 0 ? true : false;\n                } catch (ex) {\n                    return false;\n                }\n            }\n\n            getDeferredEvent(name) {\n                try {\n                    if (this.deferredQueue.length === 0) {\n                        return undefined;\n                    }\n\n                    var eventIndex = this.deferredQueue.findIndex((val) => val.name === name);\n\n                    if (eventIndex < 0) {\n                        return undefined;\n                    }\n\n                    var deferredEvent = this.deferredQueue[eventIndex];\n\n                    this.deferredQueue = this.deferredQueue.slice(eventIndex + 1, 1);\n\n                    return deferredEvent;\n                } catch (ex) {\n                    return null;\n                }\n            }\n\n            setIsLoggedIn(isLoggedIn) {\n                this.isLoggedIn = isLoggedIn;\n            }\n\n            getIsLoggedIn() {\n                return this.isLoggedIn;\n            }\n\n            setPINEntryContext(pinEntryContext) {\n                this.pinEntryContext = pinEntryContext;\n            }\n\n            getPINEntryContext() {\n                return this.pinEntryContext;\n            }\n\n            getCurrentPageName() {\n                return this.currentPageName;\n            }\n\n            setCurrentPageName(pageName) {\n                this.currentPageName = pageName;\n            }\n\n            getCurrentAppSection() {\n                return this.currentAppSection;\n            }\n\n            setCurrentAppSection(appSection) {\n                this.currentAppSection = appSection;\n            }\n\n            getLatestPurchase() {\n                return this.latestPurchase;\n            }\n\n            setLatestPurchase(purchase) {\n                this.latestPurchase = purchase;\n            }\n\n            getTvodFlowState() {\n                return this.tvodFlowState;\n            }\n\n            setTvodFlowState(tvodFlowState) {\n                this.tvodFlowState = tvodFlowState;\n            }\n\n            getAuthAttemptId() {\n                return this.authAttemptId;\n            }\n\n            setAuthAttemptId(authAttemptId) {\n                this.authAttemptId = authAttemptId;\n            }\n\n            getCurrentAuthType() {\n                return this.currentAuthType;\n            }\n\n            setCurrentAuthType(currentAuthType) {\n                this.currentAuthType = currentAuthType;\n            }\n\n            getStream2BuyFlowPreviousStep() {\n                if (!this.stream2BuyFlowPreviousStep) {\n                    this.stream2BuyFlowPreviousStep = 0;\n                }\n                return this.stream2BuyFlowPreviousStep;\n            }\n\n            setStream2BuyFlowPreviousStep(stream2BuyFlowPreviousStep) {\n                this.stream2BuyFlowPreviousStep = stream2BuyFlowPreviousStep;\n            }\n\n            getPlayer() {\n                return this.player;\n            }\n\n            setPlayer(player) {\n                this.player = player;\n            }\n\n            getFlashUnavailable() {\n                return this.flashUnavailable;\n            }\n\n            setFlashUnavailable(flashUnavailable) {\n                this.flashUnavailable = flashUnavailable;\n            }\n\n            getExpectedStream() {\n                return this.expectedStream;\n            }\n\n            setExpectedStream(expectedStream) {\n                this.expectedStream = expectedStream;\n            }\n\n            getCurrentGuideFilter() {\n                return this.currentGuideFilter;\n            }\n\n            setCurrentGuideFilter(currentGuideFilter) {\n                this.currentGuideFilter = currentGuideFilter;\n            }\n\n            getCurrentMiniGuideFilter() {\n                return this.currentMiniGuideFilter;\n            }\n\n            setCurrentMiniGuideFilter(currentMiniGuideFilter) {\n                this.currentMiniGuideFilter = currentMiniGuideFilter;\n            }\n\n            getDeviceId() {\n                return this.deviceId;\n            }\n\n            setDeviceId(deviceId) {\n                this.deviceId = deviceId;\n            }\n        };\n\n        return State;\n    }\n}());\n"],"sourceRoot":"/source/"}