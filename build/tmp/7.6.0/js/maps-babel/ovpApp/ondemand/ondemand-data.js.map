{"version":3,"sources":["ovpApp/ondemand/ondemand-data.js"],"names":[],"mappings":"AAAA;;AAAA,CAAC,YAAY;IACT;;;IAEA,QACK,OAAO,wBAAwB,CAC5B,uBACA,2BACA,0BAEH,QAAQ,gBAAgB;;;IAG7B,SAAS,aAAa,cAAc,QAAQ,QAAQ,iBAAiB,IAAI;QACrE,IAAI,aAAU;;QAEd,IAAI,UAAU;YACV,4BAAA;YACA,iBAAA;YACA,cAAA;YACA,UAAA;YACA,YAAA;;QAEJ,OAAO;;;;QAIP,SAAS,2BAA2B,MAAM;YACtC,OAAO,KAAK,cAAc,QAAQ,MAAM;;;QAG5C,SAAS,kBAAkB;YACvB,OAAO,eACF,KAAK,UAAA,YAAU;gBAJhB,OAIoB,2BAA2B,WAAW,GAAG;;;;QAGrE,SAAS,eAAe;YACpB,IAAI,YAAY;gBACZ,OAAO,GAAG,QAAQ;mBACf;gBACH,OAAO,aAAa,oBACf,KAAK,UAAA,UAAQ;oBAHd,OAII,OAAO,IAAI,OAAO,SAAS,SAAS,aAChC,EAAC,iBAAiB,QACjB,MAAM,GACN,IAAI,UAAA,UAAQ;wBANjB,OAMqB,SAAS,KAAK,QAAQ,IAAI,gBAAgB;uBAAgB,MACvE,UAAA,KAAG;wBALX,OAKe,aAAa;uBACvB,UAAU;;;;;QAK/B,SAAS,aAAa;YAClB,aAAa;;;QAGjB,SAAS,SAAS,KAAK,MAAM;YACzB,IAAI,QAAQ,UAAU,SAAS,QAAQ,GAAG;gBACtC,IAAM,aAAa,CAAC,OAAO,KAAK,OAAO;gBACvC,MAAS,MAAG,kBAAgB,aAAU,YAAU,OAAO;;;YAG3D,OAAO,OAAO,IAAI,OAAO,SAAS,KAAK,EAAC,iBAAiB,QACpD,MAAM,GACN,IAAI,UAAA,UAAQ;gBANb,OAMiB,gBAAgB,eAAe,SAAS;eACxD,UAAU;;;KAGtB","file":"ovpApp/ondemand/ondemand-data.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular\n        .module('ovpApp.ondemand.data', [\n            'ovpApp.dataDelegate',\n            'ovpApp.services.rxUtils',\n            'ovpApp.services.entry'\n        ])\n        .factory('onDemandData', onDemandData);\n\n    /* @ngInject */\n    function onDemandData(entryService, rxhttp, config, delegateFactory, $q) {\n        let categories;\n\n        var service = {\n            formatCategoryNameForRoute,\n            defaultCategory,\n            getFrontDoor,\n            getByUri,\n            clearCache\n        };\n        return service;\n\n        ////////////////\n\n        function formatCategoryNameForRoute(name) {\n            return name.toLowerCase().replace(/ /g, '_');\n        }\n\n        function defaultCategory() {\n            return getFrontDoor()\n                .then(categories => formatCategoryNameForRoute(categories[0].name));\n        }\n\n        function getFrontDoor() {\n            if (categories) {\n                return $q.resolve(categories);\n            } else {\n                return entryService.forDefaultProfile()\n                    .then(services =>\n                        rxhttp.get(config.piHost + services.vodPortal(),\n                            {withCredentials: true})\n                            .retry(3)\n                            .map(response => response.data.results.map(delegateFactory.createInstance))\n                            .do(cat => categories = cat)\n                            .toPromise($q)\n                    );\n            }\n        }\n\n        function clearCache() {\n            categories = undefined;\n        }\n\n        function getByUri(uri, page) {\n            if (angular.isDefined(page) && page >= 1) {\n                const startIndex = (page - 1) * config.vodAssetsPerPage;\n                uri = `${uri}&start-index=${startIndex}&limit=${config.vodAssetsPerPage}`;\n            }\n\n            return rxhttp.get(config.piHost + uri, {withCredentials: true})\n                .retry(3)\n                .map(response => delegateFactory.createInstance(response.data))\n                .toPromise($q);\n        }\n    }\n})();\n"],"sourceRoot":"/source/"}