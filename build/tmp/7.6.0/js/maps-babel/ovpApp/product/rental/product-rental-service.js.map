{"version":3,"sources":["ovpApp/product/rental/product-rental-service.js"],"names":[],"mappings":"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","file":"ovpApp/product/rental/product-rental-service.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular.module('ovpApp.product.rental-service', [\n        'ovpApp.services.entry',\n        'ovpApp.config',\n        'ovpApp.services.purchasePinService',\n        'ovpApp.services.parentalControlsService',\n        'ovpApp.services.drmSessionService',\n        'ovpApp.services.dateFormat',\n        'ovpApp.services.splunk',\n        'ovpApp.components.pinEntry',\n        'ovpApp.purchasePinDialog',\n        'ovpApp.parentalControlsDialog'\n    ])\n    .factory('ProductRentalService', productService);\n\n    /* @ngInject */\n    function productService($http, $q, entryService, config, $log, $state, dateFormat, SplunkService,\n        purchasePinService, parentalControlsService, drmSessionService, PIN_ENTRY_TYPE,\n        purchasePinPopUpConfig, parentalControlsDialog, parentalControlsContext, $rootScope,\n        errorCodesService) {\n\n        let service = {\n            getRentalOptions,\n            confirmRental,\n            validatePins,\n            validatePurchasePin,\n            normalizeRentalError,\n            rent\n        };\n\n        return service;\n\n        //////////////\n\n        function getTitle(asset, stream) {\n            let tmsProviderProgramID = stream.streamProperties.tmsProviderProgramID;\n            return asset.programMetadata && asset.programMetadata[tmsProviderProgramID] ?\n                asset.programMetadata[tmsProviderProgramID].title : asset.title;\n        }\n\n        function getRentalOptions(asset) {\n            //Map first to make sure the index is correct\n            return asset.streamList\n                .map((stream, idx) => {\n                    let expandedPrice = stream.streamProperties.price ?\n                        stream.streamProperties.price.toString().split('.') : [0, 0];\n                    let type = 'hd';\n                    stream.streamProperties.attributes.forEach(attribute => {\n                        if (attribute === 'HIGH_DEF') {\n                            type = 'hd';\n                        } else if (attribute === 'STANDARD_DEF') {\n                            type = 'sd';\n                        } else if (attribute === 'THREE_D') {\n                            type = '3d';\n                        }\n                    });\n                    return {\n                        title: getTitle(asset, stream),\n                        type: type,\n                        streamType: stream.type,\n                        rating: stream.streamProperties.rating,\n                        year: asset.year,\n                        length: dateFormat.runtime(stream.streamProperties.runtimeInSeconds),\n                        price: stream.streamProperties.price,\n                        streamIndex: idx,\n                        edition: stream.streamProperties.edition,\n                        tmsProviderProgramID: stream.streamProperties.tmsProviderProgramID,\n                        rentalDurationHours: stream.streamProperties.rentalWindowInHours,\n                        tvodEntitlement: stream.streamProperties.tvodEntitlement,\n                        readerPrice: expandedPrice[0] + ' dollars and ' + expandedPrice[1] + ' cents'\n                    };\n                })\n                .filter((streamOption) => streamOption.streamType === 'ONLINE_ONDEMAND' &&\n                    streamOption.price > 0 && !streamOption.tvodEntitlement);\n        }\n\n        function confirmRental(asset, streamOption) {\n            var defer = $q.defer();\n            if (streamOption.streamIndex !== undefined) {\n                let stream = asset.streamList[streamOption.streamIndex];\n                if (stream && stream.streamProperties && stream.streamProperties.ipvsRentUrl) {\n                    rent(asset, stream).then(function (result) {\n                        $state.go('ovp.ondemand.playProduct', {\n                            productID: stream.streamProperties.providerAssetID,\n                            streamIndex: streamOption.streamIndex\n                        }).then(function () {\n                            defer.resolve(result);\n                        });\n                    }, function (err) {\n                        defer.reject(err);\n                    });\n                } else {\n                    defer.reject({\n                        code: 'WTX-9000',\n                        message: errorCodesService.getMessageForCode('WTX-9000'),\n                        data: {\n                            context: {\n                                detailedResponseDescription: 'Invalid options selected'\n                            }\n                        }\n                    });\n                }\n            } else {\n                defer.reject({\n                    code: 'WTX-9000',\n                    message: errorCodesService.getMessageForCode('WTX-9000'),\n                    data: {\n                        context: {\n                            detailedResponseDescription: 'Invalid rental option'\n                        }\n                    }\n                });\n            }\n            return defer.promise;\n        }\n\n        function validatePins(scope, asset, stream) {\n            return validateParentalControls(scope, asset, stream)\n                .then(() => validatePurchasePin(scope, asset, stream));\n        }\n\n        function validateParentalControls(scope, asset, stream) {\n            return $q.all([asset.isBlocked, parentalControlsService.isBlockedByRating(stream.streamProperties.rating)])\n                .then(result => {\n                let [isAssetBlocked, isStreamBlocked] = result;\n                if (isAssetBlocked || isStreamBlocked) {\n                    return parentalControlsService.isParentalControlsDisabledForClient().then((isPCDisabled) => {\n                        if (!isPCDisabled) {\n                            return parentalControlsDialog\n                                .withContext(parentalControlsContext.PLAYBACK)\n                                .unlock();\n                        }\n                    });\n                }\n            });\n        }\n\n        function validatePurchasePin(scope, asset, stream) {\n            return $q.all([\n                purchasePinService.isPINSet(),\n                purchasePinService.isPurchasePINDisabledForClient()\n            ]).then(([isPinSet, isPinDisabled]) => {\n                if (!isPinSet || isPinDisabled) {\n                    return {skipConfirm: false};\n                } else {\n                    const availableOutOfHome = stream ?\n                        stream.availableOutOfHome : asset.tvodAvailableOutOfHome;\n                    const options = angular.extend(\n                        {},\n                        purchasePinPopUpConfig[PIN_ENTRY_TYPE.VALIDATE],\n                        {showOOHWarningMessage: !availableOutOfHome}\n                    );\n\n                    return scope.showPinValidationDialog(options)\n                        .then(() => {\n                            return {skipConfirm: true};\n                        });\n                }\n            });\n        }\n\n        /**\n         * Normalize the given error.\n         *\n         * @param receivedError The error to normalize\n         * @return Error object containing a code and message.\n         */\n        function normalizeRentalError(receivedError) {\n\n            // Assume default error code and message, unless we can\n            // narrow it down via the detailed response.\n            let error = {\n                code: 'WTX-9000'\n            };\n            error.message = errorCodesService.getMessageForCode(error.code);\n            error.data = receivedError.data;\n\n            // Refine error code if detailed response guides us to a more\n            // exact error.\n            if (receivedError.data && receivedError.data.context && receivedError.data.context.detailedResponseCode) {\n                let [code] = receivedError.data.context.detailedResponseCode.split('.');\n                switch (code) {\n                    case '404':\n                        error.code = 'WRN-1404';\n                        error.message = errorCodesService.getMessageForCode(error.code);\n                        break;\n                    case '451':\n                    case '452':\n                        error.code = 'WRN-1451';\n                        error.message = errorCodesService.getMessageForCode(error.code, {\n                            IVR_NUMBER: config.ivrNumber\n                        });\n                        break;\n                }\n            }\n\n            return error;\n        }\n\n        /**\n         * Send the rental request - this is the final step in the rental process\n         * that actually gets the stream data that needs to be passed to the player.\n         *\n         * @param  {Event#DataDelegate} asset\n         * @param  {Stream Object} stream       A stream object that was passed to the view\n         * @return {Promise}                    A promise that will resolve when the rental process is complete\n         */\n        function rent(asset, stream) {\n            var requestData,\n                drmSessionPromise = drmSessionService.getDRMSession(),\n                purchasePINPromise = purchasePinService.getLocalPin();\n\n            return $q.all([drmSessionPromise, purchasePINPromise]).then(function (promiseData) {\n                let [drm, purchasePIN] = promiseData;\n\n                return parentalControlsService.getLocalPin().then(parentalControlPIN => {\n                    requestData = {\n                        'drm-supported': drm !== undefined,\n                        'encoding': 'hls'\n                    };\n\n                    if (parentalControlPIN) {\n                        requestData.parentalControlPIN = parentalControlPIN;\n                    }\n\n                    if (drm !== undefined) {\n                        requestData.sessionId = drm.sessionId;\n                    }\n\n                    if (purchasePIN) {\n                        requestData.purchasePIN = purchasePIN;\n                    }\n\n                    return $http({\n                        url: config.piHost +  stream.streamProperties.ipvsRentUrl,\n                        method: 'POST',\n                        params: requestData,\n                        data: {\n                            price: stream.streamProperties.price\n                        },\n                        withCredentials: true\n                    }).then(function (result) {\n\n                        // Analytics\n                        $rootScope.$emit('Analytics:tvod-purchase-stop', { // success\n                            context: 'tvodFlow',\n                            success: true,\n                            purchaseId: result.headers('x-trace-id'),\n                            asset: asset,\n                            triggeredBy: 'application'\n                        });\n\n                        return {\n                            drmData: drm,\n                            streamInfo: result.data\n                        };\n                    }, function (error) {\n\n                        let normalizedError = normalizeRentalError(error);\n\n                        // Analytics\n                        $rootScope.$emit('Analytics:tvod-purchase-stop', { // failed\n                            error: angular.copy(error),\n                            errorCode: normalizedError.code,\n                            errorMessage: normalizedError.message,\n                            asset: asset\n                        });\n\n                        return $q.reject(normalizedError);\n                    });\n                });\n            });\n        }\n    }\n})();\n"],"sourceRoot":"/source/"}