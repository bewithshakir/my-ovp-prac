{"version":3,"sources":["ovpApp/components/player/set-top-connection.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,CAAC,YAAY,EAAE,SAAS,iBAAiB,QAAQ,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,aAAa,MAAM,IAAI,WAAW,aAAa,WAAW,cAAc,OAAO,WAAW,eAAe,MAAM,IAAI,WAAW,YAAY,WAAW,WAAW,MAAM,OAAO,eAAe,QAAQ,WAAW,KAAK,iBAAiB,OAAO,UAAU,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,iBAAiB,YAAY,WAAW,aAAa,IAAI,aAAa,iBAAiB,aAAa,cAAc,OAAO;;AAEjiB,SAAS,gBAAgB,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;AAJhH,CAAC,YAAM;IACH;;IAEA,QAAQ,OAAO,wCAAwC,CACnD,wBACD,UAAU,oBAAoB;QAC7B,aAAa;QACb,YAAU,CAAA,YAAA;;;;YAEK,SAFG,2BAEF,mBAAmB,QAAQ,cAAc,UAAU;gBAM3D,gBAAgB,MARN;;gBAGV,QAAQ,OAAO,MAAM;oBACjB,mBAAA;oBACA,QAAA;oBACA,cAAA;oBACA,UAAA;;;;YAWR,aAlBc,4BAA0B,CAAA;gBAmBpC,KAAK;gBACL,OAVG,SAAA,UAAG;oBAWF,IAAI,QAAQ;;oBAVhB,KAAK,yBAAyB,KAAK,kBAAkB,YAChD,UAAU,UAAA,SAAW;wBAClB,MAAK,UAAU;wBACf,MAAK,QAAQ,QAAQ;wBACrB,MAAK,MAAM,QAAQ;;;wBAGnB,MAAK,WAAW,QAAQ,QAAQ,QAAQ,IAAI,QAAQ,QAAQ,IAAI;wBAChE,MAAK,eAAe,QAAQ,SAAS,QAAQ,MAAM;;oBAE3D,KAAK,aAAa,UAAU,IAAI,YAAM;wBAClC,IAAI,MAAK,WAAW;;4BAEhB,MAAK,SAAS,YAAM;gCAChB,MAAK,kBAAe,cAAe,MAAK,eAAY,SAAO,MAAK;+BACjE;+BACA;4BACH,MAAK,kBAAkB;;;;eAehC;gBACC,KAAK;gBACL,OAbM,SAAA,aAAG;oBACT,IAAI,KAAK,wBAAwB;wBAC7B,KAAK,uBAAuB;;;eAgBjC;gBACC,KAAK;gBACL,OAfG,SAAA,UAAG;oBACN,OAAO,CAAC,KAAK,OAAO,SAAS,qBAAqB,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,KAAK;;eAiB1E;gBACC,KAAK;gBACL,OAjBK,SAAA,YAAG;oBACR,KAAK,OAAO,GAAG,kBAAkB,KAAK;;;;YAqB1C,OA9Dc;;;KA6CrB","file":"ovpApp/components/player/set-top-connection.js","sourcesContent":["(() => {\n    'use strict';\n\n    angular.module('ovpApp.remotePlayer.setTopConnection', [\n        'ovpApp.remotePlayer'\n    ]).component('setTopConnection', {\n        templateUrl: '/js/ovpApp/components/player/set-top-connection.html',\n        controller: class SetTopConnectionController {\n            /* @ngInject */\n            constructor(remotePlayService, $state, $transitions, $timeout) {\n                angular.extend(this, {\n                    remotePlayService,\n                    $state,\n                    $transitions,\n                    $timeout\n                });\n            }\n            $onInit() {\n                this.remotePlaySubscription = this.remotePlayService.getSource()\n                    .subscribe(options => {\n                        this.options = options;\n                        this.asset = options.asset;\n                        this.stb = options.stb;\n\n                        // Update program-title and stb-title\n                        this.stbTitle = options.stb && (options.stb.name || options.stb.macAddress);\n                        this.programTitle = options.asset && options.asset.title;\n                    });\n                this.$transitions.onSuccess({}, () => {\n                    if (this.canShow()) {\n                        // for screen reader\n                        this.$timeout(() => {\n                            this.ariaLiveMessage = `Watching ${this.programTitle} on ${this.stbTitle}`;\n                        }, 100);\n                    } else {\n                        this.ariaLiveMessage = '';\n                    }\n                });\n            }\n            $onDestroy() {\n                if (this.remotePlaySubscription) {\n                    this.remotePlaySubscription.dispose();\n                }\n            }\n            canShow() {\n                return !this.$state.includes('ovp.playRemote') && !!this.asset && !!this.stb;\n            }\n            reconnect() {\n                this.$state.go('ovp.playRemote', this.options);\n            }\n        }\n    });\n})();\n"],"sourceRoot":"/source/"}