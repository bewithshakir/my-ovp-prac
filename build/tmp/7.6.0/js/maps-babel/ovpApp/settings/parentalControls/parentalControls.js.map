{"version":3,"sources":["ovpApp/settings/parentalControls/parentalControls.js"],"names":[],"mappings":"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","file":"ovpApp/settings/parentalControls/parentalControls.js","sourcesContent":["(function () {\n    'use strict';\n    angular.module('ovpApp.settings.parentalControls', [\n        'ovpApp.config',\n        'ovpApp.components.ovp.ovpSwitch',\n        'ovpApp.services.parentalControlsService',\n        'ovpApp.services.errorCodes',\n        'ovpApp.components.alert',\n        'ovpApp.messages',\n        'ovpApp.components.ovpParentalControlsSlider',\n        'ovpApp.components.authForm',\n        'ovpApp.parentalControlsDialog',\n        'ovpApp.settings.parentalControls.data',\n        'ovpApp.settings.parentalControls.channelBlock'\n    ])\n    .controller('ParentalControlsSettingsController', ParentalControlsSettingsController);\n\n    /* @ngInject */\n    function ParentalControlsSettingsController($scope, config, parentalControlsService,\n              messages, $rootScope, alert, $q, $log, TV_RATINGS, $state, parentalControlsDialog,\n              MOVIE_RATINGS, $controller, PC_UNBLOCK_REASON, parentalControlsData, $window, $timeout,\n              parentalControlsContext, errorCodesService) {\n        const vm = this;\n\n        vm.togglePCEnabled = togglePCEnabled;\n        vm.unlock = unlock;\n        vm.isChannelBlocked = isChannelBlocked;\n        vm.getCardImage = getCardImage;\n        vm.getCardName = getCardName;\n        vm.getCardNumber = getCardNumber;\n        vm.getCardCallsign = getCardCallsign;\n        vm.clearAllChannelBlocks = clearAllChannelBlocks;\n        vm.onFilterChanged = onFilterChanged;\n        vm.blockCard = blockCard;\n        vm.unblockCard = unblockCard;\n        vm.toggleCardBlock = toggleCardBlock;\n\n        vm.channelBlockingEnabled = true;\n        vm.parentalControlsEnabledForClient = false;\n        vm.canEdit = false;\n        vm.tvRatings = TV_RATINGS;\n        vm.movieRatings = MOVIE_RATINGS;\n        vm.channelCards = [];\n        vm.ratings = {\n            movieRating: '',\n            tvRating: ''\n        };\n        vm.hasPin = false;\n        vm.unlocked = false;\n        vm.parentalSearchValue = '';\n        vm.$state = $state;\n        let channels = [];\n        let watchingRatings = false;\n        let pcDialog = parentalControlsDialog.withContext(parentalControlsContext.WEB_SETTINGS);\n\n        activate();\n\n        /////////////////////\n\n        function activate() {\n            $scope.$watch(() => vm.hasPin, updateCanEdit);\n            $scope.$watch(() => vm.unlocked, updateCanEdit);\n            $scope.$watch(() => vm.parentalControlsEnabledForClient, updateCanEdit);\n            parentalControlsService.getParentalControlsForUser().then(function () {\n                parentalControlsService.isPINSet().then(hasSavedPin => {\n                    vm.hasPin = hasSavedPin;\n                    if (!vm.hasPin) {\n                        vm.parentalControlsEnabledForClient = false;\n                    } else {\n                        parentalControlsService.isParentalControlsDisabledForClient().then(result => {\n                            vm.parentalControlsEnabledForClient = !result;\n                        });\n                    }\n                });\n                initChannels();\n                initRatings();\n            }, function (error) {\n                $log.error(error);\n                alert.open({\n                    message: errorCodesService.getMessageForCode('WGE-1001')\n                });\n            });\n        }\n\n        function initChannels(message) {\n            let channelPromise = parentalControlsData.getChannelCards()\n                .then(result => {\n                    channels = result.channels;\n                    vm.channelCards = result.channelCards;\n                    //Attaching channelNumber and channelName for each card used for searching\n                    vm.channelCards.forEach((card) => {\n                        card.channelNumber = getCardNumber(card);\n                        card.channelName = getCardName(card);\n                    });\n                    onFilterChanged();\n                });\n            $rootScope.$broadcast(\n                'message:loading',\n                channelPromise,\n                message,\n                undefined\n            );\n        }\n\n        function initRatings() {\n            parentalControlsData.getRatingBlocks()\n                .then(result => {\n                    vm.ratings = result;\n\n                    if (!watchingRatings) {\n                        $scope.$watch(() => vm.ratings.tvRating, function (newRating, oldRating) {\n                            if (newRating !== oldRating) {\n\n                                // TODO: Analytics Event\n                                // $rootScope.$emit('EG:parentalControlsUpdated', {\n                                //     ratingType: 'tvRating',\n                                //     newRating: newRating,\n                                //     oldRating: oldRating\n                                // });\n                                parentalControlsService.debounceUnblockRating(vm.ratings.movieRating, newRating);\n                            }\n                        });\n\n                        $scope.$watch(() => vm.ratings.movieRating, function (newRating, oldRating) {\n                            if (newRating !== oldRating) {\n\n                                // TODO: Analytics Event\n                                // $rootScope.$emit('EG:parentalControlsUpdated', {\n                                //     ratingType: 'movieRating',\n                                //     newRating: newRating,\n                                //     oldRating: oldRating\n                                // });\n\n                                parentalControlsService.debounceUnblockRating(newRating, vm.ratings.tvRating);\n                            }\n                        });\n                        watchingRatings = true;\n                    }\n                    $rootScope.$broadcast('pageChangeComplete', $state.current);\n                });\n        }\n\n        function updateCanEdit() {\n            vm.canEdit = vm.hasPin && vm.unlocked && vm.parentalControlsEnabledForClient;\n        }\n\n        function isChannel(card) {\n            return angular.isDefined(card.services);\n        }\n\n        function isChannelBlocked(card) {\n            if (isChannel(card)) {\n                return card.services.some(s => s.blocked);\n            } else {\n                return card.blocked;\n            }\n        }\n\n        function getCardImage(card) {\n            let url;\n            if (isChannel(card)) {\n                url = card.logoUrl;\n            } else {\n                url = card.imageUrl;\n            }\n            return addLogoQueryParams(swapProtocol(url));\n        }\n\n        function getCardName(card) {\n            if (isChannel(card)) {\n                return card.name;\n            } else {\n                return card.networkName;\n            }\n        }\n\n        /**\n         * This only returns a channel number if there is a _single_ channel associated with the card. If there are\n         * more than 1, they do not get displayed.\n         * Due to the logic - we merge multiple services and channels into the same card, so that may represent many\n         * channels.\n         */\n        function getCardNumber(card) {\n            if (card.channels) {\n                if (card.channels.length >= 1) {\n                    return card.channels[0];\n                }\n                return '';\n            } else if (card.services) {\n                let uniqueChannels = card.services.reduce((memo, service) => {\n                    if (service.channels) {\n                        let unique = service.channels.filter(s => memo.indexOf(s) < 0);\n                        return memo.concat(unique);\n                    } else {\n                        return memo;\n                    }\n                }, []);\n\n                if (uniqueChannels.length >= 1) {\n                    return uniqueChannels[0];\n                } else {\n                    return '';\n                }\n            }\n        }\n\n        function getCardCallsign(card) {\n            if (isChannel(card)) {\n                return card.name;\n            } else {\n                return card.callsign;\n            }\n        }\n\n        function clearAllChannelBlocks($event) {\n            $event.stopPropagation();\n            $event.preventDefault();\n\n            unlock().then(() => {\n                //$rootScope.$emit('EG:parentalControlsCleared');\n                parentalControlsService.clearAllChannelBlocks().then(function () {\n                    initChannels('Unblocking all channels...');\n                }, function (error) {\n                    $log.error(error);\n                    alert.open({\n                        message: errorCodesService.getMessageForCode('WGE-1001')\n                    });\n                });\n            });\n        }\n\n        function blockCard(card) {\n            if (isChannel(card)) {\n                card.services.forEach(s => s.blocked = true);\n            } else {\n                card.blocked = true;\n            }\n            parentalControlsService.updateParentalControlsByChannel(channels);\n        }\n\n        function unblockCard(card) {\n            if (isChannel(card)) {\n                card.services.forEach(s => s.blocked = false);\n            } else {\n                card.blocked = false;\n            }\n            parentalControlsService.updateParentalControlsByChannel(channels);\n        }\n\n        function onFilterChanged(callSignFilter) {\n            vm.filteredCards = vm.channelCards\n                .filter((card) => {\n                    const callsign = getCardCallsign(card);\n                    return !callSignFilter || callsign.match(callSignFilter);\n                });\n\n            // Add an empty \"card\" for the clearAll button\n            vm.filteredCards.push();\n        }\n\n        function swapProtocol(url) {\n            return url.replace('http://', 'https://');\n        }\n\n        function addLogoQueryParams(url) {\n            return url + ((url.indexOf('?') > -1) ? '&' : '?') + 'width=100&sourceType=colorhybrid';\n        }\n\n        function unlock() {\n            if (vm.canEdit) {\n                return $q.resolve();\n            } else {\n                return pcDialog.unlock().then(() => {\n                    parentalControlsService.enableParentalControlsForClient();\n                    vm.hasPin = true;\n                    vm.unlocked = true;\n                    vm.parentalControlsEnabledForClient = true;\n                    updateCanEdit();\n                });\n            }\n        }\n\n        function toggleCardBlock($event, card) {\n            $event.stopPropagation();\n            $event.preventDefault();\n            unlock().then(() => {\n                if (isChannelBlocked(card)) {\n                    unblockCard(card);\n                } else {\n                    blockCard(card);\n                }\n            });\n        }\n        function toggleParentalControlsForClient() {\n            if (vm.parentalControlsEnabledForClient === false) {\n                vm.parentalControlsEnabledForClient = true;\n                parentalControlsService.enableParentalControlsForClient();\n            } else {\n                vm.parentalControlsEnabledForClient = false;\n                parentalControlsService.disableParentalControlsForClient();\n            }\n            updateCanEdit();\n        }\n\n        function togglePCEnabled($event) {\n            $event.stopPropagation();\n            $event.preventDefault();\n\n            if (!vm.hasPin || !vm.unlocked) {\n                pcDialog.unlock().then(() => {\n                    initRatings();\n                    toggleParentalControlsForClient();\n                    vm.hasPin = true;\n                    vm.unlocked = true;\n                    updateCanEdit();\n                });\n            } else if (vm.parentalControlsEnabledForClient) {\n                pcDialog.unlock().then(() => {\n                    toggleParentalControlsForClient();\n                });\n            } else if (!vm.parentalControlsEnabledForClient) {\n                toggleParentalControlsForClient();\n            }\n        }\n    }\n}());\n"],"sourceRoot":"/source/"}