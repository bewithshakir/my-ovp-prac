{"version":3,"sources":["ovpApp/settings/parentalControls/channelBlock/channelBlock.js"],"names":[],"mappings":"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","file":"ovpApp/settings/parentalControls/channelBlock/channelBlock.js","sourcesContent":["(() => {\n    'use strict';\n\n    angular.module('ovpApp.settings.parentalControls.channelBlock', [\n        'ovpApp.components.ovp.ovpSwitch',\n        'ovpApp.services.stbSettingsService',\n        'ovpApp.directives.arrowNav',\n        'ovpApp.settings.parentalControls.data',\n        'ovpApp.components.alert',\n        'ovpApp.messages',\n        'ovpApp.services.parentalControlsService'\n    ])\n    .component('channelBlock', {\n        templateUrl: '/js/ovpApp/settings/parentalControls/channelBlock/channelBlock.html',\n        bindings: {\n            isChannelBlocked: '=',\n            onFilterChanged: '=',\n            getCardImage: '=',\n            getCardNumber: '=',\n            getCardName: '=',\n            clearAllChannelBlocks: '=',\n            toggleCardBlock: '=',\n            channelCards: '<',\n            filteredCards: '<'\n        },\n        controller: class ChannelBlock {\n            /* @ngInject */\n            constructor(StbSettingsService, parentalControlsService, parentalControlsData, $rootScope,\n                $timeout, $window, $q, $log, messages) {\n                angular.extend(this, {StbSettingsService, parentalControlsService, parentalControlsData,\n                    $rootScope, $timeout, $window, $q,$log, messages });\n            }\n\n            $onInit() {\n                this.parentalSearchValue = '';\n                this.callSignFilter = null;\n                this.channelBlockingEnabled = true;\n            }\n            cancelSearch() {\n                this.parentalSearchValue = '';\n                this.searchInput();\n            }\n\n            getCardAriaLabel(card) {\n                const channelText = this.getCardNumber(card) ? 'channel ' + this.getCardNumber(card) : '';\n                const cardSign = card.callsign || card.callSign;\n                const musicChoiceRegex = /^(~?MC)/;\n                let cardName;\n                if (cardSign !== undefined && musicChoiceRegex.test(cardSign)) {\n                    cardName = cardSign.replace(musicChoiceRegex, 'Music Choice ');\n                } else {\n                    cardName = this.getCardName(card);\n                }\n                const blocked = this.isChannelBlocked(card) ? 'blocked' : 'unblocked';\n                return `${blocked} ${channelText}, ${cardName}`;\n            }\n\n            searchInput() {\n                var nv = this.parentalSearchValue;\n                if (nv) {\n                    if (isFinite(nv)) {\n                        this.callSignFilter = null;\n                        this.$timeout(() => this.jumpToChannel(parseInt(nv), 0, false));\n                    } else {\n                        this.callSignFilter = new RegExp(nv, 'i');\n                    }\n                } else {\n                    this.callSignFilter = null;\n                }\n                this.onFilterChanged(this.callSignFilter);\n            }\n\n            jumpToChannel(searchVal) {\n                var channel = 0,\n                    scrollTo = 0,\n                    scrollAt = angular.element('body').scrollTop(),\n                    domBlock;\n\n                if (!isNaN(searchVal)) {\n                    // find the nearest channel without going over\n                    let diff = searchVal;\n                    for (let i = 0; i < this.channelCards.length; i = i + 1) {\n                        let chnl = this.channelCards[i].channelNumber || 0,\n                            newDiff = searchVal - chnl;\n                        if (newDiff >= 0 && newDiff <= diff) {\n                            channel = chnl;\n                            diff = newDiff;\n                        }\n                        if (newDiff === 0) {\n                            break; // channel found\n                        }\n                    }\n\n                    if (channel > 0) {\n                        domBlock = this.$window.document.querySelector('#channel' + channel);\n                        if (domBlock) {\n                            // The channelId div is being referred to as the `domBlock`.\n                            // Here whose immediate parent is the entire channel block\n                            // and hence its offsetTop is calculated as 0 relative to its parent.\n                            // domBlock.offsetParent gives the channelBlock where we need to scroll.\n                            scrollTo = domBlock.offsetParent.offsetTop;\n\n                            if (scrollTo < 0) {\n                                // scroll up\n                                scrollTo += scrollAt;\n                            }\n\n                            angular.element('html, body').animate({\n                                scrollTop:  scrollTo\n                            }, 600, 'swing', function () {\n                                domBlock.focus();\n                            });\n                        }\n                    }\n                }\n            }\n        }\n    });\n})();\n"],"sourceRoot":"/source/"}