{"version":3,"sources":["ovpApp/services/focus-mediator.js"],"names":[],"mappings":"AAAA;;AAAA,CAAC,YAAY;IACT;;;;;;;IAMA,QACK,OAAO,iCAAiC,CACrC,iBAEH,QAAQ,iBAAiB;;;IAG9B,SAAS,cAAc,UAAU,UAAU,IAAI;QAC3C,IAAI,aAAa;QACjB,IAAI,QAAK;;QAET,IAAM,UAAU;YACZ,cAAA;YACA,aAAa;YACb,cAAc;;QAElB,OAAO;;;;QAIP,SAAS,aAAa,UAAU;YAC5B,IAAM,QAAQ,GAAG;;YAEjB,WAAW,KAAK,EAAC,UAAA,UAAU,OAAA;;YAE3B,IAAI,CAAC,OAAO;gBACR,QAAQ,SAAS,YAAM;oBACnB,WAAW,KAAK,UAAC,GAAG,GAAC;wBADjB,OACsB,EAAE,WAAW,EAAE;;oBACzC,WAAW,QAAQ,UAAC,WAAW,OAAU;wBACrC,IAAI,UAAU,GAAG;4BACb,UAAU,MAAM;+BACb;4BACH,UAAU,MAAM;;;;oBAIxB,aAAa;oBACb,QAAQ;mBACT;;;YAGP,OAAO,MAAM;;;KAGpB","file":"ovpApp/services/focus-mediator.js","sourcesContent":["(function () {\n    'use strict';\n\n    /**\n     * Used to resolve conflicting rules about where to place the focus\n     */\n\n    angular\n        .module('ovpApp.services.focusMediator', [\n            'lib.platform'\n        ])\n        .factory('focusMediator', focusMediator);\n\n    /* @ngInject */\n    function focusMediator($timeout, platform, $q) {\n        let candidates = [];\n        let timer;\n\n        const service = {\n            requestFocus,\n            lowPriority: 0,\n            highPriority: 100\n        };\n        return service;\n\n        ////////////////\n\n        function requestFocus(priority) {\n            const defer = $q.defer();\n\n            candidates.push({priority, defer});\n\n            if (!timer) {\n                timer = $timeout(() => {\n                    candidates.sort((a, b) => b.priority - a.priority);\n                    candidates.forEach((candidate, index) => {\n                        if (index === 0) {\n                            candidate.defer.resolve();\n                        } else {\n                            candidate.defer.reject();\n                        }\n                    });\n\n                    candidates = [];\n                    timer = undefined;\n                }, 0);\n            }\n\n            return defer.promise;\n        }\n    }\n})();\n"],"sourceRoot":"/source/"}