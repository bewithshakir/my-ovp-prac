{"version":3,"sources":["ovpApp/cdvr/cdvr-scheduled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,CAAC,YAAY,EAAE,SAAS,iBAAiB,QAAQ,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,aAAa,MAAM,IAAI,WAAW,aAAa,WAAW,cAAc,OAAO,WAAW,eAAe,MAAM,IAAI,WAAW,YAAY,WAAW,WAAW,MAAM,OAAO,eAAe,QAAQ,WAAW,KAAK,iBAAiB,OAAO,UAAU,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,iBAAiB,YAAY,WAAW,aAAa,IAAI,aAAa,iBAAiB,aAAa,cAAc,OAAO;;AAEjiB,SAAS,gBAAgB,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;AAJhH,CAAC,YAAY;IACT;;IAEA,QAAQ,OAAO,eACd,UAAU,iBAAiB;QACxB,aAAa;QACb,YAAU,CAAA,YAAA;;;;YAEK,SAFG,cAEF,QAAQ,YAAY,UAAU,aAAa,aAAa;gBAOhE,gBAAgB,MATN;;gBAGV,QAAQ,OAAO,MAAM,EAAC,QAAA,QAAQ,YAAA,YAAY,UAAA,UAAU,aAAA,aAAa,aAAA;;;YAWrE,aAdc,eAAa,CAAA;gBAevB,KAAK;gBACL,OAVG,SAAA,UAAG;oBAWF,IAAI,QAAQ;;oBAVhB,KAAK,UAAU,KAAK,SAAS,kBAAkB;oBAC/C,KAAK,aAAa;wBACd,YAAY;wBACZ,UAAU;wBACV,WAAW;wBACX,YAAY;wBACZ,IAAI,KAAK,YAAY;wBACrB,iBAAiB;;;oBAGrB,KAAK,8BAA8B,KAAK,WAAW,IAAI,cAAc,YAAM;wBACvE,MAAK;;;oBAGT,KAAK;;eAcN;gBACC,KAAK;gBACL,OAbM,SAAA,aAAG;oBACT,KAAK;;eAeN;gBACC,KAAK;gBACL,OAdkB,SAAA,yBAAG;oBAejB,IAAI,SAAS;;oBAdjB,IAAI,UAAU,KAAK,YAAY,eAAe,KAAK,UAAA,WAAa;wBAC5D,OAAK,WAAW;wBAChB,OAAK,WAAW,WAAW,sBAAsB,OAAK,OAAO;uBAC/D,SAAO,UAAA,SAAW;wBAChB,OAAK,UAAU;wBACf,OAAK,WAAW;;oBAEpB,KAAK,WAAW,WACZ,mBACA,SACA,WACA;;;;YAgBR,OAxDc;;;KA4CrB","file":"ovpApp/cdvr/cdvr-scheduled.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular.module('ovpApp.cdvr')\n    .component('cdvrScheduled', {\n        templateUrl: '/js/ovpApp/cdvr/scheduled.html',\n        controller: class CdvrScheduled {\n            /* @ngInject */\n            constructor($state, $rootScope, messages, cdvrService, storageKeys) {\n                angular.extend(this, {$state, $rootScope, messages, cdvrService, storageKeys});\n            }\n\n            $onInit() {\n                this.message = this.messages.getMessageForCode('MSG-9080');\n                this.listConfig = {\n                    showHeader: false,\n                    listOnly: true,\n                    showTotal: false,\n                    showToggle: false,\n                    id: this.storageKeys.scheduledListViewMode,\n                    useLocalStorage: true\n                };\n\n                this.unregisterUpdateDvrListener = this.$rootScope.$on('update-dvr', () => {\n                    this.getScheduledRecordings();\n                });\n\n                this.getScheduledRecordings();\n            }\n\n            $onDestroy() {\n                this.unregisterUpdateDvrListener();\n            }\n\n            getScheduledRecordings() {\n                let promise = this.cdvrService.getScheduled().then(scheduled => {\n                    this.schedule = scheduled;\n                    this.$rootScope.$broadcast('pageChangeComplete', this.$state.current);\n                }).catch(message => {\n                    this.message = message;\n                    this.schedule = [];\n                });\n                this.$rootScope.$broadcast(\n                    'message:loading',\n                    promise,\n                    undefined,\n                    'DVR Scheduled');\n            }\n        }\n    });\n})();\n"],"sourceRoot":"/source/"}