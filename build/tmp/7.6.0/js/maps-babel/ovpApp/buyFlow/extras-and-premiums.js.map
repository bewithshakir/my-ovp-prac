{"version":3,"sources":["ovpApp/buyFlow/extras-and-premiums.js"],"names":[],"mappings":"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","file":"ovpApp/buyFlow/extras-and-premiums.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular.module('ovpApp.buyFlow.extrasAndPremiums', [\n        'ovpApp.buyFlow.bundleCheckbox',\n        'ovpApp.buyFlow.networkCheckbox',\n        'ovpApp.buyFlow.collapsedStep'\n    ])\n    .component('extrasAndPremiums', {\n        bindings: {\n            stepNumber: '<',\n            stepNumberClass: '<',\n            itemBodyClass: '<',\n            title: '<stepTitle',\n            offerings: '<',\n            collapsed: '<',\n            onTitleClick: '&',\n            onUpdatePrice: '&',\n            onContinue: '&',\n            onBack: '&',\n            onCancel: '&'\n        },\n\n        templateUrl: '/js/ovpApp/buyFlow/extras-and-premiums.html',\n        controller: class ExtrasAndPremiums {\n            /* @ngInject */\n            constructor() {\n                angular.extend(this, {});\n            }\n            $onChanges(changes) {\n                if (changes.offerings) {\n                    if (!this.offerings) {\n                        this.networks = [];\n                        this.bundles = [];\n                    } else {\n                        //\"networks\" are offerings with exactly one channel\n                        this.networks = this.offerings.filter(\n                            offering => offering.channels && offering.channels.length === 1);\n                        this.networks.forEach(network => network.checked = false);\n                        //\"bundles\" are offerings which encompass multiple channels\n                        this.bundles = this.offerings.filter(\n                            bundle => bundle.channels === null || bundle.channels.length > 1);\n                        this.bundles.forEach(bundle => {\n                            bundle.checked = false;\n                            // Create references to the corresponding networks, for quick lookup later\n                            bundle.childNetworks = this.networks.filter(\n                                network => bundle.channels && bundle.channels.find(\n                                    channel => channel.tmsId === network.channels[0].tmsId));\n                        });\n                    }\n                }\n            }\n\n            bundleToggled(bundle, checked) {\n                bundle.checked = checked;\n                bundle.childNetworks.forEach(network => network.checked = checked);\n\n                this.updateInBundleFlags();\n                this.onUpdatePrice({price: this.price(), component: this.title});\n            }\n\n            networkToggled(network, checked) {\n                network.checked = checked;\n                this.bundles.forEach(bundle => bundle.checked = bundle.childNetworks.every(network => network.checked));\n\n                this.updateInBundleFlags();\n                this.onUpdatePrice({price: this.price(), component: this.title});\n            }\n\n            updateInBundleFlags() {\n                this.networks.forEach(network => network.inBundle = false);\n                this.bundles.filter(bundle => bundle.checked)\n                    .forEach(bundle => bundle.childNetworks.forEach(network => network.inBundle = true));\n            }\n\n            regularCaption() {\n                const bundles = this.bundles.filter(bundle => bundle.checked);\n                // Deliberately not checking if the network is in a bundle. If there are both\n                //   networks and bundles, we prioritize listing the networks. So bundles will\n                //   only be listed for the Extras page, since it has no individual networks\n                const networks = this.networks.filter(network => network.checked);\n\n                if (networks.length === 1) {\n                    return 'Network:';\n                } else if (networks.length > 1) {\n                    return 'Networks:';\n                } else if (bundles.length === 1) {\n                    return 'Package:';\n                } else if (bundles.length > 1) {\n                    return 'Packages:';\n                } else {\n                    return '';\n                }\n            }\n\n            boldCaption() {\n                const bundles = this.bundles.filter(bundle => bundle.checked);\n                // Deliberately not checking if the network is in a bundle. If there are both\n                //   networks and bundles, we prioritize listing the networks. So bundles will\n                //   only be listed for the Extras page, since it has no individual networks\n                const networks = this.networks.filter(network => network.checked);\n\n                if (networks.length > 0) {\n                    return networks.map(n => n.name).join(' | ');\n                } else if (bundles.length > 0) {\n                    return bundles.map(n => n.name).join(' | ');\n                } else {\n                    return '';\n                }\n            }\n\n            price() {\n                return this.offerings.reduce((memo, current) => {\n                    if (current.checked && !current.inBundle) {\n                        return memo + parseFloat(current.price);\n                    } else {\n                        return memo;\n                    }\n                }, 0);\n            }\n        }\n    });\n})();\n"],"sourceRoot":"/source/"}