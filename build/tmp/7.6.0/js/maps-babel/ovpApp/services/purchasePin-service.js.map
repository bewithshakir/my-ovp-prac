{"version":3,"sources":["ovpApp/services/purchasePin-service.js"],"names":[],"mappings":"AAAA;AACA;;AAAC,CAAA,YAAY;IACT;;;IAEA,QAAQ,OAAO,sCAAsC,CACjD,iBACA,2CACA,+BAEH,QAAQ,sBAAsB;;;IAG/B,SAAS,mBAAmB,OAAO,IAAI,YAAY,UAAU,QACzD,yBAAyB,YAAY,aAAa;;QAElD,IAAI,eAAe;;QACf;YACA,UAAU;YACN,UAAU,SAAA,WAAY;gBAClB,IAAI,CAAC,aAAa;oBACd,cAAc,GAAG;oBACjB,MAAM;wBACF,QAAQ;wBACR,KAAK,OAAO,YAAY;wBACxB,iBAAiB;uBAClB,KAAK,UAAU,UAAU;wBACxB,IAAI,SAAS,WAAW,KAAK;4BACzB,YAAY,OAAO;4BACnB;;wBAEJ,YAAY,QAAQ;wBACpB,cAAc;uBACf,UAAU,OAAO;wBAChB,IAAI,MAAM,WAAW,KAAK;4BACtB,YAAY,OAAO;4BACnB;;wBAEJ,YAAY,QAAQ;wBACpB,cAAc;;;gBAGtB,OAAO,YAAY;;YAEvB,gCAAgC,SAAA,iCAAY;gBACxC,IAAI,WAAW,WAAW,QAAQ,YAAY,qBAAqB;;gBAEnE,IAAI,aAAa,QAAQ,aAAa,WAAW;;;;oBAI7C,GAAG,QAAQ;;;gBAGf,OAAO,GAAG,QAAQ,IAAI,kBAAkB;;YAE5C,aAAa,SAAA,YAAU,KAAK;gBACxB,IAAI,UAAU,EAAC,aAAa,IAAI;gBAChC,OAAO,MAAM;oBACT,QAAQ;oBACR,KAAK,OAAO,YAAY;oBACxB,MAAM,KAAK,UAAU;oBACrB,iBAAiB;oBACjB,eAAe;mBAChB,KAAK,YAAY;oBAChB,QAAQ,eAAe;;;YAG/B,QAAQ,SAAA,OAAU,KAAK,UAAU;gBAC7B,IAAI,WAAW,EAAC,aAAa;gBAC7B,IAAI,aAAa,aAAa,aAAa,IAAI;oBAC3C,SAAS,gBAAgB;;gBAE7B,OAAO,MAAM;oBACT,QAAQ;oBACR,KAAK,OAAO,YAAY;oBACxB,MAAM,KAAK,UAAU;oBACrB,iBAAiB;mBAClB,KAAK,YAAM;;oBAEV,SAAS,YAAY;wBACjB,QAAQ,eAAe;uBACxB;;;YAGX,kBAAkB,SAAA,mBAAY;gBAC1B,OAAO,wBAAwB;;YAEnC,mBAAmB,SAAA,oBAAY;;;;;gBAK3B,IAAI,QAAQ,GAAG;gBACf,MAAM,QAAQ;gBACd,OAAO,MAAM;;YAEjB,6BAA6B,SAAA,8BAAY;gBACrC,WAAW,QAAQ,YAAY,qBAAqB,cAAc,EAAC,KAAK;oBACpE,OAAO;;gBAEX,WAAW,MAAM;;YAErB,4BAA4B,SAAA,6BAAY;gBACpC,WAAW,QAAQ,YAAY,qBAAqB,SAAS,EAAC,KAAK;oBAC/D,OAAO;;gBAEX,WAAW,MAAM;;YAErB,gBAAgB,SAAA,eAAU,KAAK;gBAC3B,WAAW,QAAQ,YAAY,kBAAkB,IAAI;;YAEzD,aAAa,SAAA,cAAY;gBACrB,OAAO,WAAW,QAAQ,YAAY;;;;QAIlD,OAAO;;KAEV","file":"ovpApp/services/purchasePin-service.js","sourcesContent":["/* globals md5 */\n(function () {\n    'use strict';\n\n    angular.module('ovpApp.services.purchasePinService', [\n        'ovpApp.config',\n        'ovpApp.services.parentalControlsService',\n        'ovpApp.services.ovpStorage'\n    ])\n    .factory('purchasePinService', purchasePinService);\n\n    /* @ngInject */\n    function purchasePinService($http, $q, $rootScope, $timeout, config,\n        parentalControlsService, ovpStorage, storageKeys) {\n\n        var DISABLE_TRUE = '1234ABcDMnPXyz$#!@&*', // true alias to disable pin.\n            pinSetDefer,\n            service = {\n                isPINSet: function () {\n                    if (!pinSetDefer) {\n                        pinSetDefer = $q.defer();\n                        $http({\n                            method: 'GET',\n                            url: config.purchasePin.purchasePINUrl(),\n                            withCredentials: true\n                        }).then(function (response) {\n                            if (response.status !== 200) {\n                                pinSetDefer.reject(response);\n                                return;\n                            }\n                            pinSetDefer.resolve(true);\n                            pinSetDefer = null;\n                        }, function (error) {\n                            if (error.status !== 404) {\n                                pinSetDefer.reject(error);\n                                return;\n                            }\n                            pinSetDefer.resolve(false);\n                            pinSetDefer = null;\n                        });\n                    }\n                    return pinSetDefer.promise;\n                },\n                isPurchasePINDisabledForClient: function () {\n                    var disabled = ovpStorage.getItem(storageKeys.purchasePinDisabled, true);\n\n                    if (disabled === null || disabled === undefined) {\n                        // If 'ovpApp.purchasePin.' + username + '.disabled'\n                        // is not found in localStorage,\n                        // do not enable purchase Pin for the user\n                        $q.resolve(false);\n                    }\n\n                    return $q.resolve(md5(DISABLE_TRUE) === disabled);\n                },\n                validatePIN: function (pin) {\n                    var pinJson = {purchasePIN: md5(pin)};\n                    return $http({\n                        method: 'POST',\n                        url: config.purchasePin.validatePurchasePINUrl(),\n                        data: JSON.stringify(pinJson),\n                        withCredentials: true,\n                        bypassRefresh: true //Do not attempt to refresh credentials on a 401 or 403\n                    }).then(function () {\n                        service.savePINLocally(pin);\n                    });\n                },\n                setPIN: function (pin, password) {\n                    let postData = {purchasePIN: pin};\n                    if (password !== undefined && password !== '') {\n                        postData.adminPassword = password;\n                    }\n                    return $http({\n                        method: 'POST',\n                        url: config.purchasePin.purchasePINUrl(),\n                        data: JSON.stringify(postData),\n                        withCredentials: true\n                    }).then(() => {\n                        //needs a delay for pinSet\n                        $timeout(function () {\n                            service.savePINLocally(pin);\n                        }, 1000);\n                    });\n                },\n                isPrimaryAccount: function () {\n                    return parentalControlsService.isPrimaryAccount();\n                },\n                shouldSetDefaults: function () {\n                    // this is just a promise wrapper to make\n                    // consistent interface across purchase pin and PC APIs,\n                    // so that pin-entry.js can be reused\n                    // and require minimum changes to support both services.\n                    var defer = $q.defer();\n                    defer.resolve(false);\n                    return defer.promise;\n                },\n                disablePurchasePINForClient: function () {\n                    ovpStorage.setItem(storageKeys.purchasePinDisabled, DISABLE_TRUE, {key: true,\n                        value: true\n                    });\n                    $rootScope.$emit('PurchasePin:updated');\n                },\n                enablePurchasePINForClient: function () {\n                    ovpStorage.setItem(storageKeys.purchasePinDisabled, 'false', {key: true,\n                        value: true\n                    });\n                    $rootScope.$emit('PurchasePin:updated');\n                },\n                savePINLocally: function (pin) {\n                    ovpStorage.setItem(storageKeys.purchasePinLocal, md5(pin));\n                },\n                getLocalPin: function () {\n                    return ovpStorage.getItem(storageKeys.purchasePinLocal);\n                }\n            };\n\n        return service;\n    }\n}());\n"],"sourceRoot":"/source/"}