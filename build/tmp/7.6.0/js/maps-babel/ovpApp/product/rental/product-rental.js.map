{"version":3,"sources":["ovpApp/product/rental/product-rental.js"],"names":[],"mappings":"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","file":"ovpApp/product/rental/product-rental.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular\n        .module('ovpApp.product.rental', [\n                'ovpApp.config',\n                'ovpApp.messages',\n                'ui.router',\n                'ovpApp.components.ovp.rating',\n                'ovpApp.product.rental-service',\n                'ovpApp.services.errorCodes',\n                'ovpApp.services.profileService',\n                'ovpApp.purchasePinDialog',\n                'ajoslin.promise-tracker',\n                'ovpApp.components.popup'\n            ])\n        .component('productRental', {\n        bindings: {\n            resolve: '<',\n            modalInstance: '<'\n        },\n        templateUrl: '/js/ovpApp/product/rental/product-rental-popup.html',\n        controller: class ProductRental {\n            /* @ngInject */\n            constructor($scope, $state, $http, config,\n                $rootScope, $log, ProductRentalService, profileService,\n                $controller, messages, $uibModalStack, errorCodesService) {\n                angular.extend(this, {$scope, $state, $http, config,\n                    $rootScope, $log, ProductRentalService, profileService,\n                    $controller, messages, $uibModalStack, errorCodesService});\n                this.$scope.pc = this.$scope.$new();\n                this.$controller('PurchasePinDialogController', {$scope: this.$scope});\n            }\n\n            $onInit() {\n                const options = this.resolve.options || {};\n                this.asset = options.asset;\n                this.action = options.action;\n                this.step = 'options';\n                this.modalDomEl = this.$uibModalStack.getTop().value.modalDomEl;\n                this.streamOptions = [];\n                this.oohWarningMessage = this.errorCodesService.getMessageForCode('WLC-1012');\n                this.rentLoadingMessage = this.messages.getMessageForCode('MSG-9070');\n                this.RENT_SINGLE_OPTION_TITLE = this.messages.getMessageForCode('MSG-9071');\n                this.RENT_COMPLEX_OPTION_TITLE = this.messages.getMessageForCode('MSG-9072');\n\n                this.profileService.isAccessibilityEnabled().then((hasCapability) => {\n                    this.hasAccessibility = hasCapability;\n                });\n\n                if (this.asset && this.action) {\n                    this.streamOptions = this.ProductRentalService.getRentalOptions(this.asset);\n                    this.startStep('options');\n\n                    if ('confirm' === this.step) {\n                        this.$rootScope.$emit('Analytics:modal-view', {\n                            context: 'tvodFlow',\n                            featureStepName: 'rentConfirmation',\n                            modalName: 'rentConfirmation',\n                            modalType: 'options',\n                            triggeredBy: 'user',\n                            modalText: (this.step === 'options' ?\n                                this.RENT_COMPLEX_OPTION_TITLE : this.RENT_SINGLE_OPTION_TITLE)\n                        });\n                    }\n                } else {\n                    this.modalInstance.dismiss('error');\n                    this.$log.error('Unable to start the rental, the asset and/or action is missing');\n                }\n            }\n\n            //Options step complete\n            selectOption(option) {\n                if (option) {\n                    this.selectedOption = option;\n                    this.selectedStream = this.asset.streamList[this.selectedOption.streamIndex];\n                    this.startStep('pin');\n                } else {\n                    this.invalidOptionMessage = 'This option is Invalid, please select another';\n                }\n            }\n\n            cancel(msg) {\n                this.modalInstance.close(msg);\n\n                // Analytics\n                this.$rootScope.$broadcast('Analytics:select', {\n                    source: 4,\n                    category: 'navigation',\n                    context: 'tvodFlow',\n                    featureStepName: 'rentConfirmation',\n                    pageName: 'rentConfirmation',\n                    elementUiName: 'cancel',\n                    pageSectionName: 'conversionArea',\n                    elementStandardizedName: 'cancel',\n                    triggeredBy: 'user',\n                    operationType: 'buttonClick',\n                    featureCurrentStep: 4\n                });\n                this.$rootScope.$emit('Analytics:tvod-purchase-stop', { // cancelled\n                    context: 'tvodFlow',\n                    success: false,\n                    triggeredBy: 'user',\n                    asset: this.asset,\n                    featureCurrentStep: 5\n                });\n            }\n\n            //Confirm step complete\n            confirm(suppressAnalytics) {\n                this.startStep('renting');\n\n                // Analytics: If 'suppressAnalytics' is true, this\n                // event was already published earlier.\n                if (!suppressAnalytics) {\n                    this.$rootScope.$broadcast('Analytics:select', {\n                        source: 5,\n                        category: 'navigation',\n                        context: 'tvodFlow',\n                        featureStepName: 'rentConfirmation',\n                        pageName: 'rentConfirmation',\n                        elementUiName: 'rent',\n                        pageSectionName: 'conversionArea',\n                        elementStandardizedName: 'rent',\n                        triggeredBy: 'user',\n                        operationType: 'buttonClick',\n                        featureCurrentStep: 4\n                    });\n                }\n\n                this.ProductRentalService.confirmRental(this.asset, this.selectedOption)\n                    .then(() => {\n                        this.modalInstance.close('success');\n                    }, (err) => {\n                        this.displayError(err);\n                        this.startStep('error');\n                    });\n            }\n\n            startStep(step) {\n                if (step === 'pin') {\n                    this.step = 'pin';\n                    this.modalDomEl.addClass('hidden');\n                    this.ProductRentalService.validatePins(this.$scope, this.asset, this.selectedStream)\n                        .then((data) => {\n                            if (data.skipConfirm) {\n                                // TODO: Seems 'skipConfirm' is somewhat misleadingly named.\n                                this.confirm(data.skipConfirm);\n                            } else {\n                                this.startStep('confirm');\n                            }\n                            this.modalDomEl.removeClass('hidden');\n                        }, () => {\n                            //Cancel out of dialog\n                            this.modalInstance.dismiss('error');\n                        });\n                } else if (step === 'confirm') {\n                    if (!this.selectedOption) {\n\n                        this.selectedOption = this.streamOptions[0];\n                        this.selectedStream = this.asset.streamList[this.selectedOption.streamIndex];\n                    }\n\n                    // Analytics\n                    this.$rootScope.$emit('Analytics:modal-view', {\n                        context: 'tvodFlow',\n                        featureStepName: 'rentConfirmation',\n                        modalName: 'rentConfirmation',\n                        modalType: 'options',\n                        triggeredBy: 'user',\n                        modalText: this.RENT_SINGLE_OPTION_TITLE\n                    });\n\n                    this.step = 'confirm';\n                } else if (step === 'options') {\n                    if (this.streamOptions.length > 1) {\n                        this.step = 'options';\n                    } else {\n                        this.selectedOption = this.streamOptions[0];\n                        this.selectedStream = this.asset.streamList[this.selectedOption.streamIndex];\n                        this.startStep('pin');\n                    }\n                } else if (step === 'renting') {\n                    this.step = 'renting';\n                } else if (step === 'error') {\n                    this.step = 'error';\n                }\n            }\n\n            displayError(err) {\n                this.error = {\n                    code: err.code || 'WTX-9000'\n                };\n                this.error.message = this.errorCodesService.getMessageForCode(this.error.code);\n\n                // Add raw rent error to display, if configured to do so.\n                let errorData = err.data || {};\n                if (this.config.displayRawRentError && errorData.context &&\n                    errorData.context.detailedResponseDescription) {\n                    this.error.details =  errorData.context.detailedResponseDescription;\n                }\n\n                // Analytics (Just updating a modal, not opening a new one)\n                this.$rootScope.$emit('Analytics:modal-start');\n                this.$rootScope.$emit('Analytics:modal-view', {\n                    context: 'tvodFlow',\n                    featureStepName: 'rentConfirmation',\n                    modalName: 'purchaseError',\n                    modalType: 'error',\n                    triggeredBy: 'application',\n                    modalText: this.error.message\n                });\n            }\n        }\n    });\n})();\n"],"sourceRoot":"/source/"}