{"version":3,"sources":["ovpApp/ondemand/networks/network-category-list.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,CAAC,YAAY,EAAE,SAAS,iBAAiB,QAAQ,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,aAAa,MAAM,IAAI,WAAW,aAAa,WAAW,cAAc,OAAO,WAAW,eAAe,MAAM,IAAI,WAAW,YAAY,WAAW,WAAW,MAAM,OAAO,eAAe,QAAQ,WAAW,KAAK,iBAAiB,OAAO,UAAU,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,iBAAiB,YAAY,WAAW,aAAa,IAAI,aAAa,iBAAiB,aAAa,cAAc,OAAO;;AAEjiB,SAAS,gBAAgB,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;AAJhH,CAAC,YAAM;IACH;IACA,QACC,OAAO,uCAAuC,CAC3C,wBACA,iBACA,+BAEH,UAAU,uBAAuB;QAC9B,aAAa;QACb,UAAU;YACN,cAAc;YACd,MAAM;;QAEV,YAAU,CAAA,YAAA;;;;YAEK,SAFG,8BAEF,cAAc,aAAa,QAAQ,QAAQ,0BAA0B,YAAY;gBAEzF,gBAAgB,MAJN;;gBAGV,QAAQ,OAAO,MAAM,EAAC,cAAA,cAAc,aAAA,aAAc,QAAA,QAAQ,QAAA;oBACtD,0BAAA,0BAA0B,YAAA;;;YAMlC,aAVc,+BAA6B,CAAA;gBAWvC,KAAK;gBACL,OALG,SAAA,UAAG;oBACN,KAAK,mBAAmB;oBACxB,IAAI,mBAAmB;wBACnB,UAAU;wBACV,YAAY;wBACZ,aAAa,KAAK,eAAe,KAAK;wBACtC,iBAAiB;wBACjB,gBAAgB,KAAK,eAAe,KAAK;wBACzC,WAAW,iBAAiB,KAAK,aAAa,OAAO;;;oBAGzD,KAAK,yBAAyB,SAAS;;oBAEvC,KAAK,WAAW,WAAW,sBAAsB,KAAK,OAAO;;eAO9D;gBACC,KAAK;gBACL,OANU,SAAA,iBAAG;oBACb,KAAK,OAAO,GAAG,yBAAyB,EAAC,QAAQ;;eAQlD;gBACC,KAAK;gBACL,OAPU,SAAA,iBAAG;oBACb,OAAO,KAAK,aAAa,SAAS,EAAC,QAAQ;;eAS5C;gBACC,KAAK;gBACL,OARQ,SAAA,aAAC,UAAU;oBASf,IAAI,QAAQ;;oBARhB,KAAK,aAAa,SAAS,SAAS,KACnC,KAAK,UAAA,KAAO;wBACT,MAAK,mBAAmB;wBACxB,MAAK,WAAW,MAAK,OAAO;wBAC5B,MAAK,iBAAiB;4BAClB,OAAO,MAAK,iBAAiB;4BAC7B,YAAY,MAAK,iBAAiB;4BAClC,WAAW;4BACX,YAAY;4BACZ,IAAI,MAAK,YAAY;4BACrB,iBAAiB;;;;wBAIrB,IAAI,mBAAmB;4BACnB,UAAU;4BACV,YAAY,MAAK,aAAa;4BAC9B,aAAa,MAAK,QAAQ,KAAI;4BAC9B,YAAY;4BACZ,iBAAiB;4BACjB,gBAAgB,MAAK,eAAe,KAAI;4BACxC,WAAW,iBAAiB,MAAK,aAAa,OAAO,eAAe,SAAS;;;wBAGjF,MAAK,yBAAyB,SAAS;;;;;YAc/C,OAtEc;;;KA6DrB","file":"ovpApp/ondemand/networks/network-category-list.js","sourcesContent":["(() => {\n    'use strict';\n    angular\n    .module('ovpApp.ondemand.networkCategoryList', [\n        'ovpApp.ondemand.data',\n        'ovpApp.config',\n        'ovpApp.services.ovpStorage'\n        ])\n    .component('networkCategoryList', {\n        templateUrl: '/js/ovpApp/ondemand/networks/network-category-list.html',\n        bindings: {\n            categoryList: '<',\n            page: '<'\n        },\n        controller: class networkCategoryListController {\n            /* @ngInject */\n            constructor(onDemandData, storageKeys, $state, config, ondemandSubheaderService, $rootScope) {\n                angular.extend(this, {onDemandData, storageKeys,  $state, config,\n                    ondemandSubheaderService, $rootScope});\n            }\n\n            $onInit() {\n                this.selectedCategory = undefined;\n                let subheaderOptions = {\n                    showBack: true,\n                    backString: 'Networks',\n                    onBackClick: this.backToNetworks.bind(this),\n                    showNetworkLogo: true,\n                    networkLogoUrl: this.networkLogoUrl.bind(this),\n                    pageTitle: 'On Demand - ' + this.categoryList.name + ' Networks'\n                };\n\n                this.ondemandSubheaderService.setState(subheaderOptions);\n\n                this.$rootScope.$broadcast('pageChangeComplete', this.$state.current);\n            }\n\n            backToNetworks() {\n                this.$state.go('ovp.ondemand.networks', {catUrl: null});\n            }\n\n            networkLogoUrl() {\n                return this.categoryList.imageUri({height: 80});\n            }\n\n            showCategory(category) {\n                this.onDemandData.getByUri(category.uri)\n                .then(cat => {\n                    this.selectedCategory = cat;\n                    this.pageSize = this.config.vodAssetsPerPage;\n                    this.gridListConfig = {\n                        title: this.selectedCategory.name,\n                        totalItems: this.selectedCategory.totalResults,\n                        showTotal: true,\n                        showToggle: false,\n                        id: this.storageKeys.vodMinorCategoryViewMode,\n                        useLocalStorage: true\n                    };\n\n                    // Notify the subheader of the change\n                    let subheaderOptions = {\n                        showBack: true,\n                        backString: this.categoryList.name,\n                        onBackClick: this.$onInit.bind(this),\n                        showToggle: true,\n                        showNetworkLogo: true,\n                        networkLogoUrl: this.networkLogoUrl.bind(this),\n                        pageTitle: 'On Demand - ' + this.categoryList.name + ' Networks ' + category.name\n                    };\n\n                    this.ondemandSubheaderService.setState(subheaderOptions);\n                });\n            }\n        }\n    });\n})();\n"],"sourceRoot":"/source/"}