{"version":3,"sources":["ovpApp/settings/stb-parentalControls/stb-allowedRatings.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,CAAC,YAAY,EAAE,SAAS,iBAAiB,QAAQ,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,aAAa,MAAM,IAAI,WAAW,aAAa,WAAW,cAAc,OAAO,WAAW,eAAe,MAAM,IAAI,WAAW,YAAY,WAAW,WAAW,MAAM,OAAO,eAAe,QAAQ,WAAW,KAAK,iBAAiB,OAAO,UAAU,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,iBAAiB,YAAY,WAAW,aAAa,IAAI,aAAa,iBAAiB,aAAa,cAAc,OAAO;;AAEjiB,SAAS,gBAAgB,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;AAJhH,CAAC,YAAM;IACH;;IAEA,QAAQ,OAAO,uDAAuD,CAClE,kCACA,sCACA,8BACA,4CACH,UAAU,qBAAqB;QAC5B,aAAa;QACb,UAAU;YACN,OAAO;YACP,kBAAkB;YAClB,WAAW;;QAEf,YAAU,CAAA,YAAA;;;;YAEK,SAFG,4BAEF,oBAAoB,yBAAyB;gBAGrD,gBAAgB,MALN;;gBAGV,QAAQ,OAAO,MAAM,EAAC,oBAAA,oBAAoB,yBAAA;;;YAO9C,aAVc,6BAA2B,CAAA;gBAWrC,KAAK;gBACL,OANG,SAAA,UAAG;oBAOF,IAAI,QAAQ;;oBANhB,KAAK,eAAe;oBACpB,KAAK,cAAc,CAAC;wBAChB,IAAI;wBACJ,MAAM;uBACP;wBACC,IAAI;wBACJ,MAAM;;oBAEV,KAAK,iBAAiB,KAAK,kBAAkB;;oBAE7C,KAAK,mBAAmB;wBACpB,WAAW;wBACX,cAAc;;oBAElB,KAAK,QAAQ,QAAQ,UAAA,QAAU;wBAC3B,IAAI,MAAK,wBAAwB,cAAc,OAAO,gBAAgB;4BAClE,MAAK,iBAAiB,aAAa,KAAK;+BACrC;4BACH,MAAK,iBAAiB,UAAU,KAAK;;;;eAY9C;gBACC,KAAK;gBACL,OATS,SAAA,cAAC,QAAQ;oBAUd,IAAI,SAAS;;oBATjB,IAAI,YAAY,KAAK,gBAAgB;oBACrC,KAAK,qBAAqB,QAAQ,CAAC;oBACnC,OAAO,KAAK,mBAAmB,qBAAqB,KAAK,KAAK,KAAK,gBAAe,SAAO,YAAM;;wBAE3F,OAAK,qBAAqB,QAAQ;uBACnC,KAAK,YAAM;wBACV,OAAK,eAAe,YAAY,UAAU,YAAY,gBAAgB;;;;;eAgB3E;gBACC,KAAK;gBACL,OAbgB,SAAA,qBAAC,QAAQ,WAAW;oBACpC,IAAI,WAAW;wBACX,KAAK,eAAe,KAAK;2BACtB;wBACH,KAAK,eAAe,OAAO,KAAK,eAAe,QAAQ,SAAS;;;eAgBrE;gBACC,KAAK;gBACL,OAdW,SAAA,gBAAC,QAAQ;oBACpB,OAAO,KAAK,eAAe,SAAS;;;;YAkBxC,OArEc;;;KAuDrB","file":"ovpApp/settings/stb-parentalControls/stb-allowedRatings.js","sourcesContent":["(() => {\n    'use strict';\n\n    angular.module('ovpApp.settings.stb.parentalControls.allowedRatings', [\n        'ovpApp.directives.dropdownList',\n        'ovpApp.services.stbSettingsService',\n        'ovpApp.directives.arrowNav',\n        'ovpApp.services.parentalControlsService'])\n    .component('stbAllowedRatings', {\n        templateUrl: '/js/ovpApp/settings/stb-parentalControls/stb-allowedRatings.html',\n        bindings: {\n            'stb': '<',\n            'blockedRatings': '<',\n            'ratings': '<'\n        },\n        controller: class StbAllowedRatingsController {\n            /* @ngInject */\n            constructor(StbSettingsService, parentalControlsService) {\n                angular.extend(this, {StbSettingsService, parentalControlsService});\n            }\n\n            $onInit() {\n                this.alertmessage = '';\n                this.ratingTypes = [{\n                    id: 'tvRatings',\n                    name: 'TV ratings'\n                }, {\n                    id: 'movieRatings',\n                    name: 'movie ratings'\n                }];\n                this.blockedRatings = this.blockedRatings || [];\n\n                this.separatedRatings = {\n                    tvRatings: [],\n                    movieRatings: []\n                };\n                this.ratings.forEach(rating => {\n                    if (this.parentalControlsService.isMovieRating(rating.toUpperCase())) {\n                        this.separatedRatings.movieRatings.push(rating);\n                    } else {\n                        this.separatedRatings.tvRatings.push(rating);\n                    }\n                });\n            }\n\n            ratingClicked(rating) {\n                let isBlocked = this.isRatingBlocked(rating);\n                this.updateBlockedRatings(rating, !isBlocked);\n                return this.StbSettingsService.updateBlockedRatings(this.stb, this.blockedRatings).catch(() => {\n                    // Revert changes\n                    this.updateBlockedRatings(rating, isBlocked);\n                }).then(() => {\n                    this.alertmessage = 'Rating ' + rating + (isBlocked ? ', unblocked' : ', blocked');\n                });\n            }\n\n            /* Private method */\n            updateBlockedRatings(rating, isBlocked) {\n                if (isBlocked) {\n                    this.blockedRatings.push(rating);\n                } else {\n                    this.blockedRatings.splice(this.blockedRatings.indexOf(rating), 1);\n                }\n            }\n\n            isRatingBlocked(rating) {\n                return this.blockedRatings.includes(rating);\n            }\n        }\n    });\n})();\n"],"sourceRoot":"/source/"}