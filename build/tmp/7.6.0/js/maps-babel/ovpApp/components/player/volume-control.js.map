{"version":3,"sources":["ovpApp/components/player/volume-control.js"],"names":[],"mappings":"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","file":"ovpApp/components/player/volume-control.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular\n    .module('ovpApp.playerControls')\n    .component('volumeControl', {\n        bindings: {\n            player: '<',\n            enlargeIcon: '='\n        },\n        templateUrl: '/js/ovpApp/components/player/volume-control.html',\n        controller: class VolumeControl {\n            constructor(version, ovpStorage, createObservableFunction, $rootScope,\n                windowFocus, globalKeydown, keyMap, playerService) {\n                angular.extend(this, {version, ovpStorage, createObservableFunction, $rootScope,\n                    windowFocus, globalKeydown, keyMap, playerService});\n            }\n\n            $onInit() {\n                this.onFocus = this.createObservableFunction();\n                this.onBlur = this.createObservableFunction();\n                this.onMouseOver = this.createObservableFunction();\n                this.onMouseLeave = this.createObservableFunction();\n                this.sliderVisible = false;\n                this.sliderFocussed = false;\n                this.imagePath = '/' + this.version.appVersion;\n                this.isMouseOver = false;\n                this.isMuted = this.player.isMuted();\n                this.volume = this.isMuted ? 0 : this.getVolume();\n\n                this.onMouseOver.subscribe(() => this.isMouseOver = true);\n                this.onMouseLeave.subscribe(() => this.isMouseOver = false);\n\n                let enterSource = this.onFocus\n                    .filter(() => !this.windowFocus.windowJustGotFocus())\n                    .merge(this.onMouseOver);\n                let exitSource = this.onBlur.merge(this.onMouseLeave);\n\n                enterSource.subscribe(() => {\n                    this.sliderVisible = true;\n                    exitSource.delay(500)\n                        .takeUntil(enterSource)\n                        .subscribe(() => {\n                            this.sliderVisible = false;\n                            this.$rootScope.$apply();\n                        });\n                });\n\n                let focusSlider = this.onFocus.filter(([val]) => val === 'slider').map(() => true);\n                let blurSlider = this.onBlur.filter(([val]) => val === 'slider').map(() => false);\n                focusSlider.merge(blurSlider)\n                    .subscribe(val => this.sliderFocussed = val);\n\n                this.keydownHandler = this.globalKeydown.observable\n                    // Ignore key events if not playing video\n                    .filter(event => this.playerService.isValidPlayRoute() && this.keyMap[event.keyCode] === 'm' &&\n                        !(event.ctrlKey || event.shiftKey || event.altKey || event.metaKey))\n                    .subscribe(() => this.toggleMute());\n            }\n\n            $onDestroy() {\n                this.keydownHandler.dispose();\n            }\n\n            onVolumeChange() {\n                this.adjustVolume(this.volume);\n            }\n\n            toggleMute() {\n                if (this.player.isMuted()) {\n                    this.player.setMuted(false);\n                    // Reset volume\n                    this.volume = this.getVolume() || 40; // default volume\n                    this.adjustVolume(this.volume, false);\n                } else {\n                    this.player.setMuted(true);\n                    this.volume = 0;\n                }\n                this.isMuted = this.player.isMuted();\n            }\n\n            onPlaybackStarted() {\n                this.volume = this.isMuted ? 0 : this.getVolume();\n            }\n\n            image() {\n                let volumeImage;\n                if (this.isMuted || this.volume === 0) {\n                    volumeImage = '/images/volume-mute';\n                } else {\n                    volumeImage = '/images/volume';\n                }\n\n                volumeImage = volumeImage + (this.enlargeIcon ? '-enlarge' : '');\n\n                return this.imagePath + volumeImage + (this.isMouseOver ? '-active.svg' : '.svg');\n            }\n\n            adjustVolume(volume, toggleMute=true) {\n                volume = parseInt(volume);\n                this.player.setVolume(volume / 100);\n                // Toggle mute\n                if (toggleMute && (this.isMuted && volume > 0) || (!this.isMuted && volume === 0)) {\n                    this.toggleMute();\n                }\n            }\n\n            getVolume() {\n                let volumeLevel = this.player.getVolume();\n                if (volumeLevel !== undefined && !isNaN(volumeLevel)) {\n                    volumeLevel = 1 * volumeLevel;\n                } else {\n                    volumeLevel = 0.4;\n                }\n\n                return parseFloat(volumeLevel * 100);\n            }\n        }\n    });\n})();\n"],"sourceRoot":"/source/"}