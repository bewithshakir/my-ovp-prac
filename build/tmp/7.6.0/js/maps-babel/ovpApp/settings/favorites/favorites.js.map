{"version":3,"sources":["ovpApp/settings/favorites/favorites.js"],"names":[],"mappings":"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","file":"ovpApp/settings/favorites/favorites.js","sourcesContent":["(function () {\n    'use strict';\n    angular.module('ovpApp.settings.favorites', [\n        'ovpApp.settings.favoriteCard',\n        'ovpApp.services.epgsService',\n        'ovpApp.services.favoritesService',\n        'ovpApp.config',\n        'ovpApp.directives.arrowNav',\n        'ovpApp.services.profileService'\n        ])\n    .component('favorites', {\n        bindings: {\n            channels: '<'\n        },\n        templateUrl: '/js/ovpApp/settings/favorites/favorites.html',\n        controller: class FavoritesController {\n            /* @ngInject */\n            constructor($scope, epgsService, $window, $element,\n                    favoritesService, profileService, config, $q, $rootScope, $state, $timeout) {\n                angular.extend(this, {\n                    $scope, epgsService, $window, $element,\n                    favoritesService, profileService, config, $q, $rootScope, $state, $timeout\n                });\n            }\n\n            $onInit() {\n                this.isSpecU = this.profileService.isSpecU();\n                this.callSignFilter = null;\n                this.searchValue = '';\n                this.$scope.$watch(() => this.searchValue, nv => {\n                    if (nv) {\n                        if (isFinite(nv) && !this.isSpecU) {\n                            this.callSignFilter = null;\n                            this.$timeout(() => this.jumpToChannel(parseInt(nv), 0, false));\n                        } else {\n                            this.callSignFilter = new RegExp(nv, 'i');\n                        }\n                    } else {\n                        this.callSignFilter = null;\n                    }\n                    this.onFilterChanged();\n                });\n\n                this.$rootScope.$broadcast('pageChangeComplete', this.$state.current);\n            }\n\n            $postLink() {\n                // To improve load performance, we start by displaying only the channels that will be on screen\n                const cardWidth = 300;\n                const cardHeight = 70;\n                const container = this.$element.find('#favoritesListContent');\n                const perRow = Math.max(1, Math.floor(container.width() / cardWidth));\n                // The container doesn't have a height until it has contents, so we approximate by using the\n                //   window height. this will result in a couple extra rows, but is close enough\n                const rows = Math.ceil(this.$window.innerHeight / cardHeight);\n                this.limit = rows * perRow;\n                this.onFilterChanged();\n                this.$timeout().then(() => {\n                    this.limit = undefined;\n                    this.onFilterChanged();\n                });\n            }\n            sortFilter(a, b, isSpecU) {\n                if (!isSpecU) {\n                    return a.channelNumber - b.channelNumber;\n                } else {\n                    return a.networkName < b.networkName ? -1 : 1;\n                }\n            }\n            onFilterChanged() {\n                this.filteredChannels = this.channels\n                    .filter((channel) => !this.callSignFilter || channel.callSign.match(this.callSignFilter))\n                    .sort((a, b) => this.sortFilter(a, b, this.isSpecU));\n                if (this.limit !== undefined) {\n                    this.filteredChannels = this.filteredChannels.slice(0, this.limit);\n                }\n            }\n\n            isEntitled(channel) {\n                return channel.twcTvEntitled;\n            }\n\n            jumpToChannel(searchVal) {\n                var channel = 0,\n                    scrollTo = 0,\n                    scrollAt = angular.element('body').scrollTop(),\n                    domBlock;\n\n                if (!isNaN(searchVal)) {\n                    // find the nearest channel without going over\n                    let diff = searchVal;\n                    for (let i = 0; i < this.channels.length; i = i + 1) {\n                        let chnl = this.channels[i].channelNumber || 0,\n                            newDiff = searchVal - chnl;\n                        if (newDiff >= 0 && newDiff <= diff) {\n                            channel = chnl;\n                            diff = newDiff;\n                        }\n                        if (newDiff === 0) {\n                            break; // channel found\n                        }\n                    }\n\n                    if (channel > 0) {\n                        domBlock = this.$window.document.querySelector('#channel' + channel);\n                        if (domBlock) {\n                            scrollTo = domBlock.offsetTop;\n\n                            if (scrollTo < 0) {\n                                // scroll up\n                                scrollTo += scrollAt;\n                            }\n\n                            angular.element('html, body').animate({\n                                scrollTop:  scrollTo\n                            }, 600, 'swing', function () {\n                                domBlock.focus();\n                            });\n                        }\n                    }\n                }\n            }\n\n            cancelSearch() {\n                this.searchValue = '';\n            }\n        }\n    });\n}());\n"],"sourceRoot":"/source/"}