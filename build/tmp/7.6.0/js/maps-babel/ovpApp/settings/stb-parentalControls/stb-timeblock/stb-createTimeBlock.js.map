{"version":3,"sources":["ovpApp/settings/stb-parentalControls/stb-timeblock/stb-createTimeBlock.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,CAAC,YAAY,EAAE,SAAS,iBAAiB,QAAQ,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,aAAa,MAAM,IAAI,WAAW,aAAa,WAAW,cAAc,OAAO,WAAW,eAAe,MAAM,IAAI,WAAW,YAAY,WAAW,WAAW,MAAM,OAAO,eAAe,QAAQ,WAAW,KAAK,iBAAiB,OAAO,UAAU,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,iBAAiB,YAAY,WAAW,aAAa,IAAI,aAAa,iBAAiB,aAAa,cAAc,OAAO;;AAEjiB,SAAS,gBAAgB,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;AAJhH,CAAC,YAAM;IACH;;IAEA,QAAQ,OAAO,yDAAyD,CACpE,sCACA,kCACA,2BACA,kBAEH,SAAS,kBAAkB,CACxB,YACA,YACA,gBACA,iBACA,mBACA,kBACA,gBACA,kBACA,iBAEH,UAAU,sBAAsB;QAC7B,aAAa;QACb,UAAU;YACN,SAAS;YACT,eAAe;;QAEnB,YAAU,CAAA,YAAA;;;;YAEK,SAFG,mBAEF,oBAAoB,gBAAgB,QAAQ;gBATpD,gBAAgB,MAON;;gBAGV,QAAQ,OAAO,MAAM,EAAC,oBAAA,oBAAoB,gBAAA,gBAAgB,QAAA;;;YAL9D,aAEc,oBAAkB,CAAA;gBAD5B,KAAK;gBACL,OAMG,SAAA,UAAG;oBALF,IAAI,QAAQ;;oBAMhB,KAAK,MAAM,KAAK,QAAQ;oBACxB,KAAK,OAAO,KAAK,eAAe,IAAI,UAAA,KAAO;wBACvC,OAAO;4BACH,MAAM;;;;oBAId,KAAK,cAAc,KAAK,gBACpB,MAAM,KAAK,IAAI,MAAM,KAAK,UAAC,KAAK,OAAU;wBACtC,IAAI,OAAO,MAAK,SAAS,QAAQ,OAAO,IAAI,OAAO;wBACnD,OAAO;4BACH,MAAM;4BACN,MAAM,KAAK,OAAO;;;;;oBAK9B,KAAK,MAAM,KAAK,KAAK,GAAG;oBACxB,KAAK,YAAY,KAAK,cAAc,GAAG;oBACvC,KAAK,UAAU,KAAK,YAAY,GAAG;;;oBAGnC,KAAK,oBAAoB;wBACrB,aAAa;wBACb,UAAU,SAAA,SAAC,KAAQ;4BACf,MAAK,MAAM,IAAI;;wBAEnB,aAAa;wBACb,aAAa;;oBAEjB,KAAK,0BAA0B;wBAC3B,aAAa;wBACb,UAAU,SAAA,SAAC,WAAc;4BACrB,MAAK,YAAY,UAAU;;wBAE/B,aAAa;;oBAEjB,KAAK,wBAAwB;wBACzB,aAAa;wBACb,UAAU,SAAA,SAAC,SAAY;4BACnB,MAAK,UAAU,QAAQ;;wBAE3B,aAAa;;;eAFlB;gBACC,KAAK;gBACL,OAIE,SAAA,SAAG;oBAHD,IAAI,SAAS;;oBAIjB,IAAI,KAAK,OAAO,KAAK,aAAa,KAAK,SAAS;wBAC5C,KAAK,mBAAmB,gBAAgB;4BACpC,KAAK,KAAK;4BACV,WAAW,KAAK;4BAChB,SAAS,KAAK;2BACf,KAAK,UAAA,QAAU;4BACd,OAAK,cAAc,MAAM;2BAC1B,UAAA,KAAO;4BACN,OAAK,cAAc,QAAQ;;;;eAEpC;gBACC,KAAK;gBACL,OACG,SAAA,UAAG;oBACN,KAAK,cAAc,QAAQ;;;;YAG/B,OAvEc;;;KAwErB","file":"ovpApp/settings/stb-parentalControls/stb-timeblock/stb-createTimeBlock.js","sourcesContent":["(() => {\n    'use strict';\n\n    angular.module('ovpApp.settings.stb.parentalControls.timeBlock.create', [\n        'ovpApp.services.stbSettingsService',\n        'ovpApp.directives.dropdownList',\n        'ovpApp.directives.focus',\n        'angularMoment'\n    ])\n    .constant('TIMEBLOCK_DAYS', [\n        'Weekdays',\n        'Weekends',\n        'Every Monday',\n        'Every Tuesday',\n        'Every Wednesday',\n        'Every Thursday',\n        'Every Friday',\n        'Every Saturday',\n        'Every Sunday'\n    ])\n    .component('stbCreateTimeBlock', {\n        templateUrl: '/js/ovpApp/settings/stb-parentalControls/stb-timeblock/stb-createTimeBlock.html',\n        bindings: {\n            resolve: '<',\n            modalInstance: '<'\n        },\n        controller: class StbCreateTimeBlock {\n            /* @ngInject */\n            constructor(StbSettingsService, TIMEBLOCK_DAYS, moment) {\n                angular.extend(this, {StbSettingsService, TIMEBLOCK_DAYS, moment});\n            }\n\n            $onInit() {\n                this.stb = this.resolve.stb;\n                this.days = this.TIMEBLOCK_DAYS.map(val => {\n                    return {\n                        text: val\n                    };\n                });\n\n                this.endTimeList = this.startTimeList =\n                    Array.from(new Array(24), (val, index) => {\n                        let time = this.moment().startOf('day').add(index, 'hour');\n                        return {\n                            time: time,\n                            text: time.format('LT')\n                        };\n                    });\n\n                // Default values\n                this.day = this.days[0].text;\n                this.startTime = this.startTimeList[0].time;\n                this.endTime = this.endTimeList[0].time;\n\n                // Config\n                this.dayDropdownConfig = {\n                    activeIndex: 0,\n                    onSelect: (day) => {\n                        this.day = day.text;\n                    },\n                    buttonLabel: 'time block day',\n                    focusOnLoad: true\n                };\n                this.startTimeDropdownConfig = {\n                    activeIndex: 0,\n                    onSelect: (startTime) => {\n                        this.startTime = startTime.time;\n                    },\n                    buttonLabel: 'time block start time'\n                };\n                this.endTimeDropdownConfig = {\n                    activeIndex: 0,\n                    onSelect: (endTime) => {\n                        this.endTime = endTime.time;\n                    },\n                    buttonLabel: 'time block end time'\n                };\n            }\n\n            onSave() {\n                if (this.day && this.startTime && this.endTime) {\n                    this.StbSettingsService.createTimeBlock({\n                        day: this.day,\n                        startTime: this.startTime,\n                        endTime: this.endTime\n                    }).then(result => {\n                        this.modalInstance.close(result);\n                    }, err => {\n                        this.modalInstance.dismiss(err);\n                    });\n                }\n            }\n\n            onClose() {\n                this.modalInstance.dismiss(null);\n            }\n        }\n    });\n})();\n"],"sourceRoot":"/source/"}