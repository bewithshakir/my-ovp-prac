{"version":3,"sources":["ovpApp/search/result-pages/quick-search-results.js"],"names":[],"mappings":"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","file":"ovpApp/search/result-pages/quick-search-results.js","sourcesContent":["(() => {\n    'use strict';\n    angular.module('ovpApp.search.quickResults', [\n            'ovpApp.search.searchService',\n            'ovpApp.config',\n            'ovpApp.filters.titleCase',\n            'ovpApp.filters.toTrusted',\n            'ui.router'\n        ])\n        .constant('columns', 4) // unit tests override this\n        .component('quickSearchResults', {\n            templateUrl: '/js/ovpApp/search/result-pages/quick-search-results.html',\n            bindings: {\n                results: '<',\n                query: '<'\n            },\n            controller: class QuickSearchResultsController {\n                /* @ngInject */\n                constructor(searchService, columns, $state, config, $controller, $scope, $element, $rootScope) {\n                    angular.extend(this, {\n                        searchService,\n                        columns,\n                        $state,\n                        config,\n                        $controller,\n                        $scope,\n                        $element,\n                        $rootScope\n                    });\n                }\n\n                $onInit() {\n                    this.limit = this.config.search.quickResultsPerColumn;\n\n                    this.layout = {\n                        categories: []\n                    };\n\n                    this.priorities = ['title'];\n\n                    this.calculateLayout();\n\n                    this.$rootScope.$broadcast('pageChangeComplete', this.$state.current);\n                }\n\n                calculateLayout() {\n                    this.layout = {\n                        categories: []\n                    };\n                    if (!this.results || !this.results.categories) {\n                        return;\n                    }\n\n                    // Every category gets at least one column, but if we aren't filling up\n                    // the width, we can allocate additional columns to some categories\n                    var categories = this.results.categories,\n                        target = Math.ceil(categories.length / this.columns) * this.columns,\n                        shortfall = target - categories.length,\n                        recipient;\n\n                    categories.forEach(function (category) {\n                        category.columns = 1;\n                        this.layout.categories.push(category);\n                    }.bind(this));\n\n                    while (shortfall > 0) {\n                        recipient = this.getColumnRecipient(categories);\n                        if (!recipient) {\n                            // Everything has as many columns as it can use\n                            break;\n                        } else {\n                            recipient.columns++;\n                            shortfall--;\n                        }\n                    }\n\n                    categories.forEach(function (category) {\n                        category.class = 'search-results-group col-' + category.columns;\n                        category.resultsToshow = Math.min(category.numResults, (this.limit * category.columns));\n                    }.bind(this));\n                }\n\n                getColumnRecipient(categories) {\n                    return this.byPriority(categories) || this.byNeed(categories);\n                }\n\n                byPriority(categories) {\n                    var i, p, bestp = Number.MAX_VALUE, recipient;\n                    for (i = 0; i < categories.length; i++) {\n                        p = this.priorities.indexOf(categories[i].title.toLowerCase());\n                        if (p > -1 && p < bestp && this.canExpand(categories[i])) {\n                            recipient = categories[i];\n                            bestp = p;\n                        }\n                    }\n                    return recipient;\n                }\n\n                byNeed(categories) {\n                    var i, score, highscore = 0, recipient;\n                    for (i = 0; i < categories.length; i++) {\n                        if (this.canExpand(categories[i])) {\n                            score = this.need(categories[i]);\n                        } else {\n                            score = 0; // don't expand a category that is at the max\n                        }\n\n                        if (score > highscore) {\n                            highscore = score;\n                            recipient = categories[i];\n                        }\n                    }\n\n                    return recipient;\n                }\n\n                need(category) {\n                    return category.numResults - (category.columns * this.limit);\n                }\n\n                canExpand(category) {\n                    return (this.need(category) > 0 && category.columns < this.columns);\n                }\n\n                click(item) {\n                    this.$rootScope.$emit('Analytics:search-select-item', {\n                        asset: item,\n                        generateSelectContent: true\n                    });\n                    let route = item.clickRoute;\n                    if (route) {\n                        if (route[0] && route[0].startsWith('search.results')) {\n                            route[1] = route[1] || {};\n                            route[1].focusOnLoad = true;\n                        }\n                        this.$state.go(...route);\n                    }\n                }\n\n                //isCategory {boolean} indicates that the key down was on the category\n                onKeydown(event, category, index, isCategory) {\n\n                    let categories = this.layout.categories,\n                        searchCategoryElements = this.$element.find('.' + category.class.split(' ')[0]),\n                        keys = {left: 37, up: 38, right: 39, down: 40, tab: 9},\n                        currentCategoryIndex = categories.map(function (e) {\n                                                    return e.title;\n                                                }).indexOf(category.title),\n                        elementToFocus;\n\n                    if (event.keyCode === keys.tab) {\n                        searchCategoryElements[currentCategoryIndex].focus();\n                        // Deliberately let the key event bubble up so that it can move to the next category\n                    }\n\n                    if (!isCategory) {\n                        //key down happened on the item\n                        if (event.keyCode === keys.down || event.keyCode === keys.right) {\n                            if (index + 1 !== this.limit * category.columns) {\n                                elementToFocus  = angular.element(searchCategoryElements[currentCategoryIndex])\n                                                    .find('.search-result')[index + 1];\n                            } else {\n                                elementToFocus  = angular.element(searchCategoryElements[currentCategoryIndex])\n                                                    .find('.search-result')[0];\n                            }\n                        } else if (event.keyCode === keys.up || event.keyCode === keys.left) {\n                            if (index !== 0) {\n                                elementToFocus  = angular.element(searchCategoryElements[currentCategoryIndex])\n                                                    .find('.search-result')[index - 1];\n                            }\n                        }\n                    } else if (isCategory) {\n                        //From the category we need to move to the first element.\n                        if (event.keyCode === keys.down || event.keyCode === keys.right) {\n                            elementToFocus  = angular.element(searchCategoryElements[currentCategoryIndex])\n                                                .find('.search-result')[0];\n                        }\n                    }\n                    if (elementToFocus) {\n                        event.preventDefault();\n                        elementToFocus.focus();\n                        //We found something and set focus. Let us not propagate this key\n                        event.stopPropagation();\n                    }\n                }\n            }\n        });\n})();\n"],"sourceRoot":"/source/"}