{"version":3,"sources":["ovpApp/components/player/toggle-cc-settings.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,CAAC,YAAY,EAAE,SAAS,iBAAiB,QAAQ,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,aAAa,MAAM,IAAI,WAAW,aAAa,WAAW,cAAc,OAAO,WAAW,eAAe,MAAM,IAAI,WAAW,YAAY,WAAW,WAAW,MAAM,OAAO,eAAe,QAAQ,WAAW,KAAK,iBAAiB,OAAO,UAAU,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,iBAAiB,YAAY,WAAW,aAAa,IAAI,aAAa,iBAAiB,aAAa,cAAc,OAAO;;AAEjiB,SAAS,gBAAgB,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;AAJhH,CAAC,YAAM;IACH;;IAEA,QAAQ,OAAO,yBACV,UAAU,oBAAoB;QAC3B,aAAa;QACb,UAAU;YACN,QAAQ;;QAEZ,YAAU,CAAA,YAAA;;;;YAEK,SAFG,2BAEF,YAAY,SAAS,OAAO;gBAOxC,gBAAgB,MATF;;gBAGV,QAAQ,OAAO,MAAM;oBACjB,YAAA;oBACA,SAAA;oBACA,OAAA;;;;YAYZ,aAlBkB,4BAA0B,CAAA;gBAmBxC,KAAK;gBACL,OAVO,SAAA,UAAG;oBAWN,IAAI,QAAQ;;oBAVZ,KAAK,UAAU;;oBAEf,KAAK,sBAAsB;wBACvB,oBAAoB,SAAA,kBAAA;4BAahB,OAbsB,MAAK;;;oBAEnC,KAAK,4BAA4B,KAAK,WAAW,IAAI,uBAAuB,UAAC,OAAO,MAAS;wBACzF,MAAK,OAAO,cAAc;;oBAE9B,KAAK;;eAgBV;gBACC,KAAK;gBACL,OAfU,SAAA,aAAG;oBACT,IAAI,KAAK,2BAA2B;wBAChC,KAAK;;;oBAGT,KAAK,IAAI,OAAO,KAAK,qBAAqB;wBACtC,IAAI,KAAK,oBAAoB,eAAe,MAAM;4BAC9C,KAAK,OAAO,IAAI,KAAK,KAAK,oBAAoB;;;;eAmB3D;gBACC,KAAK;gBACL,OAhBoB,SAAA,uBAAG;oBACnB,KAAK,IAAI,OAAO,KAAK,qBAAqB;wBACtC,IAAI,KAAK,oBAAoB,eAAe,MAAM;4BAC9C,KAAK,OAAO,GAAG,KAAK,KAAK,oBAAoB;;;;eAoB1D;gBACC,KAAK;gBACL,OAjBiB,SAAA,oBAAG;oBAkBhB,IAAI,SAAS;;oBAjBb,KAAK,4BAA4B,KAAK,WAAW,IAAI,uBAAuB,UAAC,OAAO,MAAS;wBACzF,OAAK,OAAO,cAAc;;;eAsBnC;gBACC,KAAK;gBACL,OApBc,SAAA,iBAAG;oBACb,KAAK,MAAM,KAAK;wBACZ,WAAW;wBACX,aAAa;wBACb,iBAAiB;wBACjB,gBAAgB;wBAChB,eAAe;;;oBAGnB,KAAK,OAAO,aAAa;;eAsB9B;gBACC,KAAK;gBACL,OArBe,SAAA,kBAAG;oBACd,IAAI,KAAK,WAAW,KAAK,qBAAqB;wBAC1C,OAAO,KAAK,QAAQ,aAAa;2BAC9B;wBACH,OAAO,KAAK,QAAQ,aAAa;;;;;YA0B7C,OA1FkB;;;KAqEzB","file":"ovpApp/components/player/toggle-cc-settings.js","sourcesContent":["(() => {\n    'use strict';\n\n    angular.module('ovpApp.playerControls')\n        .component('toggleCcSettings', {\n            templateUrl: '/js/ovpApp/components/player/toggle-cc-settings.html',\n            bindings: {\n                player: '<'\n            },\n            controller: class ToggleCCSettingsController {\n                /*  @ngInject */\n                constructor($rootScope, version, modal) {\n                    angular.extend(this, {\n                        $rootScope,\n                        version,\n                        modal\n                    });\n                }\n\n                $onInit() {\n                    this.hovered = false;\n\n                    this.playerSubscriptions = {\n                        'playback-started': () => this.onPlaybackStarted()\n                    };\n                    this.ccSettingsChangedListener = this.$rootScope.$on('cc-settings-changed', (event, data) => {\n                        this.player.setCCSettings(data);\n                    });\n                    this.registerPlayerEvents();\n                }\n\n                $onDestroy() {\n                    if (this.ccSettingsChangedListener) {\n                        this.ccSettingsChangedListener();\n                    }\n\n                    for (let key in this.playerSubscriptions) {\n                        if (this.playerSubscriptions.hasOwnProperty(key)) {\n                            this.player.off(key, this.playerSubscriptions[key]);\n                        }\n                    }\n                }\n\n                registerPlayerEvents() {\n                    for (let key in this.playerSubscriptions) {\n                        if (this.playerSubscriptions.hasOwnProperty(key)) {\n                            this.player.on(key, this.playerSubscriptions[key]);\n                        }\n                    }\n                }\n\n                onPlaybackStarted() {\n                    this.ccSettingsChangedListener = this.$rootScope.$on('cc-settings-changed', (event, data) => {\n                        this.player.setCCSettings(data);\n                    });\n                }\n\n                showCCSettings() {\n                    this.modal.open({\n                        component: 'ovp-caption-settings',\n                        windowClass: 'ovp-player-caption-settings',\n                        ariaDescribedBy: 'descriptionBlockText cc-text-color-button',\n                        ariaLabelledBy: 'labelText',\n                        showCloseIcon: false\n                    });\n                    // Enable CC\n                    this.player.setCCEnabled(true);\n                }\n\n                ccSettingsImage() {\n                    if (this.hovered || this.isCCSettingsVisible) {\n                        return this.version.appVersion + '/images/settings-active.svg';\n                    } else {\n                        return this.version.appVersion + '/images/settings.svg';\n                    }\n                }\n            }\n        });\n})();\n"],"sourceRoot":"/source/"}