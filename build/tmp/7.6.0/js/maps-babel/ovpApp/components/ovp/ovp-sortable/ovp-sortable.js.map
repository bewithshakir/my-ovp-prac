{"version":3,"sources":["ovpApp/components/ovp/ovp-sortable/ovp-sortable.js"],"names":[],"mappings":"AAAA;;AAAC,CAAA,YAAY;IACT;;IAEA,QAAQ,OAAO,kCAAkC,IAC5C,UAAU,eAAe,aACzB,UAAU,qBAAqB;;;IAGpC,SAAS,cAAc;QACnB,OAAO;YACH,UAAU;YACV,OAAO;gBACH,aAAa;;YAEjB,SAAS,SAAA,UAAY;gBACjB,OAAO,SAAS,eAAe,OAAO,MAAM;;oBAExC,IAAI;;oBAEJ,KAAK,SAAS;;;;oBAId,KAAK,SAAS;wBACV,aAAa;wBACb,MAAM;wBACN,UAAU;wBACV,OAAO;wBACP,WAAW;wBACX,aAAa;wBACb,mBAAmB;wBACnB,aAAa;;;wBAGb,QAAQ,SAAA,OAAU,OAAO,IAAI;4BACzB,GAAG,OAAO,aAAa,GAAG;;wBAE9B,OAAO,SAAA,QAAY;4BACf,YAAY,KAAK,KAAK,uCAAuC;;wBAEjE,MAAM,SAAA,KAAU,OAAO,IAAI;4BACvB,IAAI,WAAW,KAAK,KAAK,uCAAuC;gCAC5D,cAAc;gCACd;gCACA;gCAAG;;4BAEP,KAAK,IAAI,GAAG,SAAS,UAAU,QAAQ,IAAI,QAAQ,KAAK;gCACpD,IAAI,UAAU,OAAO,SAAS,IAAI;oCAC9B,cAAc;oCACd;;;;4BAIR,IAAI,aAAa;;gCAEb,cAAc;;gCAEd,QAAQ,QAAQ,UAAU,UAAU,aAAa;oCAC7C,YAAY,KAAK,MAAM,YAAY,UAAU,QAAQ;;;;gCAIzD,MAAM,YAAY,OAAO,GAAG,MAAM,YAAY;gCAC9C,MAAM;;;gCAGN,MAAM,UAAU,KAAK,MAAM,MAAM,aAAa;gCAC9C,MAAM;;gCAEN,MAAM,MAAM,6BAA6B;oCACrC,SAAS,GAAG,SAAS,MAAM,GAAG,iBAAiB;;;;;;;;;;;IAY/E,SAAS,oBAAoB;QACzB,OAAO;YACH,UAAU;YACV,aAAa;;;KAGpB","file":"ovpApp/components/ovp/ovp-sortable/ovp-sortable.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular.module('ovpApp.components.ovp.sortable', [])\n        .directive('ovpSortable', ovpSortable)\n        .directive('ovpSortableHandle', ovpSortableHandle);\n\n    /* @ngInject */\n    function ovpSortable() {\n        return {\n            restrict: 'A',\n            scope: {\n                ovpSortable: '=ovpSortable'\n            },\n            compile: function () {\n                return function ngEventHandler(scope, elem) {\n\n                    var startList;\n\n                    elem.addClass('ovp-sortable');\n\n                    // Utilizes jQuery UI 'sortable'\n                    // jquery-ui-1.8.16.custom.min.js\n                    elem.sortable({\n                        containment: elem,\n                        axis: 'y',\n                        distance: 1,\n                        items: '> li',\n                        tolerance: 'pointer',\n                        placeholder: 'ovp-sortable-placeholder',\n                        scrollSensitivity: 150,\n                        scrollSpeed: 100,\n                        // move the helper before the\n                        // placeholder for the CSS counter\n                        change: function (event, ui) {\n                            ui.helper.insertBefore(ui.placeholder);\n                        },\n                        start: function () {\n                            startList = elem.find('> :not(li.ovp-sortable-placeholder)').toArray();\n                        },\n                        stop: function (event, ui) {\n                            var stopList = elem.find('> :not(li.ovp-sortable-placeholder)').toArray(),\n                                listChanged = false,\n                                newSortable,\n                                i, length;\n\n                            for (i = 0, length = startList.length; i < length; i++) {\n                                if (startList[i] !== stopList[i]) {\n                                    listChanged = true;\n                                    break;\n                                }\n                            }\n\n                            if (listChanged) {\n\n                                newSortable = [];\n\n                                angular.forEach(stopList, function (listElement) {\n                                    newSortable.push(scope.ovpSortable[startList.indexOf(listElement)]);\n                                });\n\n                                // Remove every item from the list and update angular\n                                scope.ovpSortable.splice(0, scope.ovpSortable.length);\n                                scope.$apply();\n\n                                // Add the new order to the list and update angular\n                                Array.prototype.push.apply(scope.ovpSortable, newSortable);\n                                scope.$apply();\n\n                                scope.$emit('ovp-sortable:order-change', {\n                                    movedUp: ui.position.top < ui.originalPosition.top\n                                });\n                            }\n                        }\n                    });\n\n                };\n            }\n        };\n    }\n\n    /* @ngInject */\n    function ovpSortableHandle() {\n        return {\n            restrict: 'E',\n            templateUrl: '/js/ovpApp/components/ovp/ovp-sortable/ovp-sortable-handle.html'\n        };\n    }\n}());\n"],"sourceRoot":"/source/"}