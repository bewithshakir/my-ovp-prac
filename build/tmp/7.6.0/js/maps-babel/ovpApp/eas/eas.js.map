{"version":3,"sources":["ovpApp/eas/eas.js"],"names":[],"mappings":"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","file":"ovpApp/eas/eas.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular.module('ovpApp.eas', [\n        'ngAudio',\n        'ovpApp.directives.svgPath',\n        'ovpApp.service.vpns',\n        'selectn'\n    ])\n    .component('eas', {\n        templateUrl: '/js/ovpApp/eas/eas.html',\n        controller: class EasController {\n            constructor ($rootScope, $http, selectn, $state, $timeout, ngAudio, $element, $window, vpnsService) {\n                angular.extend(this, {\n                    $rootScope,\n                    $http,\n                    selectn,\n                    $state,\n                    $timeout,\n                    ngAudio,\n                    $element,\n                    $window,\n                    vpnsService //Required to start\n                });\n            }\n            $onInit () {\n                this.easData = {};\n                this.crawlSpeed = 15;\n                this.vpnsListener = this.$rootScope.$on('VpnsAlert', (event, data) => {\n                    this.$http({\n                        url: data.SecureContent.Location\n                    }).then(this.easDataCallback.bind(this));\n                });\n            }\n\n            $onDestroy () {\n                this.vpnsListener();\n            }\n\n            exit () {\n                if (this.easTimer) {\n                    this.$timeout.cancel(this.easTimer);\n                    this.easTimer = null;\n                    this.clearEASMessage('user');\n                }\n            }\n\n            easDataCallback (response) {\n                if ('EAN' === this.selectn('info.eventCode.value', response.data)) {\n                    let eanData = this.readEANData(response.data);\n                    if (eanData.mediaUrl) {\n                        if (this.$state.current.name === 'ovp.livetv') {\n                            this.$rootScope.$emit('EAN:start', {'eanUrl': eanData.mediaUrl});\n                        } else {\n                            this.$state.go('ovp.livetv', {'eanUrl': eanData.mediaUrl});\n                        }\n                    }\n                } else {\n                    // Clear previous message\n                    if (this.easTimer) {\n                        this.$timeout.cancel(this.easTimer);\n                        this.clearEASMessage('user');\n                    }\n\n                    this.easData = this.readEASData(response.data);\n                    this.easAudio = this.ngAudio.play(this.easData.audioUri);\n                    this.easAudio.loop = true;\n\n                    this.$rootScope.$broadcast('player:minimize', this.easData);\n                    this.$rootScope.$broadcast('EAS:start', this.easData);\n\n                    this.$timeout(() => {\n                        let crawlElement = this.$element.find('.crawl');\n                        let msgWidth = crawlElement.width();\n                        let fontSize = this.$window.getComputedStyle(crawlElement[0], null)\n                            .getPropertyValue('font-size');\n                        this.crawlSpeed = parseInt(msgWidth / (parseInt(fontSize, 10) * 3), 10);\n                    }, 0); // Update animation speed\n                    this.easTimer = this.$timeout(() => {\n                        this.easTimer = null;\n                        this.clearEASMessage('application');\n                    }, (2 * 60 * 1000)); // Hide message after 2 minutes\n                }\n            }\n\n            readEASData (easData) {\n                var message = '',\n                    audioUri = '',\n                    effective,\n                    expires,\n                    geocode = []; // fips codes\n\n                if (angular.isString(easData)) {\n                    easData = JSON.parse(easData);\n                }\n\n                if (easData && easData.info) {\n                    // read EAS message\n                    let easInfo = easData.info;\n                    if (easInfo.event) {\n                        message = message + easInfo.event + '...';\n                    }\n                    if (angular.isArray(easInfo.parameter)) {\n                        let easTexts = easInfo.parameter.filter(e => e.valueName == 'EASText');\n                        if (angular.isArray(easTexts)) {\n                            let plucked = easTexts.map(e => e.value);\n                            if (angular.isArray(plucked)) {\n                                message += plucked.join(' ');\n                            }\n                        }\n                    }\n                    // read the FIPS code(s)\n                    if (easInfo.area && easInfo.area.geocode) {\n                        geocode = this.extractFipsCodes(easInfo.area.geocode);\n                    }\n\n                    // read EAS audio resource\n                    if (angular.isArray(easInfo.resource)) {\n                        easInfo.resource.forEach(function (r) {\n                            if (r.uri && r.mimeType &&\n                                r.mimeType.indexOf('audio-mp3') !== -1) {\n                                audioUri = r.uri;\n                            }\n                        });\n                    } else if (angular.isObject(easInfo.resource)) {\n                        if (easInfo.resource.uri && easInfo.resource.mimeType &&\n                            easInfo.resource.mimeType.indexOf('audio-mp3') !== -1) {\n                            audioUri = easInfo.resource.uri;\n                        }\n                    }\n\n                    // read EAS effective\n                    effective = easInfo.effective ? new Date(easInfo.effective) : new Date();\n\n                    // read EAS expiration\n                    expires = easInfo.expires ? new Date(easInfo.expires) : new Date();\n                }\n\n                return {\n                    'message': message,\n                    'audioUri': audioUri,\n                    'effective': effective,\n                    'expires': expires,\n                    'geocode': geocode\n                };\n            }\n\n            clearEASMessage (triggeredBy) {\n                this.easAudio.pause();\n                this.easAudio.unbind();\n                this.easData = {};\n\n                this.$rootScope.$broadcast('EAS:end', triggeredBy);\n            }\n\n            readEANData (eanData) {\n                var mediaUrl,\n                    eanInfo = eanData.info || {},\n                    mimeType = 'video/HLS';\n                // Read EAN video resource\n                if (angular.isArray(eanInfo.resource)) {\n                    eanInfo.resource.forEach(function (r) {\n                        if (r.uri && r.mimeType &&\n                            r.mimeType.indexOf(mimeType) !== -1) {\n                            mediaUrl = r.uri;\n                        }\n                    });\n                } else if (angular.isObject(eanInfo.resource)) {\n                    mediaUrl = this.selectn('resource.uri', eanInfo);\n                }\n\n                return {\n                    'mediaUrl': mediaUrl\n                };\n            }\n\n            extractFipsCodes (geocodes) {\n                return geocodes.map(g => g.value);\n            }\n        }\n    });\n}());\n"],"sourceRoot":"/source/"}