{"version":3,"sources":["ovpApp/components/ovp/ovp-cc-settings/ovp-cc-settings.js"],"names":[],"mappings":"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","file":"ovpApp/components/ovp/ovp-cc-settings/ovp-cc-settings.js","sourcesContent":["(() => {\n    'use strict';\n    angular.module('ovpApp.components.ovp.ccSettings', ['ovpApp.version',\n            'ovpApp.services.ovpStorage',\n            'ui.bootstrap',\n            'ovpApp.directives.dropdownList',\n            'ovpApp.directives.focus',\n            'ovpApp.directives.arrowNav'\n        ])\n        .component('ovpCaptionSettings', {\n            bindings: {\n                modalInstance: '<'\n            },\n            templateUrl: '/js/ovpApp/components/ovp/ovp-cc-settings/ovp-player-cc-settings.html',\n            controller: class CCSettingsController {\n                /* @ngInject */\n                constructor(version, $rootScope, ovpStorage, storageKeys) {\n                    angular.extend(this, {\n                        version,\n                        $rootScope,\n                        ovpStorage,\n                        storageKeys\n                    });\n                }\n\n                $onInit() {\n                    this.ccSettings = {};\n                    this.isVisible = false;\n                    this.appVersion = this.version.appVersion;\n                    this.focus = {}; // Focus option used in template\n                    this.colorOptions = [{\n                        color: '#000000',\n                        index: 0,\n                        name: 'Default'\n                    }, {\n                        color: '#FFFFFF',\n                        index: 1,\n                        name: 'White'\n                    }, {\n                        color: '#000000',\n                        index: 2,\n                        name: 'Black'\n                    }, {\n                        color: '#FF0000',\n                        index: 3,\n                        name: 'Red'\n                    }, {\n                        color: '#008000',\n                        index: 4,\n                        name: 'Green'\n                    }, {\n                        color: '#0000FF',\n                        index: 5,\n                        name: 'Blue'\n                    }, {\n                        color: '#FFFF00',\n                        index: 6,\n                        name: 'Yellow'\n                    }, {\n                        color: '#FF00FF',\n                        index: 7,\n                        name: 'Magenta'\n                    }, {\n                        color: '#00FFFF',\n                        index: 8,\n                        name: 'Cyan'\n                    }];\n\n                    this.textOpacityOptions = [{\n                        text: 'Default',\n                        index: 0\n                    }, {\n                        text: 'Opaque',\n                        index: 1\n                    }, {\n                        text: 'Semitransparent',\n                        index: 2\n                    }];\n\n                    this.fontOptions = [{\n                        text: 'Default',\n                        index: 0\n                    }, {\n                        text: 'Monospaced with serifs',\n                        index: 1\n                    }, {\n                        text: 'Monospaced without serifs',\n                        index: 2\n                    }, {\n                        text: 'Proportional with serifs',\n                        index: 3\n                    }, {\n                        text: 'Proportional without serifs',\n                        index: 4\n                    }, {\n                        text: 'Casual',\n                        index: 5\n                    }, {\n                        text: 'Cursive',\n                        index: 6\n                    }, {\n                        text: 'Small capitals',\n                        index: 7\n                    }];\n\n                    this.fontSizeOptions = [{\n                        text: 'Default',\n                        index: 0\n                    }, {\n                        text: 'Small',\n                        index: 1\n                    }, {\n                        text: 'Medium',\n                        index: 2\n                    }, {\n                        text: 'Large',\n                        index: 3\n                    }];\n\n                    this.fontEdgeOptions = [\n\n                        {\n                            text: 'Default',\n                            index: 0\n                        }, {\n                            text: 'None',\n                            index: 1\n                        }, {\n                            text: 'Raised',\n                            index: 2\n                        }, {\n                            text: 'Depressed',\n                            index: 3\n                        }, {\n                            text: 'Uniform',\n                            index: 4\n                        }, {\n                            text: 'Left drop shadow',\n                            index: 5\n                        }, {\n                            text: 'Right drop shadow',\n                            index: 6\n                        }\n                    ];\n\n                    this.backgroundOpacityOptions = [{\n                        text: 'Default',\n                        index: 0\n                    }, {\n                        text: 'Opaque',\n                        index: 1\n                    }, {\n                        text: 'Semitransparent',\n                        index: 2\n                    }, {\n                        text: 'Transparent',\n                        index: 3\n                    }];\n\n                    this.windowOpacityOptions = [{\n                        text: 'Default',\n                        index: 0\n                    }, {\n                        text: 'Opaque',\n                        index: 1\n                    }, {\n                        text: 'Semitransparent',\n                        index: 2\n                    }, {\n                        text: 'Transparent',\n                        index: 3\n                    }];\n\n                    let ccSettings = this.ovpStorage.getItem(this.storageKeys.ccSettings);\n                    if (ccSettings) {\n                        this.ccSettings = ccSettings;\n                    } else {\n                        this.resetCCSetting();\n                    }\n                    this.initSetterMethods();\n                }\n\n                hide() {\n                    this.modalInstance.dismiss();\n                }\n\n                // ***** Setter methods ******\n                // anonymous function assigned to variable so that we can pass it to child elements\n                // and reference to `this` inside function will point to CCSettingsController\n                initSetterMethods() {\n                    this.setTextOpacity = (option) => {\n                        this.setCCSettings({\n                            textOpacitySelectedIndex: option.index\n                        });\n                    };\n                    this.setFont = (option) => {\n                        this.setCCSettings({\n                            fontSelectedIndex: option.index\n                        });\n                    };\n                    this.setFontSize = (option) => {\n                        this.setCCSettings({\n                            fontSizeSelectedIndex: option.index\n                        });\n                    };\n                    this.setFontEdge = (option) => {\n                        this.setCCSettings({\n                            edgeSelectedIndex: option.index\n                        });\n                    };\n                    this.setBackgroundOpacity = (option) => {\n                        this.setCCSettings({\n                            backgroundOpacitySelectedIndex: option.index\n                        });\n                    };\n                    this.setWindowOpacity = (option) => {\n                        this.setCCSettings({\n                            windowOpacitySelectedIndex: option.index\n                        });\n                    };\n\n                    // Color settings\n                    this.setTextColor = (color) => {\n                        this.setCCSettings({\n                            textColorSelectedIndex: color.index\n                        });\n                    };\n                    this.setBackgroundColor = (color) => {\n                        this.setCCSettings({\n                            backgroundColorSelectedIndex: color.index\n                        });\n                    };\n                    this.setWindowColor = (color) => {\n                        this.setCCSettings({\n                            windowColorSelectedIndex: color.index\n                        });\n                    };\n                }\n\n                // Restore default cc settings value\n                restoreDefault() {\n                    this.resetCCSetting();\n                    this.$rootScope.$broadcast('cc-settings-changed', this.ccSettings);\n                }\n\n                resetCCSetting() {\n                    this.ccSettings = {\n                        backgroundColorSelectedIndex: 0,\n                        backgroundOpacitySelectedIndex: 0,\n                        edgeSelectedIndex: 0,\n                        fontSelectedIndex: 0,\n                        fontSizeSelectedIndex: 0,\n                        textColorSelectedIndex: 0,\n                        textOpacitySelectedIndex: 0,\n                        windowColorSelectedIndex: 0,\n                        windowOpacitySelectedIndex: 0\n                    };\n                }\n\n                setCCSettings(setting) {\n                    angular.merge(this.ccSettings, setting);\n                    this.$rootScope.$broadcast('cc-settings-changed', this.ccSettings);\n                }\n            }\n        });\n})();\n"],"sourceRoot":"/source/"}