{"version":3,"sources":["ovpApp/components/player/toggle-debug.js"],"names":[],"mappings":"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","file":"ovpApp/components/player/toggle-debug.js","sourcesContent":["(() => {\n    'use strict';\n\n    angular.module('ovpApp.playerControls')\n        .component('toggleDebug', {\n            templateUrl: '/js/ovpApp/components/player/toggle-debug.html',\n            bindings: {\n                player: '<'\n            },\n            controller: class ToggleDebugController {\n                /* @ngInject */\n                constructor(dateFormat) {\n                    angular.extend(this, {\n                        dateFormat\n                    });\n                }\n\n                $onInit() {\n                    this.status = {\n                        playbackPosition: '',\n                        playbackStatus: '',\n                        adPlaying: false,\n                        adInfo: '',\n                        eptBookmark: '',\n                        bufferStatus: '',\n                        bitRateStatus: '',\n                        droppedFrameCount: 0,\n                        bufferLength: 0,\n                        bufferTime: 0,\n                        hidden: false\n                    };\n\n                    this.playerSubscriptions = {\n                        'status-changed': (event) => this.onStatusChanged(event),\n                        'player-position-changed': (event) => this.onPlayerPositionChanged(event),\n                        'ad-break-started': () => this.onAdBreakStarted(),\n                        'ad-break-stopped': () => this.onAdBreakStopped(),\n                        'ad-started': () => this.onAdStarted(),\n                        'ad-stopped': () => this.onAdStopped()\n                    };\n                    this.registerPlayerEvents();\n                }\n\n                registerPlayerEvents() {\n                    for (let key in this.playerSubscriptions) {\n                        if (this.playerSubscriptions.hasOwnProperty(key)) {\n                            this.player.on(key, this.playerSubscriptions[key]);\n                        }\n                    }\n                }\n\n                $onDestroy() {\n                    for (let key in this.playerSubscriptions) {\n                        if (this.playerSubscriptions.hasOwnProperty(key)) {\n                            this.player.off(key, this.playerSubscriptions[key]);\n                        }\n                    }\n                }\n\n                onStatusChanged(event) {\n                    this.status.playbackStatus = event.status;\n                }\n                onPlayerPositionChanged(event) {\n                    this.status.playbackPosition = this.dateFormat.hhmmss(event.PlaybackTimestamp / 1000);\n                    this.status.bufferLength = event.BufferLength;\n                    this.status.bufferStatus = event.BufferStatus;\n                    this.status.bufferTime = this.dateFormat.hhmmss(event.BufferTime / 1000);\n                    this.status.droppedFramesCount = event.DroppedFramesCount || 0;\n                    this.status.bitRateStatus = event.BitRateStatus;\n                    this.status.adInfo = event.AdInfo;\n                    this.status.eptBookmark = this.dateFormat.hhmmss(event.EPTBookmark / 1000);\n                }\n                onAdBreakStarted() {\n                    this.status.adPlaying = true;\n                }\n                onAdBreakStopped() {\n                    this.status.adPlaying = false;\n                }\n                onAdStarted() {\n                    this.status.adPlaying = true;\n                }\n                onAdStopped() {\n                    this.status.adPlaying = false;\n                }\n            }\n        });\n})();\n"],"sourceRoot":"/source/"}