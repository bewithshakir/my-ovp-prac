{"version":3,"sources":["ovpApp/directives/fallback-image.js"],"names":[],"mappings":"AAAA;;AAAA,CAAC,YAAY;IACT;;IAEA,QACK,OAAO,mCAAmC,IAC1C,UAAU,iBAAiB;;;IAGhC,SAAS,gBAAgB;;;;;;;QAOrB,IAAI,YAAY;YACZ,MAAM;YACN,UAAU;;QAEd,OAAO;;QAEP,SAAS,KAAK,OAAO,SAAS,OAAO;YACjC,IAAI,SAAS;YACb,IAAI,CAAC,MAAM,OAAO,CAAC,MAAM,OAAO;gBAC5B;mBACG;gBACH,QAAQ,GAAG,SAAS;;;YAGxB,SAAS,aAAa;;gBAElB,MAAM,SAAS,SAAS,UAAU,KAAK;oBACnC,IAAI,OAAO,QAAQ;wBACf,SAAS;wBACT,QAAQ,GAAG,MAAM,UAAU;;;;gBAInC,IAAI,MAAM,kBAAkB,gBAAgB;oBACxC,SAAS;oBACT,QAAQ,GAAG,MAAM,UAAU;uBACxB;oBACH,QAAQ,GAAG,MAAM,MAAM;;;gBAG3B,QAAQ,IAAI,SAAS;;;;KAIhC","file":"ovpApp/directives/fallback-image.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular\n        .module('ovpApp.directives.fallbackImage', [])\n        .directive('fallbackImage', fallbackImage);\n\n    /* @ngInject */\n    function fallbackImage() {\n        // Usage: <img src='foo.jpg' fallback-image='bar.jpg'/>\n        //   or\n        // <img src='foo.jpg' fallback-image='display:none'/>   //special option sets to display none on failure\n        //\n        // Creates: If the image fails to load, an alternate image is loaded in its place. Or, the image is set\n        //     to display none.\n        var directive = {\n            link: link,\n            restrict: 'A'\n        };\n        return directive;\n\n        function link(scope, element, attrs) {\n            var hidden = false;\n            if (!attrs.src && !attrs.ngSrc) {\n                doFallback();\n            } else {\n                element.on('error', doFallback);\n            }\n\n            function doFallback() {\n                //Watch ngSrc to make sure that the data doesn't get set at a later time\n                attrs.$observe('ngSrc', function (src) {\n                    if (src && hidden) {\n                        hidden = false;\n                        element[0].style.display = '';\n                    }\n                });\n\n                if (attrs.fallbackImage === 'display:none') {\n                    hidden = true;\n                    element[0].style.display = 'none';\n                } else {\n                    element[0].src = attrs.fallbackImage;\n                }\n\n                element.off('error', doFallback);\n            }\n        }\n    }\n})();\n"],"sourceRoot":"/source/"}