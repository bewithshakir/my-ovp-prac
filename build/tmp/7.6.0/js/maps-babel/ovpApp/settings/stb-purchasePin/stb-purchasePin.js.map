{"version":3,"sources":["ovpApp/settings/stb-purchasePin/stb-purchasePin.js"],"names":[],"mappings":"AAAA;;AAAC,CAAA,YAAY;;;qNACT;IACA,QAAQ,OAAO,kCAAkC,CAC7C,4BACA,mCACA,sCACA,sCACA,kCACA,8BACA,oBAEH,QAAQ,6BAA6B,2BACrC,WAAW,4BAA4B;;;IAGxC,SAAS,0BAA0B,gBAAgB,mBAAmB,UAAU;QAC5E,OAAO,UAAU,YAAY;YACzB,IAAI,yBAAyB;YAC7B,uBAAuB,eAAe,UAAU;gBAC5C,iBAAiB,SAAS,kBAAkB;gBAC5C,gBAAgB,SAAS,kBAAkB;gBAC3C,YAAY;gBACZ,iBAAiB;;YAErB,uBAAuB,eAAe,YAAY;gBAC9C,iBAAiB,SAAS,kBAAkB;gBAC5C,gBAAgB,SAAS,kBAAkB;gBAC3C,YAAY;gBACZ,iBAAiB;;YAErB,uBAAuB,eAAe,QAAQ;gBAC1C,eAAe,SAAS,kBAAkB;gBAC1C,kBAAkB,kBAAkB,kBAAkB;gBACtD,iBAAiB,SAAS,kBAAkB;gBAC5C,gBAAgB,SAAS,kBAAkB;gBAC3C,YAAY;gBACZ,iBAAiB;;YAErB,uBAAuB,eAAe,SAAS;gBAC3C,eAAe,SAAS,kBAAkB;gBAC1C,kBAAkB,kBAAkB,kBAAkB;gBACtD,iBAAiB,SAAS,kBAAkB;gBAC5C,gBAAgB,SAAS,kBAAkB;gBAC3C,YAAY;gBACZ,iBAAiB;;YAErB,OAAO;;;;;IAKf,SAAS,yBAAyB,QAAQ,YAAY,aAAa,MAAM,oBAAoB,uBACzF,2BAA2B,YAAY,QAAQ,mBAAmB;QAClE,IAAI,aAAa,sBAAsB,OAAO;QAC9C,YAAY,+BAA+B;YACvC,QAAQ;YACR,oBAAoB;YACpB,wBAAwB,0BAA0B;;QAEtD,OAAO,iBAAiB;QACxB,OAAO,2BAA2B;QAClC,OAAO,SAAS;QAChB,OAAO,WAAW;QAClB,OAAO,aAAa;;QAGpB,OAAO,mBAAmB,YAAY;YAClC,IAAI,CAAC,OAAO,UAAU,CAAC,OAAO,UAAU;gBACpC,OAAO,8BAA8B,KAAK,YAAM;oBAC5C,OAAO;oBACP,OAAO,SAAS;oBAChB,OAAO,WAAW;;mBAEnB,IAAI,OAAO,0BAA0B;gBACxC,OAAO,8BAA8B,KAAK,YAAM;oBAC5C,OAAO;;mBAER,IAAI,CAAC,OAAO,0BAA0B;gBACzC,OAAO;;;;QAIf,OAAO,0BAA0B,YAAY;YACzC,OAAO,2BAA2B,CAAC,OAAO;YAC1C,mBAAmB,8BAA8B,YAAY,OAAO,0BAC/D,KAAK,OAAO,QAAQ,OAAO;;;QAGpC,OAAO,SAAS,YAAY;YACxB,mBAAmB,mBAAmB,YAAY,KAAK,UAAA,SAAW;gBAC9D,OAAO,2BAA2B;eACnC,UAAU,OAAO;gBAChB,KAAK,MAAM;gBACX,OAAO,iBAAiB;;YAE5B,IAAI,OAAO,6BAA6B,WAAW;gBAC/C,OAAO,2BAA2B;;;;QAI1C,OAAO,OAAO,YAAY;YACtB,WAAW,WAAW,KAAK,UAAA,UAAY;gBACnC,OAAO,SAAS;gBAChB,WAAW,WAAW,sBAAsB,OAAO;eACpD,UAAU,OAAO;gBAChB,KAAK,MAAM;gBACX,WAAW,WAAW,iBAAiB,kBAAkB,kBAAkB;;YAE/E,OAAO;;;QAGX,OAAO;;KAEV","file":"ovpApp/settings/stb-purchasePin/stb-purchasePin.js","sourcesContent":["(function () {\n    'use strict';\n    angular.module('ovpApp.settings.stbPurchasePin', [\n        'ovpApp.purchasePinDialog',\n        'ovpApp.components.ovp.ovpSwitch',\n        'ovpApp.services.purchasePinService',\n        'ovpApp.services.stbSettingsService',\n        'ovpApp.services.stbPurchasePin',\n        'ovpApp.services.errorCodes',\n        'ovpApp.messages'\n    ])\n    .factory('stbPurchasePinPopUpConfig', stbPurchasePinPopUpConfig)\n    .controller('STBPurchasePinController', STBPurchasePinController);\n\n    /* @ngInject */\n    function stbPurchasePinPopUpConfig(PIN_ENTRY_TYPE, errorCodesService, messages) {\n        return function (pinService) {\n            let purchasePinPopUpConfig = {};\n            purchasePinPopUpConfig[PIN_ENTRY_TYPE.TOGGLE] = {\n                pinInstructions: messages.getMessageForCode('MSG-9053'),\n                pleaseEnterPin: messages.getMessageForCode('MSG-9044'),\n                pinService: pinService,\n                enableForgotPin: false\n            };\n            purchasePinPopUpConfig[PIN_ENTRY_TYPE.VALIDATE] = {\n                pinInstructions: messages.getMessageForCode('MSG-9054'),\n                pleaseEnterPin: messages.getMessageForCode('MSG-9044'),\n                pinService: pinService,\n                enableForgotPin: false\n            };\n            purchasePinPopUpConfig[PIN_ENTRY_TYPE.SAVE] = {\n                headerMessage: messages.getMessageForCode('MSG-9056'),\n                secondaryMessage: errorCodesService.getMessageForCode('TMP-9059'),\n                pinInstructions: messages.getMessageForCode('MSG-9058'),\n                pleaseEnterPin: messages.getMessageForCode('MSG-9044'),\n                pinService: pinService,\n                enableForgotPin: false\n            };\n            purchasePinPopUpConfig[PIN_ENTRY_TYPE.RESET] = {\n                headerMessage: messages.getMessageForCode('MSG-9056'),\n                secondaryMessage: errorCodesService.getMessageForCode('TMP-9059'),\n                pinInstructions: messages.getMessageForCode('MSG-9057'),\n                pleaseEnterPin: messages.getMessageForCode('MSG-9044'),\n                pinService: pinService,\n                enableForgotPin: false\n            };\n            return purchasePinPopUpConfig;\n        };\n    }\n\n    /* @ngInject */\n    function STBPurchasePinController($scope, $rootScope, $controller, $log, StbSettingsService, StbPurchasePinFactory,\n        stbPurchasePinPopUpConfig, currentStb, $state, errorCodesService) {\n        var pinService = StbPurchasePinFactory.create(currentStb);\n        $controller('PurchasePinDialogController', {\n            $scope: $scope,\n            purchasePinService: pinService,\n            purchasePinPopUpConfig: stbPurchasePinPopUpConfig(pinService)\n        });\n        $scope.stbUnavailable = false;\n        $scope.purchasePinEnabledForStb = false;\n        $scope.hasPin = false;\n        $scope.unlocked = false;\n        $scope.currentStb = currentStb;\n\n\n        $scope.togglePinEnabled = function () {\n            if (!$scope.hasPin || !$scope.unlocked) {\n                $scope.handlePurchasePINValidation().then(() => {\n                    $scope.togglePurchasePinForStb();\n                    $scope.hasPin = true;\n                    $scope.unlocked = true;\n                });\n            } else if ($scope.purchasePinEnabledForStb) {\n                $scope.handlePurchasePINValidation().then(() => {\n                    $scope.togglePurchasePinForStb();\n                });\n            } else if (!$scope.purchasePinEnabledForStb) {\n                $scope.togglePurchasePinForStb();\n            }\n        };\n\n        $scope.togglePurchasePinForStb = function () {\n            $scope.purchasePinEnabledForStb = !$scope.purchasePinEnabledForStb;\n            StbSettingsService.setEnablePurchasePINForClient(currentStb, $scope.purchasePinEnabledForStb)\n                .then($scope.setPin, $scope.setPin);\n        };\n\n        $scope.setPin = function () {\n            StbSettingsService.purchasePinEnabled(currentStb).then(enabled => {\n                $scope.purchasePinEnabledForStb = enabled;\n            }, function (error) {\n                $log.error(error);\n                $scope.stbUnavailable = true;\n            });\n            if ($scope.purchasePinEnabledForStb === undefined) {\n                $scope.purchasePinEnabledForStb = false;\n            }\n        };\n\n        $scope.init = function () {\n            pinService.isPINSet().then(pinIsSet => {\n                $scope.hasPin = pinIsSet;\n                $rootScope.$broadcast('pageChangeComplete', $state.current);\n            }, function (error) {\n                $log.error(error);\n                $rootScope.$broadcast('message:growl', errorCodesService.getMessageForCode('WGE-1001'));\n            });\n            $scope.setPin();\n        };\n\n        $scope.init();\n    }\n}());\n"],"sourceRoot":"/source/"}