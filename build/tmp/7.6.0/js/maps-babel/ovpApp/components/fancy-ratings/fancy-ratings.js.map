{"version":3,"sources":["ovpApp/components/fancy-ratings/fancy-ratings.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,CAAC,YAAY,EAAE,SAAS,iBAAiB,QAAQ,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,aAAa,MAAM,IAAI,WAAW,aAAa,WAAW,cAAc,OAAO,WAAW,eAAe,MAAM,IAAI,WAAW,YAAY,WAAW,WAAW,MAAM,OAAO,eAAe,QAAQ,WAAW,KAAK,iBAAiB,OAAO,UAAU,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,iBAAiB,YAAY,WAAW,aAAa,IAAI,aAAa,iBAAiB,aAAa,cAAc,OAAO;;AAEjiB,SAAS,gBAAgB,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;AAJhH,CAAC,YAAY;IACT;;;;;;;;;;;;;;;IAeA,QAAQ,OAAO,mCAAmC,CAAC,kBAC9C,UAAU,gBAAgB;QACvB,UAAU;YACN,QAAQ;YACR,MAAM;YACN,QAAQ;;QAEZ,UAAQ;QAKR,YAAU,CAAA,YAAA;;;;YAEK,SAFG,aAEF,QAAQ;gBAGpB,gBAAgB,MALF;;gBAGV,KAAK,SAAS;;;YAOtB,aAVkB,cAAY,CAAA;gBAW1B,KAAK;gBACL,OANU,SAAA,WAAC,SAAS;oBAChB,IAAI,QAAQ,UAAU,KAAK,WAAW,WAAW;wBAC7C,KAAK,SAAS;;;oBAGlB,IAAI,QAAQ,QAAQ;wBAChB,IAAI,KAAK,SAAS,cAAc;;4BAE5B,KAAK,SAAS,KAAK,UAAU,CAAC,SAAS,KAAK,UAAU,MAAM,WAAW,UAAU;+BAC9E,IAAI,KAAK,SAAS,sBAAsB;;4BAE3C,KAAK,SAAS,KAAK,UAAU,CAAC,SAAS,KAAK,UAAU,KAAK,WAAW,UAAU;;;;oBAIxF,IAAI,QAAQ,QAAQ,QAAQ,QAAQ;wBAChC,KAAK,UAAU,KAAK;;;oBAGxB,IAAI,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,QAAQ;wBAClD,KAAK,WAAW,KAAK;;;eAS9B;gBACC,KAAK;gBACL,OAPgB,SAAA,mBAAG;oBACf,IAAM,UAAU,KAAK,OAAO,YAAY;oBACxC,IAAM,SAAS,KAAK;;oBAEpB,OAAU,UAAO,YAAU,SAAM,sBAAoB,KAAK;;eAS/D;gBACC,KAAK;gBACL,OARiB,SAAA,oBAAG;oBAChB,IAAM,UAAU,KAAK,OAAO,YAAY;oBACxC,IAAM,SAAS,KAAK;;oBAEpB,OAAU,UAAO,YAAU,SAAS,KAAK,SAAM,aAAW,KAAK;;eAUpE;gBACC,KAAK;gBACL,OATc,SAAA,iBAAG;oBACb,IAAI,KAAK,SAAS,sBAAsB;wBACpC,OAAO;2BACJ,IAAI,KAAK,SAAS,cAAc;wBACnC,OAAO;;;;;YAcnB,OA9DkB;;;KAqDzB","file":"ovpApp/components/fancy-ratings/fancy-ratings.js","sourcesContent":["(function () {\n    'use strict';\n\n    /**\n     * fancyRatings\n     *\n     * Displays metacritic or common sense media rating\n     *\n     * Example Usage:\n     * <fancy-ratings rating=\"someInputValue\" type=\"metacritic\"></fancy-ratings>\n     *\n     * Bindings:\n     *    rating: (Number) numerical rating\n     *    type: (String) 'metacritic' or 'common-sense-media'\n     *    height: (Number) Height in pixels of the images. Defaults to 48\n     */\n    angular.module('ovpApp.components.fancy-ratings', ['ovpApp.config'])\n        .component('fancyRatings', {\n            bindings: {\n                rating: '<',\n                type: '<',\n                height: '<'\n            },\n            template: `\n                <div class=\"$ctrl.type\" ng-if=\"$ctrl.rating\">\n                   <img class=\"icon\" ng-src=\"{{$ctrl.iconSrc}}\" alt=\"$ctrl.labelText\">\n                   <img class=\"label\" ng-src=\"{{$ctrl.labelSrc}}\" alt=\"$ctrl.labelText\">\n                </div>`,\n            controller: class FancyRatings {\n                /* @ngInject */\n                constructor(config) {\n                    this.config = config;\n                }\n\n                $onChanges(changes) {\n                    if (changes.height && this.height === undefined) {\n                        this.height = 48;\n                    }\n\n                    if (changes.rating) {\n                        if (this.type === 'metacritic') {\n                            //Force this to a 3 digit string with leading 0s\n                            this.rating = this.rating && (parseInt(this.rating) + 1000).toString().substring(1);\n                        } else if (this.type === 'common-sense-media') {\n                            //Force to a 2 digit string\n                            this.rating = this.rating && (parseInt(this.rating) + 100).toString().substring(1);\n                        }\n                    }\n\n                    if (changes.type || changes.height) {\n                        this.iconSrc = this.calculateIconSrc();\n                    }\n\n                    if (changes.type || changes.height || changes.rating) {\n                        this.labelSrc = this.calculateLabelSrc();\n                    }\n                }\n\n                calculateIconSrc() {\n                    const baseUrl = this.config.image_api + '/supporting';\n                    const prefix = this.getImagePrefix();\n\n                    return `${baseUrl}?image=${prefix}logo-mini&height=${this.height}`;\n                }\n\n                calculateLabelSrc() {\n                    const baseUrl = this.config.image_api + '/supporting';\n                    const prefix = this.getImagePrefix();\n\n                    return `${baseUrl}?image=${prefix}${this.rating}&height=${this.height}`;\n                }\n\n                getImagePrefix() {\n                    if (this.type === 'common-sense-media') {\n                        return 'cs-';\n                    } else if (this.type === 'metacritic') {\n                        return 'mc-';\n                    }\n                }\n            }\n        });\n})();\n"],"sourceRoot":"/source/"}