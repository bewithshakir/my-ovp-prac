{"version":3,"sources":["ovpApp/settings/settings-ui-router.js"],"names":[],"mappings":"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","file":"ovpApp/settings/settings-ui-router.js","sourcesContent":["(function () {\n    'use strict';\n    angular.module('ovpApp.settings.router', [\n        'ui.router',\n        'ovpApp.settings.settingsStateService',\n        'ovpApp.services.purchasePinService',\n        'ovpApp.services.errorCodes',\n        'ovpApp.messages',\n        'ovpApp.settings.devices',\n        'ovpApp.settings.parentalControls',\n        'ovpApp.settings.stb.parentalControls',\n        'ovpApp.settings.stb.parentalControls.titleBlock',\n        'ovpApp.settings.stb.parentalControls.timeBlock',\n        'ovpApp.settings.stb.parentalControls.shareInProgressList',\n        'ovpApp.settings.stb.parentalControls.contentBlock',\n        'ovpApp.settings.parentalControls.channelBlock',\n        'ovpApp.settings.stb.receiverUnavailable',\n        'ovpApp.settings.favorites',\n        'ovpApp.settings.purchasePin',\n        'ovpApp.settings.stbPurchasePin',\n        'ovpApp.settings.accessibility',\n        'ovpApp.services.stbService',\n        'ovpApp.config'\n    ])\n    .config(config);\n\n    /* @ngInject */\n    function config($stateProvider) {\n        // abstract parent state, should redirect to default settings\n        // page, currently favorites\n        $stateProvider.state('ovp.settings', {\n            redirectTo: redirect,\n            url: '/settings',\n            data: {\n                subheaderLabel: 'settings'\n            },\n            resolve: {\n                /* @ngInject */\n                stb: function (stbService) {\n                    return stbService.getCurrentStb();\n                }\n            },\n            views: {\n                appView: {\n                    component: 'settingsMainPage'\n                },\n                'tablist@ovp.settings': {\n                    templateUrl: '/js/ovpApp/settings/setting-tablist/setting-tablist.html'\n                }\n            }\n        });\n\n        $stateProvider.state('ovp.settings.favorites', {\n            redirectTo: redirect,\n            data: {\n                pageTitle: 'Settings - Favorites'\n            },\n            component: 'favorites',\n            url: '/favorites',\n            resolve: {\n                /* @ngInject */\n                channels: (epgsService, favoritesService, $q, $rootScope) => {\n                    const promise = $q.all([\n                        epgsService.getChannels(),\n                        favoritesService.syncFavoriteChannels()\n                    ])\n                    .then(([channels]) => channels);\n\n                    $rootScope.$broadcast('message:loading', promise);\n                    return promise;\n                }\n            }\n        });\n\n        $stateProvider.state('ovp.settings.accessibility', {\n            redirectTo: redirect,\n            data: {\n                pageTitle: 'Settings - Accessibility'\n            },\n            component: 'accessibility',\n            url: '/accessibility'\n        });\n\n        $stateProvider.state('ovp.settings.parentalControls', {\n            redirectTo: redirect,\n            data: {\n                pageTitle: 'Settings - Parental Controls'\n            },\n            url: '/parentalControls',\n            templateUrl: '/js/ovpApp/settings/parentalControls/parentalControls.html'\n        });\n\n        $stateProvider.state('ovp.settings.devices', {\n            redirectTo: redirect,\n            data: {\n                pageTitle: 'Settings - Devices'\n            },\n            url: '/devices',\n            templateUrl: '/js/ovpApp/settings/devices/devices.html'\n        });\n\n        $stateProvider.state('ovp.settings.purchasePin', {\n            redirectTo: redirect,\n            data: {\n                pageTitle: 'Settings - Purchase Pin'\n            },\n            controller: 'PurchasePinController',\n            url: '/purchasePin',\n            templateUrl: '/js/ovpApp/settings/purchasePin/purchasePin.html',\n            resolve: {\n                /* @ngInject */\n                purchaseSwitchFlag: function (purchasePinService, $log, $rootScope, $state, messages,\n                    errorCodesService) {\n                    return purchasePinService.isPINSet().then(pinIsSet => {\n                        var hasPin = pinIsSet;\n                        if (!hasPin) {\n                            return false;\n                        } else {\n                            return purchasePinService.isPurchasePINDisabledForClient().then(result => {\n                                return !result;\n                            });\n                        }\n                    }, function (error) {\n                        $log.error(error);\n                        $rootScope.$broadcast('message:growl', errorCodesService.getMessageForCode('WGE-1001'));\n                        $rootScope.$broadcast('pageChangeComplete', $state.current);\n                    });\n                }\n            }\n        });\n\n        $stateProvider.state('ovp.settings.stb', {\n            redirectTo: redirect,\n            abstract: true,\n            data: {\n                pageTitle: 'Set Top Settings'\n            },\n            resolve: {\n                /* @ngInject */\n                currentStb: function (stbService, $q, $state) {\n                    return stbService.getCurrentStb().then(stb => {\n                        if (!stb) {\n                            $state.go('ovp.livetv');\n                            return $q.reject('No available STB in this account (tried to route to stb settings)');\n                        } else {\n                            return stb;\n                        }\n                    });\n                },\n                /* @ngInject */\n                preferences: function (StbSettingsService, currentStb) {\n                    return StbSettingsService.getPreferences(currentStb, true)\n                        .catch(() => null);\n                },\n                properties: function (StbSettingsService, currentStb) {\n                    return StbSettingsService.getSTBProperties(currentStb)\n                        .catch(() => null);\n                },\n                channelList: (epgsService, $q) => {\n                    const promise = $q.all([\n                        epgsService.getChannels()\n                    ])\n                    .then(([channels]) => channels);\n                    return promise;\n                }\n            },\n            url: '/stb',\n            template: '<ui-view/>'\n        });\n\n        $stateProvider.state('ovp.settings.stb.purchasePin', {\n            redirectTo: redirect,\n            data: {\n                pageTitle: 'Set Top Settings - Purchase Pin'\n            },\n            url: '/purchasePin',\n            controller: 'STBPurchasePinController',\n            templateUrl: '/js/ovpApp/settings/stb-purchasePin/stb-purchasePin.html'\n        });\n\n        $stateProvider.state('ovp.settings.stb.parentalControls', {\n            redirectTo: redirect,\n            data: {\n                pageTitle: 'Settings - STB Parental Controls'\n            },\n            url: '/parentalControls',\n            resolve: {\n                /* @ngInject */\n                isPrimaryAccount: function (parentalControlsService) {\n                    return parentalControlsService.isPrimaryAccount();\n                }\n            },\n            component: 'stbParentalControls'\n        });\n\n        function redirect(transition) {\n            const settingsStateService = transition.injector().get('settingsStateService');\n            const $q = transition.injector().get('$q');\n            const name = transition.to().name;\n            let needsRedirect;\n            if (name === 'ovp.settings') {\n                needsRedirect = $q.resolve(true);\n            } else {\n                needsRedirect = settingsStateService.getState(name)\n                    .then(state => (state && !state.enabled()));\n            }\n\n            return needsRedirect.then(redirect => {\n                if (redirect) {\n                    return settingsStateService.getFallbackState().state;\n                }\n            });\n        }\n    }\n}());\n"],"sourceRoot":"/source/"}