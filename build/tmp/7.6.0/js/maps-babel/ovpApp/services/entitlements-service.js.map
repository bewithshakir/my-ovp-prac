{"version":3,"sources":["ovpApp/services/entitlements-service.js"],"names":[],"mappings":"AAAA;;AAAA,CAAC,YAAY;IACT;;;IAEA,QAAQ,OAAO,uCAAuC,CAClD,4BAEH,QAAQ,uBAAuB;;;IAGhC,SAAS,oBAAoB,IAAI,gBAAgB;QAC7C,IAAI,KAAK;QACT,GAAG,uBAAuB;;QAE1B,OAAO;;;;QAIP,SAAS,QAAQ,GAAG;YAChB,OAAO,QAAQ,QAAQ,KAAK,IAAI,CAAC;;;QAGrC,SAAS,qBAAqB,SAAS;YACnC,UAAU,QAAQ;;YAElB,IAAI,uBAAwB,QAAQ,IAAI;YACxC,IAAI,qBAAqB,SAAS,GAAG;gBACjC,OAAO,GAAG,IAAI,sBAAsB,KAAK,UAAA,WAAa;oBAClD,OAAO,UAAU,KAAK,UAAA,UAAQ;wBAA1B,OAA8B;;;mBAEnC;gBACH,OAAO,GAAG,QAAQ;;;;;;;;QAQ1B,SAAS,qBAAqB,KAAK;YAC/B,OAAO,eAAe,qBAAqB,KAAK,KAAK,UAAA,SAAW;gBAC5D,IAAI,SAAS;;oBAET,OAAO,QAAQ,YAAY,CAAC,QAAQ;;;gBAGxC,OAAO;;;;KAIlB","file":"ovpApp/services/entitlements-service.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular.module('ovpApp.services.entitlementsService', [\n        'ovpApp.services.channel'\n    ])\n    .service('EntitlementsService', EntitlementsService);\n\n    /* @ngInject */\n    function EntitlementsService($q, ChannelService) {\n        let vm = this;\n        vm.isVodNetworkEntitled = isVodNetworkEntitled;\n\n        return vm;\n\n        //////////////////\n\n        function toArray(a) {\n            return angular.isArray(a) ? a : [a];\n        }\n\n        function isVodNetworkEntitled(allVPPs) {\n            allVPPs = toArray(allVPPs);\n\n            let channelCheckPromises =  allVPPs.map(vppVodOnlyIsEntitled);\n            if (channelCheckPromises.length > 0) {\n                return $q.all(channelCheckPromises).then(allChecks => {\n                    return allChecks.some(entitled => entitled);\n                });\n            } else {\n                return $q.resolve(false);\n            }\n        }\n\n        /**\n         * Checks if the channel is VOD only and is entitled\n         * @param vpp The product provider id to check entitlement and type of.\n         */\n        function vppVodOnlyIsEntitled(vpp) {\n            return ChannelService.getChannelByProvider(vpp).then(channel => {\n                if (channel) {\n                    // Only interested in VOD channels, so channel must not be live.\n                    return channel.entitled && !channel.live;\n                }\n                // If channel is not found return false. QAM not supported in VOD only setting\n                return false;\n            });\n        }\n    }\n}());\n"],"sourceRoot":"/source/"}