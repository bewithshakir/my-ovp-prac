{"version":3,"sources":["ovpApp/directives/scroll-cache.js"],"names":[],"mappings":"AAAA;;AAAA,CAAC,YAAY;IACT;;;IAEA,QACK,OAAO,iCAAiC,CACrC,cAEH,UAAU,eAAe;;;IAG9B,SAAS,YAAY,QAAQ,SAAS,UAAU,WAAW,eAAe,YAC1E,aAAa,YAAY,cAAc;;QAEnC,IAAI,YAAY;YACZ,MAAM;YACN,UAAU;;;QAGd,OAAO;;QAEP,SAAS,OAAO;;YAEZ,SAAS,aAAa,KAAK,QAAQ;gBAC/B,IAAI,aAAa,WAAW,QAAQ,YAAY;gBAChD,IAAI,CAAC,YAAY;oBACb,aAAa;;gBAEjB,WAAW,OAAO;gBAClB,WAAW,QAAQ,YAAY,6BAA6B;;;YAGhE,SAAS,aAAa,KAAK;;gBAEvB,IAAI;gBACJ,IAAI,aAAa,WAAW,QAAQ,YAAY;gBAChD,IAAI,cAAc,KAAK;oBACnB,YAAY,WAAW,QAAQ;oBAC/B,OAAO;;gBAEX,OAAO;;;YAGX,SAAS,SAAS;gBACd,IAAI;gBACJ,IAAI,OAAO,UAAU,OAAO,OAAO,UAAU;oBACzC,MAAM,OAAO,OAAO,SAAS;oBAC7B,IAAI,OAAO,OAAO,QAAQ;wBACtB,OAAO,MAAM,OAAO,OAAO;;;oBAG/B,IAAI,OAAO,UAAU,OAAO,OAAO,MAAM;wBACrC,OAAO,MAAM,OAAO,OAAO;;;oBAG/B,OAAO;;;gBAGX,OAAO;;;YAGX,WAAW,IAAI,0BAA0B,YAAM;gBAC3C,IAAI,MAAM;gBACV,IAAI;gBACJ,IAAI,UAAU,QAAQ;oBAClB;uBACG;oBACH,IAAI,KAAK;wBACL,gBAAgB,aAAa;wBAC7B,SAAS,YAAM;4BACX,QAAQ,SAAS,GAAG;2BACrB;;;;;YAKf,aAAa,QAAQ,IAAI,UAAU,YAAY;gBAC3C,IAAM,UAAU,WAAW;gBAC3B,IAAM,WAAW,WAAW,OAAO;gBACnC,IAAM,MAAM;gBACZ,IAAI,WAAQ;;gBAEZ,IAAI,CAAC,KAAK;oBACN;;;gBAGJ,WAAW,IAAI,MAAM;;gBAErB,IAAI,QAAQ,KAAK,WAAW,iBAAiB;oBACzC,IAAI,SAAS,YAAY,KAAK;wBAC1B,IAAI,SAAS,aAAa,SAAS,IAAI;4BACnC,aAAa,KAAK,QAAQ;+BACvB;4BACH,aAAa,KAAK;;;uBAGvB;oBACH,WAAW,WAAW,YAAY;;;;;KAKjD","file":"ovpApp/directives/scroll-cache.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular\n        .module('ovpApp.directives.scrollCache', [\n            'ui.router'\n        ])\n        .directive('scrollCache', scrollCache);\n\n    /* @ngInject */\n    function scrollCache($state, $window, $timeout, $location, $anchorScroll, ovpStorage,\n    storageKeys, $rootScope, $transitions) {\n\n        var directive = {\n            link: link,\n            restrict: 'A'\n        };\n\n        return directive;\n\n        function link() {\n\n            function setScrollPos(key, coords) {\n                var cacheArray = ovpStorage.getItem(storageKeys.onDemandScrollCachePosition);\n                if (!cacheArray) {\n                    cacheArray = {};\n                }\n                cacheArray[key] = coords;\n                ovpStorage.setItem(storageKeys.onDemandScrollCachePosition, cacheArray);\n            }\n\n            function getScrollPos(key) {\n\n                var scrollPos;\n                var cacheArray = ovpStorage.getItem(storageKeys.onDemandScrollCachePosition);\n                if (cacheArray && key) {\n                    scrollPos = cacheArray[key] || 0;\n                    return scrollPos;\n                }\n                return 0;\n            }\n\n            function getKey() {\n                var key;\n                if ($state.params && $state.params.category) {\n                    key = $state.params.category.toString();\n                    if ($state.params.catUrl) {\n                        key += ':' + $state.params.catUrl;\n                    }\n\n                    if ($state.params && $state.params.page) {\n                        key += ':' + $state.params.page;\n                    }\n\n                    return key;\n                }\n\n                return undefined;\n            }\n\n            $rootScope.$on('ondemand:contentLoaded', () => {\n                var key = getKey();\n                var prevScrollPos;\n                if ($location.hash()) {\n                    $anchorScroll();\n                } else {\n                    if (key) {\n                        prevScrollPos = getScrollPos(key);\n                        $timeout(() => {\n                            $window.scrollTo(0, prevScrollPos);\n                        }, 0);\n                    }\n                }\n            });\n\n            $transitions.onStart({}, function (transition) {\n                const toState = transition.to();\n                const toParams = transition.params('to');\n                const key = getKey();\n                let keyParts;\n\n                if (!key) {\n                    return;\n                }\n\n                keyParts = key.split(':');\n\n                if (toState.name.startsWith('ovp.ondemand')) {\n                    if (toParams.category && key) {\n                        if (toParams.category === keyParts[0]) {\n                            setScrollPos(key, $window.pageYOffset);\n                        } else {\n                            setScrollPos(key, 0);\n                        }\n                    }\n                } else {\n                    ovpStorage.removeItem(storageKeys.onDemandScrollCachePosition);\n                }\n            });\n        }\n    }\n})();\n"],"sourceRoot":"/source/"}