{"version":3,"sources":["ovpApp/buyFlow/buyFlow.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,iBAAiB,CAAC,YAAY,EAAE,SAAS,cAAc,KAAK,GAAG,EAAE,IAAI,OAAO,IAAI,IAAI,KAAK,MAAM,IAAI,KAAK,OAAO,IAAI,KAAK,WAAW,IAAI,EAAE,KAAK,IAAI,KAAK,IAAI,OAAO,aAAa,IAAI,EAAE,KAAK,CAAC,KAAK,GAAG,QAAQ,OAAO,KAAK,MAAM,EAAE,KAAK,KAAK,GAAG,QAAQ,IAAI,KAAK,KAAK,WAAW,GAAG,WAAW,OAAO,KAAK,EAAE,KAAK,MAAM,KAAK,eAAe,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,GAAG,WAAW,GAAG,uBAAuB,EAAE,IAAI,IAAI,MAAM,QAAQ,OAAO,QAAQ,OAAO,UAAU,KAAK,GAAG,EAAE,IAAI,MAAM,QAAQ,MAAM,EAAE,OAAO,YAAY,IAAI,OAAO,YAAY,OAAO,MAAM,EAAE,OAAO,cAAc,KAAK,WAAW,EAAE,MAAM,IAAI,UAAU;;AAEvlB,IAAI,eAAe,CAAC,YAAY,EAAE,SAAS,iBAAiB,QAAQ,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,aAAa,MAAM,IAAI,WAAW,aAAa,WAAW,cAAc,OAAO,WAAW,eAAe,MAAM,IAAI,WAAW,YAAY,WAAW,WAAW,MAAM,OAAO,eAAe,QAAQ,WAAW,KAAK,iBAAiB,OAAO,UAAU,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,iBAAiB,YAAY,WAAW,aAAa,IAAI,aAAa,iBAAiB,aAAa,cAAc,OAAO;;AAEjiB,SAAS,gBAAgB,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;AANhH,CAAC,YAAY;IACT;IACA,QAAQ,OAAO,kBAAkB,CAC7B,yBACA,iBACA,0BACA,4BACA,oCACA,gCACA,yBACA,+BACA,0BACA,gCAEH,UAAU,WAAW;QAClB,UAAU;QACV,aAAa;QACb,YAAU,CAAA,YAAA;;;;YAEK,SAFG,QAEF,QAAQ,IAAI,QAAQ,WAAW,eAAe,gBAAgB,OAAO,WAC7E,YAAY,IAAI,MAAM;gBAHtB,gBAAgB,MAAN;;gBAIV,QAAQ,OAAO,MAAM,EAAC,QAAA,QAAQ,IAAA,IAAI,QAAA,QAAQ,WAAA,WAAW,eAAA,eAAe,gBAAA,gBAAgB,OAAA,OAAO,WAAA;oBACvF,YAAA,YAAY,IAAA,IAAI,MAAA;gBACpB,KAAK,SAAS;gBACd,KAAK,aAAa;;;YACtB,aARc,SAAO,CAAA;gBASjB,KAAK;gBACL,OAAG,SAAA,UAAG;oBACF,IAAI,QAAQ;;oBAAhB,KAAK,QAAQ,CAAC;wBACV,QAAQ;wBACR,OAAO;wBACP,IAAI;wBACJ,WAAW;wBACX,WAAW;wBACX,WAAW;4BACP,SAAS;4BACT,UAAU;4BACV,YAAY;;wBAEhB,YAAY,SAAA,aAAM;;;4BAGd,MAAK,WAAW,WAAW,oBAAoB;gCAC3C,SAAS;gCACT,eAAe;gCACf,yBAAyB;gCACzB,oBAAoB;;;4BAGxB,MAAK,eAAe,cAAc,MAAK,SAAS,KAAK,UAAA,MAAQ;gCACzD,MAAK,SAAS,KAAK;+BACpB,YAAM;gCACL,MAAK;;;uBAGd;wBACC,QAAQ;wBACR,OAAO;wBACP,IAAI;wBACJ,WAAW;wBACX,WAAW;wBACX,WAAW;4BACP,SAAS;4BACT,UAAU;4BACV,YAAY;4BACZ,QAAQ;;wBAEZ,YAAY,SAAA,aAAM;4BACd,IAAI,kBAAkB,MAAK,MAAM,GAAG,UACnC,OAAO,UAAC,KAAG;gCAEJ,OAFS,IAAI;+BACpB,IAAI,UAAC,QAAM;gCAGJ,OAHS,OAAO;;;;4BAGxB,MAAK,WAAW,WAAW,oBAAoB;gCAC3C,SAAS;gCACT,eAAe;gCACf,yBAAyB;gCACzB,oBAAoB;;;4BAGxB,MAAK,eAAe,gBAAgB,MAAK,QAAQ,iBAAiB,KAAK,YAAM,IAAI,YAAM;gCACnF,MAAK;;;uBAGd;wBACC,QAAQ;wBACR,OAAO;wBACP,IAAI;wBACJ,WAAW;wBACX,WAAW;wBACX,WAAW;4BACP,SAAS;4BACT,UAAU;4BACV,YAAY;4BACZ,QAAQ;;wBAEZ,YAAY,SAAA,aAAM;4BACd,IAAI,mBAAmB,MAAK,MAAM,GAAG,UACpC,OAAO,UAAC,KAAG;gCAIJ,OAJS,IAAI;+BACpB,IAAI,UAAC,QAAM;gCAKJ,OALS,OAAO;;;;4BAGxB,MAAK,WAAW,WAAW,oBAAoB;gCAC3C,SAAS;gCACT,eAAe;gCACf,yBAAyB;gCACzB,oBAAoB;;;4BAGxB,MAAK,eAAe,kBAAkB,MAAK,QAAQ,kBAAkB,KAAK,YAAM;gCAC5E,MAAK;+BACN,YAAM;gCACL,MAAK;;;uBAGd;wBACC,QAAQ;wBACR,OAAO;wBACP,IAAI;wBACJ,WAAW;4BACP,SAAS;4BACT,UAAU;4BACV,YAAY;;;wBAGhB,WAAW;;;oBAGf,KAAK,eAAe,gBACf,KAAK,UAAA,QAAU;wBACZ,MAAK,YAAY,OAAO,GAAG,OAAO,OAAO,GAAG;wBAC5C,MAAK,MAAM,GAAG,YAAY;wBAC1B,IAAM,UAAU,OAAO,GAAG;wBAC1B,MAAK,UAAU;wBACf,OAAO,MAAK,GAAG,IAAI,CACf,MAAK,eAAe,UAAU,UAC9B,MAAK,eAAe,YAAY;uBAErC,YAAM;wBACL,MAAK;uBAER,KAAK,UAAC,MAAuB;wBAE1B,IAAI,QAAQ,eAFT,MAAkB;;wBAIrB,IAJI,SAAM,MAAA;wBAKV,IALY,WAAQ,MAAA;;wBACpB,MAAK,MAAM,GAAG,YAAY;wBAC1B,MAAK,MAAM,GAAG,YAAY;;;;wBAI1B,IAAI;4BACA,MAAK,MACA,OAAO,UAAC,MAAI;gCAMb,OANkB,KAAK,aAAa,KAAK,UAAU,eAAe;+BACjE,QAAQ,UAAA,MAAQ;;gCAEb,KAAK,UAAU,SAAS;;;gCAGxB,IAAI,KAAK,cAAc,OAAO;oCAC1B,MAAK,WAAW,MAAM;;;0BAGpC,OAAO,IAAI;4BACT,MAAK,KAAK,MAAM,SAAS;;uBAE9B,YAAM;wBACL,MAAK;;;;oBAIb,KAAK,2BAA2B,KAAK,MAAM;;eAQ5C;gBACC,KAAK;gBACL,OAPQ,SAAA,aAAC,MAAM;oBACf,KAAK,YAAY;oBACjB,IAAM,OAAO,KAAK,IAAI,GAAG,KAAK,MAAM,QAAQ,QAAQ;oBACpD,KAAK,MAAM,MAAM,YAAY;oBAC7B,KAAK,aAAa,KAAK,MAAM,MAAM;;;oBAGnC,KAAK,2BAA2B,KAAK,MAAM;;eAS5C;gBACC,KAAK;gBACL,OARI,SAAA,SAAC,MAAM;oBACX,KAAK,YAAY;oBACjB,IAAM,OAAO,KAAK,IAAI,KAAK,MAAM,SAAS,GAAG,KAAK,MAAM,QAAQ,QAAQ;oBACxE,KAAK,MAAM,MAAM,YAAY;oBAC7B,KAAK,aAAa,KAAK,MAAM,MAAM;oBACnC,IAAI,KAAK,YAAY;wBACjB,KAAK,WAAW,KAAK;;;;oBAIzB,KAAK,2BAA2B,KAAK,MAAM;;eAU5C;gBACC,KAAK;gBACL,OATO,SAAA,YAAC,MAAM,OAAO;oBACrB,IAAI,UAAU,KAAK,KAAK,MAAM,GAAG,cAAc,MAAM;wBACjD,OAAO;;oBAEX,IAAI,KAAK,aAAa,KAAK,MAAM,QAAQ,MAAM,KAAK,MAAM,QAAQ,GAAG,cAAc,MAAM;wBACrF,OAAO;2BACJ;wBACH,OAAO;;;eAYZ;gBACC,KAAK;gBACL,OAVM,SAAA,WAAC,MAAM;oBACb,KAAK,MAAM,QAAQ,UAAA,GAAC;wBAWZ,OAXgB,EAAE,YAAY;;oBACtC,KAAK,YAAY;;;oBAGjB,KAAK,2BAA2B;;;;;;;;eAoBjC;gBACC,KAAK;gBACL,OAdsB,SAAA,2BAAC,MAAM;oBAC7B,IAAI;;wBAEA,IAAI,CAAC,QAAQ,CAAC,KAAK,WAAW;4BAC1B;;;wBAGJ,KAAK,WAAW,MAAM,yBAAyB;4BAC3C,SAAS;gCACL,WAAW,KAAK;;;;;;wBAMxB,IAAI,KAAK,UAAU,YAAY;;;4BAG3B,IAAI,KAAK,UAAU,QAAQ;gCACvB,KAAK,WAAW,MAAM;;+BAGvB;;4BAEH,KAAK,WAAW,MAAM;;sBAE5B,OAAO,IAAI;wBACT,KAAK,KAAK,MAAM,SAAS;;;;;;;;;eAsB9B;gBACC,KAAK;gBACL,OAf6B,SAAA,oCAAG;oBAChC,IAAI,SAAS;;oBAEb,IAAI;wBACA,KAAK,GAAG,WAAW,KACf,MAAM,OAAO,KAAK,MAAM,GAAG,WACvB,KAAK,MAAM,GAAG,YACjB,OAAO,UAAC,KAAG;4BAaR,OAba,IAAI;2BACpB,QAAQ,UAAC,QAAW;4BACjB,OAAO,OAAO,MAAM,OAAO;;sBAErC,OAAO,IAAI;wBACT,KAAK,KAAK,MAAM,SAAS;;;oBAG7B,OAAO;;eAeR;gBACC,KAAK;gBACL,OAdO,SAAA,YAAC,OAAO,WAAW;oBAC1B,IAAM,OAAO,KAAK,OAAO,OAAO,UAAC,GAAC;wBAe1B,OAf+B,EAAE,cAAc;;oBACvD,IAAI,KAAK,QAAQ;wBACb,IAAM,IAAI,KAAK,OAAO,QAAQ,KAAK;wBACnC,IAAI,MAAM,CAAC,GAAG;4BACV,KAAK,OAAO,OAAO,GAAG;;;oBAG9B,KAAK,OAAO,KAAK,EAAC,WAAW,WAAW,OAAO,WAAW;;eAkB3D;gBACC,KAAK;gBACL,OAjBC,SAAA,QAAG;oBACJ,OAAO,KAAK,OAAO,OAAO,UAAC,KAAK,SAAY;wBACxC,OAAO,MAAM,QAAQ;uBACtB;;eAmBJ;gBACC,KAAK;gBACL,OAlBE,SAAA,SAAG;;oBAEL,KAAK,WAAW,WAAW,oBAAoB;wBAC3C,SAAS;wBACT,eAAe;wBACf,yBAAyB;wBACzB,oBAAoB;wBACpB,gBAAgB,KAAK;;;oBAGzB,KAAK,OAAO,GAAG;;eAoBhB;gBACC,KAAK;gBACL,OAnBI,SAAA,WAAG;oBAoBH,IAAI,SAAS;;;oBAjBjB,KAAK,WAAW,WAAW,oBAAoB;wBAC3C,SAAS;wBACT,eAAe;wBACf,yBAAyB;wBACzB,oBAAoB;wBACpB,gBAAgB,KAAK;;;oBAGzB,OAAO,KAAK,eAAe,SAAS,KAAK,QAAQ,KAAK,YAAM;wBACxD,OAAK,OAAO,GAAG;uBAChB,YAAM;wBACL,OAAK;;;eAuBV;gBACC,KAAK;gBACL,OArBG,SAAA,UAAG;oBACN,OAAO,KAAK,eAAe,WAAW,KAAK;;eAuB5C;gBACC,KAAK;gBACL,OAtBM,SAAA,aAAG;oBAuBL,IAAI,SAAS;;oBAtBjB,KAAK,UAAU,KAAK,UAAA,MAAQ;wBACxB,OAAK,OAAO;;;eA2BjB;gBACC,KAAK;gBACL,OAzBU,SAAA,iBAAG;oBA0BT,IAAI,SAAS;;oBAzBjB,KAAK,UAAU,KAAK;wBAChB,MAAM;wBACN,OAAO;wBACP,MAAM;wBACN,mBAAmB;wBACnB,iBAAiB,SAAA,kBAAM;4BACnB,OAAK,UAAU;;wBAEnB,SAAS,SAAA,UAAM;4BACX,OAAK,OAAO,GAAG;;;;;;YAiC3B,OAnWc;;;KAwUrB","file":"ovpApp/buyFlow/buyFlow.js","sourcesContent":["(function () {\n    'use strict';\n    angular.module('ovpApp.buyFlow', [\n        'ovpApp.buyFlow.router',\n        'ovpApp.config',\n        'ovpApp.buyFlow.service',\n        'ovpApp.buyFlow.baseOffer',\n        'ovpApp.buyFlow.extrasAndPremiums',\n        'ovpApp.buyFlow.collapsedStep',\n        'ovpApp.buyFlow.review',\n        'ovpApp.buyFlow.confirmation',\n        'ovpApp.buyFlow.welcome',\n        'ovpApp.components.modalKite'\n    ])\n    .component('buyFlow', {\n        bindings: {},\n        templateUrl: '/js/ovpApp/buyFlow/buyFlow.html',\n        controller: class BuyFlow {\n            /* @ngInject */\n            constructor(config, $q, $state, $location, $anchorScroll, buyFlowService, alert, modalKite,\n                $rootScope, rx, $log) {\n                angular.extend(this, {config, $q, $state, $location, $anchorScroll, buyFlowService, alert, modalKite,\n                    $rootScope, rx, $log});\n                this.prices = [];\n                this.activeStep = 1;\n            }\n\n            $onInit() {\n                this.steps = [{\n                    number: 1,\n                    title: 'Spectrum TV Stream',\n                    id: 'base',\n                    offerings: [],\n                    collapsed: false,\n                    analytics: {\n                        context: 'stream2',\n                        pageName: 'stream2PackageDescription',\n                        isLazyLoad: false\n                    },\n                    onContinue: () => {\n\n                        // Analytics\n                        this.$rootScope.$broadcast('Analytics:select', {\n                            context: 'stream2',\n                            elementUiName: 'Select and Continue',\n                            elementStandardizedName: 'confirm',\n                            featureCurrentStep: 2\n                        });\n\n                        this.buyFlowService.addBaseToCart(this.offerId).then(cart => {\n                            this.cartId = cart.id;\n                        }, () => {\n                            this.openErrorModal();\n                        });\n                    }\n                }, {\n                    number: 2,\n                    title: 'Optional Extras',\n                    id: 'extras',\n                    offerings: [],\n                    collapsed: true,\n                    analytics: {\n                        context: 'stream2',\n                        pageName: 'stream2AddOns',\n                        isLazyLoad: true,\n                        loaded: false\n                    },\n                    onContinue: () => {\n                        let selectedBundles = this.steps[1].offerings\n                        .filter((val) => val.checked)\n                        .map((bundle) => bundle.id);\n\n                        // Analytics\n                        this.$rootScope.$broadcast('Analytics:select', {\n                            context: 'stream2',\n                            elementUiName: 'Continue',\n                            elementStandardizedName: 'confirm',\n                            featureCurrentStep: 3\n                        });\n\n                        this.buyFlowService.addExtrasToCart(this.cartId, selectedBundles).then(() => {}, () => {\n                            this.openErrorModal();\n                        });\n                    }\n                }, {\n                    number: 3,\n                    title: 'Premiums',\n                    id: 'premiums',\n                    offerings: [],\n                    collapsed: true,\n                    analytics: {\n                        context: 'stream2',\n                        pageName: 'stream2Premiums',\n                        isLazyLoad: true,\n                        loaded: false\n                    },\n                    onContinue: () => {\n                        let selectedPremiums = this.steps[2].offerings\n                        .filter((val) => val.checked)\n                        .map((bundle) => bundle.id);\n\n                        // Analytics\n                        this.$rootScope.$broadcast('Analytics:select', {\n                            context: 'stream2',\n                            elementUiName: 'Continue',\n                            elementStandardizedName: 'confirm',\n                            featureCurrentStep: 4\n                        });\n\n                        this.buyFlowService.addPremiumsToCart(this.cartId, selectedPremiums).then(() => {\n                            this.updateCart();\n                        }, () => {\n                            this.openErrorModal();\n                        });\n                    }\n                }, {\n                    number: 4,\n                    title: 'Review & Purchase',\n                    id: 'review',\n                    analytics: {\n                        context: 'stream2',\n                        pageName: 'stream2PurchaseAgreement',\n                        isLazyLoad: false\n                    },\n\n                    collapsed: true\n                }];\n\n                this.buyFlowService.getBaseOffers()\n                    .then(result => {\n                        this.updatePrice(result[0].price, result[0].name);\n                        this.steps[0].offerings = result;\n                        const offerId = result[0].id;\n                        this.offerId = offerId;\n                        return this.$q.all([\n                            this.buyFlowService.getExtras(offerId),\n                            this.buyFlowService.getPremiums(offerId)\n                        ]);\n                    }, () => {\n                        this.openErrorModal();\n                    })\n                    .then(([extras, premiums]) => {\n                        this.steps[1].offerings = extras;\n                        this.steps[2].offerings = premiums;\n\n                        // Analytics: Lazily loaded steps/pages now have all content (barring thumbnails),\n                        // and can be fully rendered, not just partially rendered.\n                        try {\n                            this.steps\n                                .filter((step) => step.analytics && step.analytics.isLazyLoad === true)\n                                .forEach(step => {\n                                    // Mark this step as fully loaded.\n                                    step.analytics.loaded = true;\n\n                                    // Issue page complete if this is the active step right now.\n                                    if (step.collapsed === false) {\n                                        this.$rootScope.$emit('Analytics:pageChangeComplete');\n                                    }\n                                });\n                        } catch (ex) {\n                            this.$log.error('Error', ex);\n                        }\n                    }, () => {\n                        this.openErrorModal();\n                    });\n\n                // Analytics: Record that first page is displayed to user.\n                this.analyticsPageChangeForStep(this.steps[0]);\n            }\n\n            previousStep(step) {\n                step.collapsed = true;\n                const prev = Math.max(0, this.steps.indexOf(step) - 1);\n                this.steps[prev].collapsed = false;\n                this.activeStep = this.steps[prev].number;\n\n                // Analytics\n                this.analyticsPageChangeForStep(this.steps[prev]);\n            }\n\n            nextStep(step) {\n                step.collapsed = true;\n                const next = Math.min(this.steps.length - 1, this.steps.indexOf(step) + 1);\n                this.steps[next].collapsed = false;\n                this.activeStep = this.steps[next].number;\n                if (step.onContinue) {\n                    step.onContinue.call(this);\n                }\n\n                // Analytics (must be after onContinue())\n                this.analyticsPageChangeForStep(this.steps[next]);\n            }\n\n            showDivider(step, index) {\n                if (index === 0 && this.steps[0].collapsed === true) {\n                    return true;\n                }\n                if (step.collapsed && this.steps[index - 1] && this.steps[index - 1].collapsed === true) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n\n            titleClick(step) {\n                this.steps.forEach(s => s.collapsed = true);\n                step.collapsed = false;\n\n                // Analytics\n                this.analyticsPageChangeForStep(step);\n            }\n\n            /**\n             * Emit pageChange events for given step for analytics purposes.\n             *\n             * @param step The step for which pageChange events are needed.\n             */\n            analyticsPageChangeForStep(step) {\n                try {\n                    // Do nothing if no step or analytics\n                    if (!step || !step.analytics) {\n                        return;\n                    }\n\n                    this.$rootScope.$emit('Analytics:route-start', {\n                        toState: {\n                            analytics: step.analytics\n                        }\n                    });\n\n                    // Lazily loaded pages require the partial-render event before\n                    // the pageChangeComplete event.\n                    if (step.analytics.isLazyLoad) {\n\n                        // Is page fully loaded?\n                        if (step.analytics.loaded) {\n                            this.$rootScope.$emit('Analytics:pageChangeComplete');\n                        }\n\n                    } else {\n                        // Page change is complete.\n                        this.$rootScope.$emit('Analytics:pageChangeComplete');\n                    }\n                } catch (ex) {\n                    this.$log.error('Error', ex);\n                }\n            }\n\n            /**\n             * Collect the selected addOns for inclusion in analytics event.\n             *\n             * @return Map object containing selected bundle and premium IDs to names.\n             */\n            analyticsCollectSelectedOfferings() {\n                let addOns = {};\n\n                try {\n                    this.rx.Observable.from(\n                        Array.concat(this.steps[1].offerings,\n                            this.steps[2].offerings))\n                        .filter((val) => val.checked)\n                        .forEach((bundle) => {\n                            addOns[bundle.id] = bundle.name;\n                        });\n                } catch (ex) {\n                    this.$log.error('Error', ex);\n                }\n\n                return addOns;\n            }\n\n            updatePrice(price, component) {\n                const curr = this.prices.filter((p) => p.component === component);\n                if (curr.length) {\n                    const i = this.prices.indexOf(curr[0]);\n                    if (i !== -1) {\n                        this.prices.splice(i, 1);\n                    }\n                }\n                this.prices.push({component: component, price: parseFloat(price)});\n            }\n\n            price() {\n                return this.prices.reduce((acc, current) => {\n                    return acc + current.price;\n                }, 0);\n            }\n\n            cancel() {\n                // Analytics (must happen before the navigation)\n                this.$rootScope.$broadcast('Analytics:select', {\n                    context: 'stream2',\n                    elementUiName: 'Decline',\n                    elementStandardizedName: 'cancel',\n                    featureCurrentStep: 5,\n                    addOnsSelected: this.analyticsCollectSelectedOfferings()\n                });\n\n                this.$state.go('buyFlow.welcome');\n            }\n\n            purchase() {\n\n                // Analytics (must happen before the navigation)\n                this.$rootScope.$broadcast('Analytics:select', {\n                    context: 'stream2',\n                    elementUiName: 'Agree & Purchase',\n                    elementStandardizedName: 'confirm',\n                    featureCurrentStep: 5,\n                    addOnsSelected: this.analyticsCollectSelectedOfferings()\n                });\n\n                return this.buyFlowService.purchase(this.cartId).then(() => {\n                    this.$state.go('buyFlow.confirmation');\n                }, () => {\n                    this.openErrorModal();\n                });\n            }\n\n            getCart() {\n                return this.buyFlowService.getSummary(this.cartId);\n            }\n\n            updateCart() {\n                this.getCart().then(cart => {\n                    this.cart = cart;\n                });\n            }\n\n            openErrorModal() {\n                this.modalKite.open({\n                    size: 'lg',\n                    title: 'Unable to Complete Request.',\n                    body: 'We’re sorry, something didn\\'t work quite right, but there\\'s been no charge.',\n                    primaryButtonText: 'OK',\n                    onPrimaryButton: () => {\n                        this.modalKite.close();\n                    },\n                    onClose: () => {\n                        this.$state.go('buyFlow.welcome');\n                    }\n                });\n            }\n        }\n    });\n})();\n"],"sourceRoot":"/source/"}